[
  {
    "id": "514b92a657cdc65150000006",
    "name": "Multiples of 3 or 5",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "54ff3102c1bad923760001f3",
    "name": "Vowel Count",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Utilities"
    ]
  },
  {
    "id": "53da3dbb4a5168369a0000fe",
    "name": "Even or Odd",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "54da5a58ea159efa38000836",
    "name": "Find the odd int",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "50654ddff44f800200000004",
    "name": "Multiply",
    "approved": true,
    "tags": [
      "Bugs"
    ]
  },
  {
    "id": "52fba66badcd10859f00097e",
    "name": "Disemvowel Trolls",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "546e2562b03326a88e000020",
    "name": "Square Every Digit",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5264d2b162488dc400000001",
    "name": "Stop gninnipS My sdroW!",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Formatting",
      "Logic"
    ]
  },
  {
    "id": "541c8630095125aba6000c00",
    "name": "Sum of Digits / Digital Root",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Arithmetic"
    ]
  },
  {
    "id": "523f5d21c841566fde000009",
    "name": "Array.diff",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5266876b8f4bf2da9b000362",
    "name": "Who likes it?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Formatting",
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "554b4ac871d6813a03000035",
    "name": "Highest and Lowest",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "526571aae218b8ee490006f4",
    "name": "Bit Counting",
    "approved": true,
    "tags": [
      "Algorithms",
      "Bits",
      "Binary"
    ]
  },
  {
    "id": "525f50e3b73515a6db000b83",
    "name": "Create Phone Number",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Strings",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Formatting",
      "Logic",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5467e4d82edf8bbf40000155",
    "name": "Descending Order",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5667e8f4e3f572a8f2000039",
    "name": "Mumbling",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56747fd5cb988479af000028",
    "name": "Get the Middle Character",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "54c27a33fb7da0db0100040e",
    "name": "You're a square!",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5526fc09a1bbd946250002dc",
    "name": "Find The Parity Outlier",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "54ba84be607a92aa900000f1",
    "name": "Isograms",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "54bf1c2cd5b56cc47f0007a1",
    "name": "Counting Duplicates",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "53dbd5315a3c69eed20002dd",
    "name": "List Filtering",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures",
      "Filtering",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "54b42f9314d9229fd6000d9c",
    "name": "Duplicate Encoder",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "55908aad6620c066bc00002a",
    "name": "Exes and Ohs",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "54da539698b8a2ad76000228",
    "name": "Take a Ten Minute Walk",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5390bac347d09b7da40006f6",
    "name": "Jaden Casing Strings",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "57cebe1dc6fdc20c57000ac9",
    "name": "Shortest Word",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5715eaedb436cf5606000381",
    "name": "Sum of positive",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Numbers"
    ]
  },
  {
    "id": "55bf01e5a717a0d57e0000ec",
    "name": "Persistent Bugger.",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "56dec885c54a926dcd001095",
    "name": "Opposite number",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "546f922b54af40e1e90001da",
    "name": "Replace With Alphabet Position",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "554e4a2f232cdd87d9000038",
    "name": "Complementary DNA",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "55685cd7ad70877c23000102",
    "name": "Return Negative",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5412509bd436bd33920011bc",
    "name": "Credit Card Mask",
    "approved": true,
    "tags": [
      "Algorithms",
      "Utilities",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "53369039d7ab3ac506000467",
    "name": "Convert boolean values to strings 'Yes' or 'No'.",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Booleans",
      "Data Types",
      "Best Practices"
    ]
  },
  {
    "id": "56bc28ad5bdaeb48760009b0",
    "name": "Remove First and Last Character",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Basic Language Features",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5168bb5dfe9a00b126000018",
    "name": "Reversed Strings",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "558fc85d8fd1938afb000014",
    "name": "Sum of two lowest positive integers",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "55f2b110f61eb01779000053",
    "name": "Beginner Series #3 Sum of Numbers",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5265326f5fda8eb1160004c8",
    "name": "Convert a Number to a String!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Type Casting",
      "Numbers",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "57a0e5c372292dd76d000d7e",
    "name": "String repeat",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "556deca17c58da83c00002db",
    "name": "Tribonacci Sequence",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Sequences",
      "Arrays",
      "Data Types",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "55c45be3b2079eccff00010f",
    "name": "Your order,  please",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "563b662a59afc2b5120000c6",
    "name": "Growth of a Population",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "54b724efac3d5402db00065e",
    "name": "Decode the Morse code ",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5656b6906de340bd1b0000ac",
    "name": "Two to One",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55a2d7ebe362935a210000b2",
    "name": "Find the smallest integer in the array",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "54e6533c92449cc251001667",
    "name": "Unique In Order",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Advanced Language Features",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5552101f47fc5178b1000050",
    "name": "Playing with digits",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "55d24f55d7dd296eb9000030",
    "name": "Grasshopper - Summation",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5679aa472b8f57fb8c000047",
    "name": "Equal Sides Of An Array",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "57eae20f5500ad98e50002c5",
    "name": "Remove String Spaces",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "517abf86da9663f1d2000003",
    "name": "Convert string to camel case",
    "approved": true,
    "tags": [
      "Algorithms",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings"
    ]
  },
  {
    "id": "56269eb78ad2e4ced1000013",
    "name": "Find the next perfect square!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Algebra",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "55b42574ff091733d900002f",
    "name": "Friend or Foe?",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5502c9e7b3216ec63c0001aa",
    "name": "Categorize New Member",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Rules"
    ]
  },
  {
    "id": "56541980fa08ab47a0000040",
    "name": "Printer Errors",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "515e271a311df0350d00000f",
    "name": "Square(n) Sum",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Arrays",
      "Data Types",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "55f8a9c06c018a0d6e000132",
    "name": "Regex validate PIN code",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "54edbc7200b811e956000556",
    "name": "Counting sheep...",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "56606694ec01347ce800001b",
    "name": "Is this a triangle?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Utilities"
    ]
  },
  {
    "id": "551f37452ff852b7bd000139",
    "name": "Binary Addition",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Binary"
    ]
  },
  {
    "id": "55fd2d567d94ac3bc9000064",
    "name": "Sum of odd numbers",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Lists",
      "Data Structures",
      "Numbers",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5287e858c6b5a9678200083c",
    "name": "Does my number look big in this?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "578553c3a1b8d5c40300037c",
    "name": "Ones and Zeros",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "545cedaa9943f7fe7b000048",
    "name": "Detect Pangram",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Data Structures"
    ]
  },
  {
    "id": "582cb0224e56e068d800003c",
    "name": "Keep Hydrated!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Data Types",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "5545f109004975ea66000086",
    "name": "Is n divisible by x and y?",
    "approved": true,
    "tags": [
      "Refactoring"
    ]
  },
  {
    "id": "5a3fe3dde1ce0e8ed6000097",
    "name": "Century From Year",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Basic Language Features",
      "Dates/Time"
    ]
  },
  {
    "id": "520b9d2ad5c005041100000f",
    "name": "Simple Pig Latin",
    "approved": true,
    "tags": [
      "Algorithms",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings"
    ]
  },
  {
    "id": "52597aa56021e91c93000cb0",
    "name": "Moving Zeros To The End",
    "approved": true,
    "tags": [
      "Algorithms",
      "Interview Questions",
      "Arrays",
      "Data Types",
      "Sorting",
      "Logic"
    ]
  },
  {
    "id": "5648b12ce68d9daa6b000099",
    "name": "Number of People in the Bus",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57356c55867b9b7a60000bd7",
    "name": "Basic Mathematical Operations",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Operators"
    ]
  },
  {
    "id": "5839edaa6754d6fec10000a2",
    "name": "Find the missing letter",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "585d7d5adb20cf33cb000235",
    "name": "Find the unique number",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "57eadb7ecd143f4c9c0000a3",
    "name": "Abbreviate a Two Word Name",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "544aed4c4a30184e960010f4",
    "name": "Find the divisors! ",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "52774a314c2333f0a7000688",
    "name": "Valid Parentheses",
    "approved": true,
    "tags": [
      "Algorithms",
      "Validation",
      "Logic",
      "Utilities"
    ]
  },
  {
    "id": "578aa45ee9fd15ff4600090d",
    "name": "Sort the odd",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5583090cbe83f4fd8c000051",
    "name": "Convert number to reversed array of digits",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "515de9ae9dcfc28eb6000001",
    "name": "Split Strings",
    "approved": true,
    "tags": [
      "Algorithms",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "52685f7382004e774f0001f7",
    "name": "Human Readable Time",
    "approved": true,
    "tags": [
      "Algorithms",
      "Dates/Time",
      "Data Types",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "56676e8fabd2d1ff3000000c",
    "name": "A Needle in the Haystack",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "521c2db8ddc89b9b7a0000c1",
    "name": "Snail",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "51f2d1cafc9c0f745c00037d",
    "name": "String ends with?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "576757b1df89ecf5bd00073b",
    "name": "Build Tower",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Basic Language Features"
    ]
  },
  {
    "id": "5592e3bd57b64d00f3000047",
    "name": "Build a pile of Cubes",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Optimization"
    ]
  },
  {
    "id": "544675c6f971f7399a000e79",
    "name": "Convert a String to a Number!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Parsing",
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "550f22f4d758534c1100025a",
    "name": "Directions Reduction",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5949481f86420f59480000e7",
    "name": "Odd or Even?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "550498447451fbbd7600041c",
    "name": "Are they the \"same\"?",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57f781872e3d8ca2a000007e",
    "name": "Beginner - Lost Without a Map",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Numbers"
    ]
  },
  {
    "id": "523b4ff7adca849afe000035",
    "name": "Function 1 - hello world",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "523a86aa4230ebb5420001e1",
    "name": "Where my anagrams at?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5262119038c0985a5b00029f",
    "name": "Is a number prime?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "554ca54ffa7d91b236000023",
    "name": "Delete occurrences of an element if it occurs more than n times",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "576bb71bbbcf0951d5000044",
    "name": "Count of positives / sum of negatives",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Lists",
      "Data Structures",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "513e08acc600c94f01000001",
    "name": "RGB To Hex Conversion",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "583203e6eb35d7980400002a",
    "name": "Count the smiley faces!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "56a5d994ac971f1ac500003e",
    "name": "Consecutive strings",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5899dc03bc95b1bf1b0000ad",
    "name": "Invert values",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Integers",
      "Data Types",
      "Numbers",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "57eb8fcdf670e99d9b000272",
    "name": "Highest Scoring Word",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays",
      "Numbers"
    ]
  },
  {
    "id": "5277c8a221e209d3f6000b56",
    "name": "Valid Braces",
    "approved": true,
    "tags": [
      "Algorithms",
      "Validation",
      "Logic",
      "Utilities"
    ]
  },
  {
    "id": "55a70521798b14d4750000a4",
    "name": "Returning Strings",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "51c8991dee245d7ddf00000e",
    "name": "Reversed Words",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "555eded1ad94b00403000071",
    "name": "Sum of the first nth term of Series",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Sequences",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "55f9bca8ecaa9eac7100004a",
    "name": "Beginner Series #2 Clock",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5259b20d6021e9e14c0010d4",
    "name": "Reverse words",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "525f3eda17c7cd9f9e000b39",
    "name": "Calculating with Functions",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Higher-order Functions"
    ]
  },
  {
    "id": "57a2013acf1fa5bfc4000921",
    "name": "Calculate average ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "55225023e1be1ec8bc000390",
    "name": "Jenny's secret message",
    "approved": true,
    "tags": [
      "Bugs",
      "Conditional Statements",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "52742f58faf5485cae000b9a",
    "name": "Human readable duration format",
    "approved": true,
    "tags": [
      "Algorithms",
      "Formats",
      "Strings",
      "Data Types",
      "Dates/Time",
      "Formatting",
      "Logic"
    ]
  },
  {
    "id": "57cc975ed542d3148f00015b",
    "name": "You only need one - Beginner",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Booleans",
      "Data Types",
      "Strings",
      "Numbers",
      "Arrays"
    ]
  },
  {
    "id": "563e320cee5dddcf77000158",
    "name": "Get the mean of an array",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5544c7a5cb454edb3c000047",
    "name": "Bouncing Balls",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a00e05cc374cb34d100000d",
    "name": "Reversed sequence ",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "551b4501ac0447318f0009cd",
    "name": "Convert a Boolean to a String",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Booleans",
      "Data Types",
      "Strings",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "57eae65a4321032ce000002d",
    "name": "Fake Binary",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "5842df8ccbd22792a4000245",
    "name": "Write Number in Expanded Form",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Numbers",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "550554fd08b86f84fe000a58",
    "name": "Which are  in?",
    "approved": true,
    "tags": [
      "Refactoring",
      "Arrays",
      "Data Types",
      "Search",
      "Algorithms",
      "Logic",
      "Lists",
      "Data Structures",
      "Strings"
    ]
  },
  {
    "id": "57a429e253ba3381850000fb",
    "name": "Calculate BMI",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "563cf89eb4747c5fb100001b",
    "name": "Remove the minimum",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "57a0556c7cb1f31ab3000ad7",
    "name": "MakeUpperCase",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a2be17aee1aaefe2a000151",
    "name": "Array plus array",
    "approved": true,
    "tags": [
      "Bugs",
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Numbers",
      "Basic Language Features"
    ]
  },
  {
    "id": "530e15517bc88ac656000716",
    "name": "Rot13",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Ciphers",
      "Algorithms",
      "Cryptography",
      "Logic",
      "Security"
    ]
  },
  {
    "id": "55f9b48403f6b87a7c0000bd",
    "name": "Beginner Series #1 School Paperwork",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59ca8246d751df55cc00014c",
    "name": "Is he gonna survive?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Booleans",
      "Data Types"
    ]
  },
  {
    "id": "56f6ad906b88de513f000d96",
    "name": "Do I get a bonus?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Booleans",
      "Data Types",
      "Strings",
      "Numbers"
    ]
  },
  {
    "id": "54521e9ec8e60bc4de000d6c",
    "name": "Maximum  subarray sum",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Lists",
      "Data Structures",
      "Dynamic Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "57f780909f7e8e3183000078",
    "name": "Beginner - Reduce but Grow",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Numbers"
    ]
  },
  {
    "id": "576b93db1129fcf2200001e6",
    "name": "Sum without highest and lowest number",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Basic Language Features"
    ]
  },
  {
    "id": "5556282156230d0e5e000089",
    "name": "DNA to RNA Conversion",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "577a98a6ae28071780000989",
    "name": "Find Maximum and Minimum Values of a List",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Basic Language Features"
    ]
  },
  {
    "id": "529bf0e9bdf7657179000008",
    "name": "Sudoku Solution Validator",
    "approved": true,
    "tags": [
      "Algorithms",
      "Data Structures",
      "Logic",
      "Validation"
    ]
  },
  {
    "id": "56f69d9f9400f508fb000ba7",
    "name": "Count the Monkeys!",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Fundamentals",
      "Ranges",
      "Basic Language Features",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "5601409514fc93442500010b",
    "name": "How good are you really?",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "583710ccaa6717322c000105",
    "name": "Simple multiplication",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57b06f90e298a7b53d000a86",
    "name": "The Supermarket Queue",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5bb904724c47249b10000131",
    "name": "Total amount of points",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "53dc54212259ed3d4f00071c",
    "name": "Sum Arrays",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5541f58a944b85ce6d00006a",
    "name": "Product of consecutive Fib numbers",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "555086d53eac039a2a000083",
    "name": "Opposites Attract",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5861d28f124b35723e00005e",
    "name": "Will you make it?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "53ee5429ba190077850011d4",
    "name": "You Can't Code Under Pressure #1",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Integers"
    ]
  },
  {
    "id": "58f5c63f1e26ecda7e000029",
    "name": "Mexican Wave",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "53af2b8861023f1d88000832",
    "name": "Are You Playing Banjo?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5208f99aee097e6552000148",
    "name": "Break camelCase",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Formatting",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "55c6126177c9441a570000cc",
    "name": "Weight for weight",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "51b62bf6a9c58071c600001b",
    "name": "Roman Numerals Encoder",
    "approved": true,
    "tags": [
      "Algorithms",
      "Encoding",
      "Logic"
    ]
  },
  {
    "id": "559590633066759614000063",
    "name": "The highest profit wins!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5626b561280a42ecc50000d1",
    "name": "Take a Number And Sum  Its Digits Raised To The Consecutive Powers And ....¡Eureka!!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Functions",
      "Sorting",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "57eaeb9578748ff92a000009",
    "name": "Sum Mixed Array",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Numbers",
      "Arrays"
    ]
  },
  {
    "id": "525c65e51bf619685c000059",
    "name": "Pete, the baker",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5513795bd3fafb56c200049e",
    "name": "Count by X",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Numbers"
    ]
  },
  {
    "id": "5672a98bdbdd995fad00000f",
    "name": "Rock Paper Scissors!",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "53dc23c68a0c93699800041d",
    "name": "Sentence Smash",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Conditional Statements",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "5a2b703dc5e2845c0900005a",
    "name": "Can we divide it?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Basic Language Features"
    ]
  },
  {
    "id": "58f8a3a27a5c28d92e000144",
    "name": "Find the first non-consecutive number",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5b077ebdaf15be5c7f000077",
    "name": "If you can't sleep, just count sheep!!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "52449b062fb80683ec000024",
    "name": "The Hashtag Generator",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "57a0885cbb9944e24c00008e",
    "name": "Remove exclamation marks",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "52bc74d4ac05d0945d00054e",
    "name": "First non-repeating character",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Search",
      "Logic"
    ]
  },
  {
    "id": "51ba717bb08c1cd60f00002f",
    "name": "Range Extraction",
    "approved": true,
    "tags": [
      "Algorithms",
      "String Formatting",
      "Formatting",
      "Logic",
      "Strings"
    ]
  },
  {
    "id": "57e76bc428d6fbc2d500036d",
    "name": "Convert a string to an array",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "5772da22b89313a4d50012f7",
    "name": "Grasshopper - Personalized Message",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Conditional Statements",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5813d19765d81c592200001a",
    "name": "Don't give me five!",
    "approved": true,
    "tags": [
      "Algorithms",
      "Basic Language Features",
      "Fundamentals",
      "Mathematics",
      "Logic",
      "Numbers",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "568d0dd208ee69389d000016",
    "name": "Transportation on vacation ",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5aa736a455f906981800360d",
    "name": "The Feast of Many Beasts",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "55983863da40caa2c900004e",
    "name": "Next bigger number with the same digits",
    "approved": true,
    "tags": [
      "Refactoring",
      "Numbers",
      "Data Types",
      "Strings",
      "Integers"
    ]
  },
  {
    "id": "563f037412e5ada593000114",
    "name": "Money, Money, Money",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57f609022f4d534f05000024",
    "name": "Find the stray number",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "515e188a311df01cba000003",
    "name": "Get Planet Name By ID",
    "approved": true,
    "tags": [
      "Bugs",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "534ea96ebb17181947000ada",
    "name": "Breaking chocolate problem",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "52efefcbcdf57161d4000091",
    "name": "Count characters in your string",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "ASCII",
      "Character Encodings",
      "Formats"
    ]
  },
  {
    "id": "51b6249c4612257ac0000005",
    "name": "Roman Numerals Decoder",
    "approved": true,
    "tags": [
      "Algorithms",
      "Parsing",
      "Logic",
      "Strings"
    ]
  },
  {
    "id": "55fab1ffda3e2e44f00000c6",
    "name": "Beginner Series #4 Cockroach",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55cbd4ba903825f7970000f5",
    "name": "Grasshopper - Grade book",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "568dcc3c7f12767a62000038",
    "name": "L1: Set Alarm",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Booleans",
      "Data Types"
    ]
  },
  {
    "id": "5ab6538b379d20ad880000ab",
    "name": "Area or Perimeter",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57814d79a56c88e3e0000786",
    "name": "Simple Encryption #1 - Alternating Split",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Cryptography",
      "Security",
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "55c04b4cc56a697bb0000048",
    "name": "Scramblies",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Performance",
      "Optimization"
    ]
  },
  {
    "id": "5a023c426975981341000014",
    "name": "Third Angle of a Triangle",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "514a024011ea4fb54200004b",
    "name": "Extract the domain name from a URL",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Parsing",
      "Algorithms",
      "Logic",
      "Strings",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "56b1f01c247c01db92000076",
    "name": "Double Char",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "54bf85e3d5b56c7a05000cf9",
    "name": "Testing 1-2-3",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Iterators",
      "Control Flow",
      "Object-oriented Programming",
      "Basic Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5875b200d520904a04000003",
    "name": "Will there be enough space?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "52c31f8e6605bcc646000082",
    "name": "Two Sum",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Numbers",
      "Integers",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "55edaba99da3a9c84000003b",
    "name": "Find numbers which are divisible by given number",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "58649884a1659ed6cb000072",
    "name": "Thinkful - Logic Drills: Traffic light",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "59342039eb450e39970000a6",
    "name": "Count Odd Numbers below n",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Performance",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5b853229cfde412a470000d0",
    "name": "Twice as old",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "56efc695740d30f963000557",
    "name": "altERnaTIng cAsE <=> ALTerNAtiNG CaSe",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "577bd026df78c19bca0002c0",
    "name": "Correct the mistakes of the character recognition software",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "587731fda577b3d1b0001196",
    "name": "CamelCase Method",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "55cb632c1a5d7b3ad0000145",
    "name": "Keep up the hoop",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "577ff15ad648a14b780000e7",
    "name": "Welcome!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Hashes",
      "Data Structures",
      "Objects",
      "Data Types"
    ]
  },
  {
    "id": "5769b3802ae6f8e4890009d2",
    "name": "Removing Elements",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5ae62fcf252e66d44d00008e",
    "name": "Expressions Matter ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Basic Language Features"
    ]
  },
  {
    "id": "52f787eb172a8b4ae1000a34",
    "name": "Number of trailing zeros of N!",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "5808dcb8f0ed42ae34000031",
    "name": "Switch it Up!",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "566fc12495810954b1000030",
    "name": "Count the Digit",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "51c8e37cee245da6b40000bd",
    "name": "Strip Comments",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "54a91a4883a7de5d7800009c",
    "name": "String incrementer",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Parsing",
      "Algorithms",
      "Logic",
      "Data Types"
    ]
  },
  {
    "id": "55466989aeecab5aac00003e",
    "name": "Rectangle into Squares",
    "approved": true,
    "tags": [
      "Puzzles",
      "Fundamentals",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "56f173a35b91399a05000cb7",
    "name": "Squash the bugs",
    "approved": true,
    "tags": [
      "Bugs",
      "Fundamentals"
    ]
  },
  {
    "id": "5865918c6b569962950002a1",
    "name": "All Star Code Challenge #18",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55c28f7304e3eaebef0000da",
    "name": "Unfinished Loop -  Bug Fixing #1",
    "approved": true,
    "tags": [
      "Bugs",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "5ce9c1000bab0b001134f5af",
    "name": "Quarter of the year",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5254ca2719453dcc0b00027d",
    "name": "Permutations",
    "approved": true,
    "tags": [
      "Algorithms",
      "Permutations",
      "Logic",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "52b757663a95b11b3d00062d",
    "name": "WeIrD StRiNg CaSe",
    "approved": true,
    "tags": [
      "Algorithms",
      "Utilities",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5263c6999e0f40dee200059d",
    "name": "The observed PIN",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "542c0f198e077084c0000c2e",
    "name": "Count the divisors of a number",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "57f24e6a18e9fad8eb000296",
    "name": "I love you,  a little ,  a lot,  passionately ... not at all",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "557cd6882bfa3c8a9f0000c1",
    "name": "Parse nice int from char problem",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Integers",
      "Data Types",
      "Numbers",
      "Chars"
    ]
  },
  {
    "id": "57cfdf34902f6ba3d300001e",
    "name": "Sort and Star",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "58261acb22be6e2ed800003a",
    "name": "Volume of a Cuboid",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "515decfd9dcfc23bb6000006",
    "name": "IP Validation",
    "approved": true,
    "tags": [
      "Algorithms",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings"
    ]
  },
  {
    "id": "5270d0d18625160ada0000e4",
    "name": "Greed is Good",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5503013e34137eeeaa001648",
    "name": "Give me a Diamond",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "55f73be6e12baaa5900000d4",
    "name": "Grasshopper - Messi goals function",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56f699cd9400f5b7d8000b55",
    "name": "My head is at the wrong end!",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "58cb43f4256836ed95000f97",
    "name": "Difference of Volumes of Cuboids",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5202ef17a402dd033c000009",
    "name": "Title Case",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Parsing",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "523b66342d0c301ae400003b",
    "name": "Function 3 - multiplying two numbers",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "586f6741c66d18c22800010a",
    "name": "Sum of a sequence",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Recursion",
      "Algorithms",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "583f158ea20cfcbeb400000a",
    "name": "Make a function that does arithmetic!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Objects",
      "Data Types",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5a6663e9fd56cb5ab800008b",
    "name": "Cat years, Dog years",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5ad0d8356165e63c140014d4",
    "name": "Student's Final Grade",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "50ee6b0bdeab583673000025",
    "name": "Basic variable assignment",
    "approved": true,
    "tags": [
      "Bugs"
    ]
  },
  {
    "id": "57ee4a67108d3fd9eb0000e7",
    "name": "Filter out the geese",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Higher-order Functions",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "55cbc3586671f6aa070000fb",
    "name": "Grasshopper - Check for factor",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "57f222ce69e09c3630000212",
    "name": "Well of Ideas - Easy Version",
    "approved": true,
    "tags": [
      "Refactoring",
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "52b7ed099cdc285c300001cd",
    "name": "Sum of Intervals",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Aggregations",
      "Arithmetic",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Integers",
      "Performance"
    ]
  },
  {
    "id": "57ea5b0b75ae11d1e800006c",
    "name": "Sort array by string length",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Sorting",
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5324945e2ece5e1f32000370",
    "name": "Sum Strings as Numbers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Arithmetic",
      "Mathematics",
      "Logic",
      "Numbers",
      "Big Integers",
      "Integers",
      "Utilities"
    ]
  },
  {
    "id": "563b74ddd19a3ad462000054",
    "name": "Stringy Strings",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Binary"
    ]
  },
  {
    "id": "511f11d355fe575d2c000001",
    "name": "Two Oldest Ages",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5966e33c4e686b508700002d",
    "name": "Sum The Strings",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "577bd8d4ae2807c64b00045b",
    "name": "Two fighters, one winner.",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Games",
      "Algorithms",
      "Logic",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "57d814e4950d8489720008db",
    "name": "N-th Power",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57089707fe2d01529f00024a",
    "name": "Grasshopper - If/else syntax debug",
    "approved": true,
    "tags": [
      "Bugs"
    ]
  },
  {
    "id": "56cd44e1aa4ac7879200010b",
    "name": "Is the string uppercase?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "559a28007caad2ac4e000083",
    "name": "Perimeter of squares in a rectangle",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "57f36495c0bb25ecf50000e7",
    "name": "Sum of all the multiples of 3 or 5",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "545a4c5a61aa4c6916000755",
    "name": "Find the middle element",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "57a1fd2ce298a731b20006a4",
    "name": "Is it a palindrome?",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56f6919a6b88de18ff000b36",
    "name": "101 Dalmatians - squash the bugs, not the dogs!",
    "approved": true,
    "tags": [
      "Bugs"
    ]
  },
  {
    "id": "590a95eede09f87472000213",
    "name": "Adults only  (SQL for Beginners #1)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "574b3b1599d8f897470018f6",
    "name": "What's the real floor?",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "563a631f7cbbc236cf0000c2",
    "name": "Grasshopper - Terminal game move function",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5933a1f8552bc2750a0000ed",
    "name": "Get Nth Even Number",
    "approved": true,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Games"
    ]
  },
  {
    "id": "55eca815d0d20962e1000106",
    "name": "Generate range of integers",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "55ca77fa094a2af31f00002a",
    "name": "Grasshopper - Messi Goals",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Variables",
      "Basic Language Features"
    ]
  },
  {
    "id": "51675d17e0c1bed195000001",
    "name": "Largest 5 digit number in a series",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "57a083a57cb1f31db7000028",
    "name": "Powers of 2",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "588417e576933b0ec9000045",
    "name": "Simple Fun #1: Seats in Theater",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "54d512e62a5e54c96200019e",
    "name": "Primes in numbers",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Utilities"
    ]
  },
  {
    "id": "57f6ad55cca6e045d2000627",
    "name": "To square(root) or not to square(root)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Basic Language Features",
      "Fundamentals",
      "Mathematics",
      "Logic",
      "Numbers",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5aba780a6a176b029800041c",
    "name": "Maximum Multiple",
    "approved": true,
    "tags": [
      "Bugs",
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Basic Language Features",
      "Arrays",
      "Loops",
      "Control Flow"
    ]
  },
  {
    "id": "55aa075506463dac6600010d",
    "name": "Integers: Recreation One",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Optimization"
    ]
  },
  {
    "id": "55e2adece53b4cdcb900006c",
    "name": "Tortoise racing",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "555a67db74814aa4ee0001b5",
    "name": "Is it even?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5629db57620258aa9d000014",
    "name": "Strings Mix",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "55d1d6d5955ec6365400006d",
    "name": "Round up to the next multiple of 5",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57202aefe8d6c514300001fd",
    "name": "Training JS #7: if..else and ternary operator",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "54ff0d1f355cfd20e60001fc",
    "name": "Factorial",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "50654ddff44f800200000007",
    "name": "Short Long Short",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5625618b1fe21ab49f00001f",
    "name": "Grasshopper - Debug sayHello",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "54d81488b981293527000c8f",
    "name": "Sum of pairs",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Parsing",
      "Algorithms",
      "Logic",
      "Strings",
      "Memoization",
      "Design Patterns",
      "Design Principles"
    ]
  },
  {
    "id": "529eef7a9194e0cbc1000255",
    "name": "Anagram Detection",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "523b623152af8a30c6000027",
    "name": "Function 2 - squaring an argument",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58b8c94b7df3f116eb00005b",
    "name": "Simple Fun #176: Reverse Letter",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "54dc6f5a224c26032800005c",
    "name": "Help the bookseller !",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5704aea738428f4d30000914",
    "name": "Triple Trouble",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5663f5305102699bad000056",
    "name": "Maximum Length Difference",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56b5afb4ed1f6d5fb0000991",
    "name": "Reverse or rotate?",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "52a89c2ea8ddc5547a000863",
    "name": "Can you get the loop ?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Hacking Holidays",
      "Logic"
    ]
  },
  {
    "id": "5a3dd29055519e23ec000074",
    "name": "Check the exam",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Numbers",
      "Basic Language Features"
    ]
  },
  {
    "id": "52f3149496de55aded000410",
    "name": "Summing  a number's digits",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "55ecd718f46fba02e5000029",
    "name": "What is between?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "55cb854deb36f11f130000e1",
    "name": "Grasshopper - Debug",
    "approved": true,
    "tags": [
      "Bugs"
    ]
  },
  {
    "id": "55a5bfaa756cfede78000026",
    "name": "Super Duper Easy",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5279f6fe5ab7f447890006a7",
    "name": "Pick peaks",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Map/Reduce",
      "Logic"
    ]
  },
  {
    "id": "571d42206414b103dc0006a1",
    "name": "Filling an array (part 1)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "59441520102eaa25260000bf",
    "name": "5 without numbers !!",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57fb09ef2b5314a8a90001ed",
    "name": "Exclamation marks series #11: Replace all vowel to exclamation mark in the sentence",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "52761ee4cffbc69732000738",
    "name": "Good vs Evil",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5672682212c8ecf83e000050",
    "name": "Twice linear",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Logic"
    ]
  },
  {
    "id": "55ad04714f0b468e8200001c",
    "name": "get character from ASCII Value",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56fa3c5ce4d45d2a52001b3c",
    "name": "Exclusive \"or\" (xor) Logical Operator",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56b7f2f3f18876033f000307",
    "name": "Are the numbers in order?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Types",
      "Control Flow",
      "Basic Language Features",
      "Optimization"
    ]
  },
  {
    "id": "5ac6932b2f317b96980000ca",
    "name": "Form The Minimum",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Basic Language Features",
      "Dynamic Arrays",
      "Arrays",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Vectors"
    ]
  },
  {
    "id": "57a4d500e298a7952100035d",
    "name": "Hex to Decimal",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Decimals",
      "Data Types",
      "Numbers"
    ]
  },
  {
    "id": "570a6a46455d08ff8d001002",
    "name": "No zeros for heros",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "571ec274b1c8d4a61c0000c8",
    "name": "Training JS #1: create your first JS function and print \"Helloworld!\"",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5b180e9fedaa564a7000009a",
    "name": "Fix string case",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57ec8bd8f670e9a47a000f89",
    "name": "The Wide-Mouthed frog! ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Logic"
    ]
  },
  {
    "id": "57fae964d80daa229d000126",
    "name": "Exclamation marks series #1: Remove an exclamation mark from the end of string",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57e3f79c9cb119374600046b",
    "name": "Hello, Name or World!",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56170e844da7c6f647000063",
    "name": "Drink about",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Conditional Statements",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "51f2b4448cadf20ed0000386",
    "name": "Remove anchor from URL",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "56f695399400f5d9ef000af5",
    "name": "Is this my tail?",
    "approved": true,
    "tags": [
      "Bugs"
    ]
  },
  {
    "id": "586c1cf4b98de0399300001d",
    "name": "Grasshopper - Terminal game combat function",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56ff6a70e1a63ccdfa0001b1",
    "name": "SpeedCode #2 - Array Madness",
    "approved": true,
    "tags": [
      "Puzzles",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "57e92e91b63b6cbac20001e5",
    "name": "Holiday VIII - Duty Free",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "539ee3b6757843632d00026b",
    "name": "Find the capitals",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Case/Switch Statements",
      "Conditional Statements",
      "Control Flow",
      "Basic Language Features",
      "Arrays",
      "Loops"
    ]
  },
  {
    "id": "5174a4c0f2769dd8b1000003",
    "name": "Sort Numbers",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59cfc000aeb2844d16000075",
    "name": "Alternate capitalization",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "51e0007c1f9378fa810002a9",
    "name": "Make the Deadfish Swim",
    "approved": true,
    "tags": [
      "Algorithms",
      "Parsing",
      "Logic",
      "Strings"
    ]
  },
  {
    "id": "52de553ebb55d1fca3000371",
    "name": "Find the missing term in an Arithmetic Progression",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arithmetic",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5a2fd38b55519ed98f0000ce",
    "name": "Multiplication table for number",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Basic Language Features"
    ]
  },
  {
    "id": "57a55c8b72292d057b000594",
    "name": "Reversing Words in a String",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "57cc981a58da9e302a000214",
    "name": "Small enough? - Beginner",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Booleans",
      "Data Types",
      "Numbers",
      "Arrays"
    ]
  },
  {
    "id": "52e1476c8147a7547a000811",
    "name": "Regex Password Validation",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Validation",
      "Algorithms",
      "Logic",
      "Utilities"
    ]
  },
  {
    "id": "539de388a540db7fec000642",
    "name": "The Coupon Code",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Dates/Time",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "5b39e3772ae7545f650000fc",
    "name": "Remove duplicate words",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals"
    ]
  },
  {
    "id": "5ce399e0047a45001c853c2b",
    "name": "Sums of Parts",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Performance"
    ]
  },
  {
    "id": "56b29582461215098d00000f",
    "name": "Lario and Muigi Pipe Problem",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Lists",
      "Data Structures",
      "Objects",
      "Data Types"
    ]
  },
  {
    "id": "5c8bfa44b9d1192e1ebd3d15",
    "name": "A wolf in sheep's clothing",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5547929140907378f9000039",
    "name": "Vowel remover",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Parsing",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "56200d610758762fb0000002",
    "name": "Grasshopper - Basic Function Fixer",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "590ba881fe13cfdcc20001b4",
    "name": "On the Canadian Border (SQL for Beginners #2)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "545afd0761aa4c3055001386",
    "name": "Enumerable Magic #25 - Take the First N Elements",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "53da6d8d112bd1a0dc00008b",
    "name": "Reverse List Order",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "596c6eb85b0f515834000049",
    "name": "FIXME: Replace all dots",
    "approved": true,
    "tags": [
      "Bugs"
    ]
  },
  {
    "id": "54b72c16cd7f5154e9000457",
    "name": "Decode the Morse code, advanced",
    "approved": true,
    "tags": [
      "Algorithms",
      "Decoding",
      "Logic"
    ]
  },
  {
    "id": "561e9c843a2ef5a40c0000a4",
    "name": "Gap in Primes",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "591127cbe8b9fb05bd00004b",
    "name": "Best-Selling Books (SQL for Beginners #5)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "58ca658cc0d6401f2700045f",
    "name": "Find Multiples of a Number",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5506b230a11c0aeab3000c1f",
    "name": "Deodorant Evaporator",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55902c5eaa8069a5b4000083",
    "name": "Dollars and Cents",
    "approved": true,
    "tags": [
      "Algorithms",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Strings",
      "Data Types",
      "Formatting",
      "Logic"
    ]
  },
  {
    "id": "595970246c9b8fa0a8000086",
    "name": "Capitalization and Mutability",
    "approved": true,
    "tags": [
      "Bugs",
      "Strings",
      "Data Types",
      "Utilities",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "53f40dff5f9d31b813000774",
    "name": "Recover a secret string from random triplets",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5abd66a5ccfd1130b30000a9",
    "name": "Row Weights",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Basic Language Features",
      "Arrays"
    ]
  },
  {
    "id": "515bb423de843ea99400000a",
    "name": "PaginationHelper",
    "approved": true,
    "tags": [
      "Algorithms",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Classes",
      "Basic Language Features",
      "Fundamentals",
      "Utilities",
      "Arrays",
      "Data Types",
      "Collections",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "571edd157e8954bab500032d",
    "name": "Training JS #2:  Basic data types--Number",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59fca81a5712f9fa4700159a",
    "name": "Convert to Binary",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "564057bc348c7200bd0000ff",
    "name": "A Rule of Divisibility by 13",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "569e09850a8e371ab200000b",
    "name": "Pre-FizzBuzz Workout #1",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a03b3f6a1c9040084001765",
    "name": "Sum of angles",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Arithmetic",
      "Numbers"
    ]
  },
  {
    "id": "55e7280b40e1c4a06d0000aa",
    "name": "Best travel",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "580a094553bd9ec5d800007d",
    "name": "Alan Partridge II - Apple Turnover",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Strings",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5802e32dd8c944e562000020",
    "name": "SQL Basics: Simple JOIN",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data",
      "Databases",
      "Information Systems"
    ]
  },
  {
    "id": "51f9d93b4095e0a7200001b8",
    "name": "How many lightsabers do you own?",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "525f4206b73515bffb000b21",
    "name": "Adding Big Numbers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Big Integers",
      "Integers",
      "Data Types"
    ]
  },
  {
    "id": "54d496788776e49e6b00052f",
    "name": "Sum by Factors",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "57a5c31ce298a7e6b7000334",
    "name": "Bin to Decimal",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Binary",
      "Decimals",
      "Data Types",
      "Numbers"
    ]
  },
  {
    "id": "59df2f8f08c6cec835000012",
    "name": "Meeting",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56530b444e831334c0000020",
    "name": "Determine offspring sex based on genes XX and XY chromosomes",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "568dc014440f03b13900001d",
    "name": "L1: Bartender, drinks!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Conditional Statements",
      "Control Flow",
      "Basic Language Features",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "565f5825379664a26b00007c",
    "name": "Surface  Area and Volume of a Box",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "55c90cad4b0fe31a7200001f",
    "name": "String Templates - Bug Fixing #5",
    "approved": true,
    "tags": [
      "Bugs",
      "Strings",
      "Data Types",
      "ES2015",
      "Babel"
    ]
  },
  {
    "id": "5d5ee4c35162d9001af7d699",
    "name": "Sum of Minimums!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "5808e2006b65bff35500008f",
    "name": "Find the position!",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5848565e273af816fb000449",
    "name": "Encrypt this!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Arrays",
      "Ciphers",
      "Algorithms",
      "Cryptography",
      "Logic",
      "Security"
    ]
  },
  {
    "id": "52ceafd1f235ce81aa00073a",
    "name": "Plural",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Conditional Statements",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5910b0d378cc2ba91400000b",
    "name": "Collect Tuition (SQL for Beginners #4)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "57a5b0dfcf1fa526bb000118",
    "name": "Remove duplicates from list",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58111f4ee10b5301a7000175",
    "name": "SQL Basics: Simple GROUP BY",
    "approved": true,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "53db96041f1a7d32dc0004d2",
    "name": "Did I Finish my Sudoku?",
    "approved": true,
    "tags": [
      "Puzzles",
      "Lists",
      "Data Structures",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "57ee99a16c8df7b02d00045f",
    "name": "Flatten and sort an array",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Sorting",
      "Algorithms",
      "Logic",
      "Lambdas",
      "Functional Programming",
      "Functions",
      "Declarative Programming",
      "Programming Paradigms",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5547cc7dcad755e480000004",
    "name": "Is  my friend cheating?",
    "approved": true,
    "tags": [
      "Puzzles",
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "56e9e4f516bcaa8d4f001763",
    "name": "Sum of numbers from 0 to N",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Sequences",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "571effabb625ed9b0600107a",
    "name": "Training JS #4:  Basic data types--Array",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56dae9dc54c0acd29d00109a",
    "name": "Grasshopper - Function syntax debugging",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57a049e253ba33ac5e000212",
    "name": "Factorial",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5809508cc47d327c12000084",
    "name": "SQL Basics: Simple WHERE and ORDER BY",
    "approved": true,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data",
      "Filtering",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "545991b4cbae2a5fda000158",
    "name": "Enumerable Magic #3 - Does My List Include This?",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "525e5a1cb735154b320002c8",
    "name": "Triangular Treasure",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "569d488d61b812a0f7000015",
    "name": "Data Reverse",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "58164ddf890632ce00000220",
    "name": "SQL Basics: Simple HAVING ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "551f23362ff852e2ab000037",
    "name": "Pyramid Slide Down",
    "approved": true,
    "tags": [
      "Algorithms",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Higher-order Functions",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "593ed37c93350098d600001d",
    "name": "Easy SQL - Ordering",
    "approved": true,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "539a0e4d85e3425cb0000a88",
    "name": "A Chain adding function",
    "approved": true,
    "tags": [
      "Puzzles",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Advanced Language Features",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "585a1a227cb58d8d740001c3",
    "name": "Thinkful - String Drills: Repeater",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5aff237c578a14752d0035ae",
    "name": "Predict your age!",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "559ac78160f0be07c200005a",
    "name": "Name Shuffler",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "580a4734d6df748060000045",
    "name": "Sorted? yes? no? how?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Sorting",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "57faece99610ced690000165",
    "name": "Exclamation marks series #2: Remove all exclamation marks from the end of sentence",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5727bb0fe81185ae62000ae3",
    "name": "Backspaces in string",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5a34b80155519e1a00000009",
    "name": "Multiple of  index",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Numbers",
      "Basic Language Features"
    ]
  },
  {
    "id": "5748838ce2fab90b86001b1a",
    "name": "Area of a Square",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57faf7275c991027af000679",
    "name": "Exclamation marks series #6: Remove n exclamation marks in the sentence from left to right",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "525f47c79f2f25a4db000025",
    "name": "Valid Phone Number",
    "approved": true,
    "tags": [
      "Algorithms",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings",
      "Validation",
      "Logic"
    ]
  },
  {
    "id": "5899642f6e1b25935d000161",
    "name": "Merge two sorted arrays into one",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Integers",
      "Numbers"
    ]
  },
  {
    "id": "52bb6539a4cf1b12d90005b7",
    "name": "Battleship field validator",
    "approved": true,
    "tags": [
      "Algorithms",
      "Games",
      "Validation",
      "Logic",
      "Arrays",
      "Data Types",
      "Game Boards"
    ]
  },
  {
    "id": "58111670e10b53be31000108",
    "name": "SQL Basics: Simple DISTINCT",
    "approved": true,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "57a5015d72292ddeb8000b31",
    "name": "Palindrome Strings",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "55d5434f269c0c3f1b000058",
    "name": "Triple trouble",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "529adbf7533b761c560004e5",
    "name": "Memoized Fibonacci",
    "approved": true,
    "tags": [
      "Refactoring",
      "Memoization",
      "Design Patterns",
      "Design Principles"
    ]
  },
  {
    "id": "5810085c533d69f4980001cf",
    "name": "simple calculator ",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "534d2f5b5371ecf8d2000a08",
    "name": "Multiplication table",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "5511b2f550906349a70004e1",
    "name": "Last digit of a large number",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "559d2284b5bb6799e9000047",
    "name": "Add Length",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "59706036f6e5d1e22d000016",
    "name": "Love vs friendship",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "53f0f358b9cb376eca001079",
    "name": "Regular Ball Super Ball",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Objects",
      "Data Types"
    ]
  },
  {
    "id": "5388f0e00b24c5635e000fc6",
    "name": "Swap Values",
    "approved": true,
    "tags": [
      "Bugs",
      "Arrays",
      "Data Types",
      "Fundamentals"
    ]
  },
  {
    "id": "57ea70aa5500adfe8a000110",
    "name": "Fold an array",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Basic Language Features",
      "Logic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "580878d5d27b84b64c000b51",
    "name": "Sum of Triangular Numbers",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Arithmetic"
    ]
  },
  {
    "id": "57158fb92ad763bb180004e7",
    "name": "Fix your code before the garden dies! ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Bugs"
    ]
  },
  {
    "id": "58daa7617332e59593000006",
    "name": "Most digits",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "59377c53e66267c8f6000027",
    "name": "Alphabet war",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "56dbe0e313c2f63be4000b25",
    "name": "Moves in squared strings (I)",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5720a1cb65a504fdff0003e2",
    "name": "Find the Difference in Age between Oldest and Youngest Family Members",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5761a717780f8950ce001473",
    "name": "How old will I be in 2099?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5f70c883e10f9e0001c89673",
    "name": "Gravity Flip",
    "approved": true,
    "tags": [
      "Puzzles",
      "Fundamentals",
      "Games"
    ]
  },
  {
    "id": "5963c18ecb97be020b0000a2",
    "name": "Take the Derivative",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "525f039017c7cd0e1a000a26",
    "name": "Palindrome chain length",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59c633e7dcc4053512000073",
    "name": "Consonant value",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "581113dce10b531b1d0000bd",
    "name": "SQL Basics: Simple MIN / MAX",
    "approved": true,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "52a382ee44408cea2500074c",
    "name": "Matrix Determinant",
    "approved": true,
    "tags": [
      "Algorithms",
      "Graphs",
      "Data Structures",
      "Linear Algebra",
      "Algebra",
      "Mathematics",
      "Logic",
      "Numbers",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "51b66044bce5799a7f000003",
    "name": "Roman Numerals Helper",
    "approved": true,
    "tags": [
      "Algorithms",
      "Parsing",
      "Logic",
      "Strings",
      "Type Conversion",
      "Data Types"
    ]
  },
  {
    "id": "5c374b346a5d0f77af500a5a",
    "name": "Closest elevator",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "571f1eb77e8954a812000837",
    "name": "Training JS #5:  Basic data types--Object",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56a3f08aa9a6cc9b75000023",
    "name": "Simple validation of a username with regex",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Validation",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5418a1dd6d8216e18a0012b2",
    "name": "Validate Credit Card Number",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Validation"
    ]
  },
  {
    "id": "514a6336889283a3d2000001",
    "name": "JavaScript Array Filter",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "554a44516729e4d80b000012",
    "name": "Buying a car",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "56c5847f27be2c3db20009c3",
    "name": "Subtract the Sum",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "58dbdccee5ee8fa2f9000058",
    "name": "Do you speak \"English\"?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5641a03210e973055a00000d",
    "name": "Formatting decimal places #0",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Formatting",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "555bfd6f9f9f52680f0000c5",
    "name": "Reverse a Number",
    "approved": true,
    "tags": [
      "Puzzles",
      "Interview Questions",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "55d277882e139d0b6000005d",
    "name": "Grasshopper - Array Mean",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "52e88b39ffb6ac53a400022e",
    "name": "int32 to IPv4",
    "approved": true,
    "tags": [
      "Algorithms",
      "Networks",
      "Logic",
      "Bits",
      "Binary",
      "Utilities"
    ]
  },
  {
    "id": "571edea4b625edcb51000d8e",
    "name": "Training JS #3:  Basic data types--String",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55eea63119278d571d00006a",
    "name": "Smallest unused ID",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals"
    ]
  },
  {
    "id": "58630e2ae88af44d2b0000ea",
    "name": "Thinkful - Number Drills: Pixelart planning",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "57faf12b21c84b5ba30001b0",
    "name": "Exclamation marks series #4: Remove all exclamation marks from sentence but ensure a exclamation mark at the end of string",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56a946cd7bd95ccab2000055",
    "name": "Regex count lowercase letters",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "580918e24a85b05ad000010c",
    "name": "SQL Basics: Simple JOIN with COUNT",
    "approved": true,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "582746fa14b3892727000c4f",
    "name": "Coding Meetup #1 - Higher-Order Functions Series - Count the number of JavaScript developers coming from Europe",
    "approved": true,
    "tags": [
      "Algorithms",
      "Higher-order Functions",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Data Structures",
      "Logic",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Arrays",
      "Objects",
      "Functional Programming"
    ]
  },
  {
    "id": "58110da0009b4f7ef80000ad",
    "name": "SQL Basics: Simple SUM",
    "approved": true,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "52f78966747862fc9a0009ae",
    "name": "Reverse polish notation calculator",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Interpreters",
      "Parsing",
      "Strings"
    ]
  },
  {
    "id": "5a4138acf28b82aa43000117",
    "name": "Maximum Product ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Basic Language Features",
      "Arrays"
    ]
  },
  {
    "id": "54d7660d2daf68c619000d95",
    "name": "Common Denominators",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "559536379512a64472000053",
    "name": "Playing with passphrases",
    "approved": true,
    "tags": [
      "Algorithms",
      "Chars",
      "Data Types",
      "Strings",
      "Encoding",
      "Logic"
    ]
  },
  {
    "id": "590cc86f7557c0494000007e",
    "name": "Register for the Party (SQL for Beginners #3)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "57ed30dde7728215300005fa",
    "name": "Bumps in the Road",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "57e1e61ba396b3727c000251",
    "name": "String cleaning",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "51e056fe544cf36c410000fb",
    "name": "Most frequently used words in a text",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Parsing",
      "Logic",
      "Ranking",
      "Filtering"
    ]
  },
  {
    "id": "582365c18917435ab3000020",
    "name": "SQL Grasshopper: Select Columns",
    "approved": true,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "580d08b5c049aef8f900007c",
    "name": "SQL Basics: Top 10 customers by total payments amount",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Reporting",
      "Data"
    ]
  },
  {
    "id": "57cc40b2f8392dbf2a0003ce",
    "name": "No Loops 2 - You only need one",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Booleans",
      "Data Types",
      "Strings",
      "Numbers",
      "Arrays"
    ]
  },
  {
    "id": "56fc55cd1f5a93d68a001d4e",
    "name": "How many stairs will Suzuki climb in 20 years?",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "557af9418895e44de7000053",
    "name": "repeatIt",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "56484848ba95170a8000004d",
    "name": "Speed Control",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59dd3ccdded72fc78b000b25",
    "name": "Return the day ",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5296bc77afba8baa690002d7",
    "name": "Sudoku Solver",
    "approved": true,
    "tags": [
      "Algorithms",
      "Games",
      "Validation",
      "Logic"
    ]
  },
  {
    "id": "5300901726d12b80e8000498",
    "name": "Fizz Buzz",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "52c4dd683bfd3b434c000292",
    "name": "Catching Car Mileage Numbers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Rules",
      "Utilities",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5612e743cab69fec6d000077",
    "name": "Grasshopper - Variable Assignment Debug",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57241e0f440cd279b5000829",
    "name": "Sum of Multiples",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5853213063adbd1b9b0000be",
    "name": "Street Fighter 2 - Character Selection",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Graphs",
      "Data Structures",
      "Arrays",
      "Data Types",
      "Lists"
    ]
  },
  {
    "id": "520446778469526ec0000001",
    "name": "Nesting Structure Comparison",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "51fd6bc82bc150b28e0000ce",
    "name": "No oddities here",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5a58d46cfd56cb4e8600009d",
    "name": "Halving Sum",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "526dbd6c8c0eb53254000110",
    "name": "Not very secure",
    "approved": true,
    "tags": [
      "Bugs",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings"
    ]
  },
  {
    "id": "5721a78c283129e416000999",
    "name": "Training JS #10: loop statement --for",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "52a78825cdfc2cfc87000005",
    "name": "Evaluate mathematical expression",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Expressions",
      "Basic Language Features",
      "Fundamentals",
      "Operators",
      "Parsing",
      "Strings"
    ]
  },
  {
    "id": "556196a6091a7e7f58000018",
    "name": "Largest pair sum in array",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "556e0fccc392c527f20000c5",
    "name": "Fibonacci, Tribonacci and friends",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Sequences",
      "Arrays",
      "Data Types",
      "Lists",
      "Data Structures",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "56e2f59fb2ed128081001328",
    "name": "Printing Array elements with Comma delimiters",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "572059afc2f4612825000d8a",
    "name": "Training JS #8: Conditional statement--switch",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "54d4c8b08776e4ad92000835",
    "name": "What's a Perfect Power  anyway?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "526156943dfe7ce06200063e",
    "name": "My smallest code interpreter (aka Brainf**k)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Interpreters",
      "Logic",
      "Esoteric Languages"
    ]
  },
  {
    "id": "57126304cdbf63c6770012bd",
    "name": "Is it a number?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Exception Handling",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "56f3a1e899b386da78000732",
    "name": "Parts of a list",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "570597e258b58f6edc00230d",
    "name": "Remove First and Last Character Part Two",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Basic Language Features",
      "Arrays",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "57a77726bb9944d000000b06",
    "name": "Price of Mangoes",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "53697be005f803751e0015aa",
    "name": "The Vowel Code",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Strings",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "534d0a229345375d520006a0",
    "name": "Power of two",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "52adc142b2651f25a8000643",
    "name": "Sleigh Authentication",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Hacking Holidays"
    ]
  },
  {
    "id": "56a25ba95df27b7743000016",
    "name": "validate code with simple regex",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "524f5125ad9c12894e00003f",
    "name": "Find the Remainder",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "54df2067ecaa226eca000229",
    "name": "Gauß needs help! (Sums  of a lot of numbers).",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Performance",
      "Integers"
    ]
  },
  {
    "id": "5302d846be2a9189af0001e4",
    "name": "Welcome to the City",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "54eb33e5bc1a25440d000891",
    "name": "Square into Squares. Protect trees!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Sequences",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "55ccdf1512938ce3ac000056",
    "name": "A Strange Trip to the Market",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "567bf4f7ee34510f69000032",
    "name": "Regexp Basics - is it a digit?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "5a431c0de1ce0ec33a00000c",
    "name": "Even numbers in an array",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Numbers",
      "Basic Language Features"
    ]
  },
  {
    "id": "5550d638a99ddb113e0000a2",
    "name": "Josephus Permutation",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Permutations"
    ]
  },
  {
    "id": "525c1a07bb6dda6944000031",
    "name": "Kata Example Twist",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5f0ed36164f2bc00283aed07",
    "name": "Over The Road",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Performance"
    ]
  },
  {
    "id": "56598d8076ee7a0759000087",
    "name": "Tip Calculator",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "54147087d5c2ebe4f1000805",
    "name": "The 'if' function",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Higher-order Functions",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "525c7c5ab6aecef16e0001a5",
    "name": "parseInt() reloaded",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Integers",
      "Parsing",
      "Logic",
      "Strings"
    ]
  },
  {
    "id": "557b5e0bddf29d861400005d",
    "name": "Miles per gallon to kilometers per liter",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "57d2807295497e652b000139",
    "name": "Averages of numbers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Basic Language Features",
      "Logic"
    ]
  },
  {
    "id": "526989a41034285187000de4",
    "name": "Count IP Addresses",
    "approved": true,
    "tags": [
      "Algorithms",
      "Parsing",
      "Logic",
      "Strings"
    ]
  },
  {
    "id": "594633020a561e329a0000a2",
    "name": "Easy SQL: Counting and Grouping",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58223370aef9fc03fd000071",
    "name": "Dashatize it",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "571f832f07363d295d001ba8",
    "name": "Training JS #6:  Basic data types--Boolean  and conditional statements if..else",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57e921d8b36340f1fd000059",
    "name": "Holiday VI - Shark Pontoon",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Strings",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5226eb40316b56c8d500030f",
    "name": "Pascal's Triangle",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5d50e3914861a500121e1958",
    "name": "Alphabetical Addition",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "58bf9bd943fadb2a980000a7",
    "name": "Who is going to pay for the wall?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "54a2e93b22d236498400134b",
    "name": "Multi-tap Keypad Text Entry on an Old Mobile Phone",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a0be7ea8ba914fc9c00006b",
    "name": "The falling speed of petals",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "534e01fbbb17187c7e0000c6",
    "name": "Make a spiral",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "582dafb611d576b745000b74",
    "name": "For UFC Fans (Total Beginners): Conor McGregor vs George Saint Pierre",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56b0ff16d4aa33e5bb00008e",
    "name": "Remove the time",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types",
      "Parsing",
      "Algorithms",
      "Logic",
      "Strings"
    ]
  },
  {
    "id": "59bd5dc270a3b7350c00008b",
    "name": "Man in the west",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "515f51d438015969f7000013",
    "name": "Pyramid Array",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "535474308bb336c9980006f2",
    "name": "Greet Me",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5a523566b3bfa84c2e00010b",
    "name": "Minimize  Sum Of Array (Array Series #1)   ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Basic Language Features",
      "Arrays"
    ]
  },
  {
    "id": "54d1c59aba326343c80000e7",
    "name": "Incorrect division method",
    "approved": true,
    "tags": [
      "Bugs"
    ]
  },
  {
    "id": "55e6f5e58f7817808e00002e",
    "name": "A Rule of Divisibility by 7",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "582e0e592029ea10530009ce",
    "name": "Duck Duck Goose",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "577b9960df78c19bca00007e",
    "name": "Find the nth Digit of a Number",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Basic Language Features"
    ]
  },
  {
    "id": "526c7363236867513f0005ca",
    "name": "Leap Years",
    "approved": true,
    "tags": [
      "Algorithms",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "547274e24481cfc469000416",
    "name": "Basic subclasses - Adam and Eve",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "58712dfa5c538b6fc7000569",
    "name": "Simple beads count",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Operators"
    ]
  },
  {
    "id": "5b73fe9fb3d9776fbf00009e",
    "name": "Sum of differences in array",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5a805d8cafa10f8b930005ba",
    "name": "Find Nearest square number",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57cff961eca260b71900008f",
    "name": "Is there a vowel in there?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "58acfe4ae0201e1708000075",
    "name": "Simple Fun #152: Invite More Women?",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "555624b601231dc7a400017a",
    "name": "Josephus Survivor",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Lists",
      "Data Structures",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "56d49587df52101de70011e4",
    "name": "Leonardo Dicaprio and Oscars",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Conditional Statements",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5977618080ef220766000022",
    "name": "USD => CNY",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59d9ff9f7905dfeed50000b0",
    "name": "Alphabet symmetry",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5375f921003bf62192000746",
    "name": "Word a10n (abbreviation)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "580dda86c40fa6c45f00028a",
    "name": "Sum of Odd Cubed Numbers",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Higher-order Functions",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "59a8570b570190d313000037",
    "name": "Sum of Cubes",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "58d248c7012397a81800005c",
    "name": "Find out whether the shape is a cube",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Shape Modeling",
      "Graphics"
    ]
  },
  {
    "id": "525caa5c1bf619d28c000335",
    "name": "Tic-Tac-Toe Checker",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5a25ac6ac5e284cfbe000111",
    "name": "Coloured Triangles",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5420fc9bb5b2c7fd57000004",
    "name": "Highest Rank Number in an Array",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Objects"
    ]
  },
  {
    "id": "5680781b6b7c2be860000036",
    "name": "Find the vowels",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57a37f3cbb99449513000cd8",
    "name": "Get number from string",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5834fec22fb0ba7d080000e8",
    "name": "BASIC: Making Six Toast.",
    "approved": true,
    "tags": [
      "Algorithms",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "559f80b87fa8512e3e0000f5",
    "name": "Are arrow functions odd?",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55a996e0e8520afab9000055",
    "name": "Who ate the cookie?",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58113a64e10b53ec36000293",
    "name": "SQL Basics: Simple EXISTS",
    "approved": true,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "5a4e3782880385ba68000018",
    "name": "Balanced Number (Special Numbers Series #1 ) ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Basic Language Features",
      "Loops",
      "Control Flow",
      "Conditional Statements"
    ]
  },
  {
    "id": "5765870e190b1472ec0022a2",
    "name": "Path Finder #1: can you reach the exit?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59a96d71dbe3b06c0200009c",
    "name": "Build a square",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Conditional Statements"
    ]
  },
  {
    "id": "58f0ba42e89aa6158400000e",
    "name": "Folding your way to the moon",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Basic Language Features"
    ]
  },
  {
    "id": "594a9592704e4d21bc000131",
    "name": "SQL Basics: Mod",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "5a58d889880385c2f40000aa",
    "name": "Automorphic Number (Special Numbers Series  #6)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Basic Language Features",
      "Conditional Statements",
      "Control Flow",
      "Loops"
    ]
  },
  {
    "id": "5af15a37de4c7f223e00012d",
    "name": "Sort Out The Men  From Boys ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Basic Language Features",
      "Conditional Statements",
      "Control Flow",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "55f73f66d160f1f1db000059",
    "name": "Grasshopper - Combine strings",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56aed32a154d33a1f3000018",
    "name": "Fix the Bugs (Syntax) - My First Kata",
    "approved": true,
    "tags": [
      "Bugs",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "57a386117cb1f31890000039",
    "name": "Parse float",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "586dd26a69b6fd46dd0000c0",
    "name": "Esolang Interpreters #1 - Introduction to Esolangs and My First Interpreter (MiniStringFuck)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Interpreters",
      "Logic"
    ]
  },
  {
    "id": "5514e5b77e6b2f38e0000ca9",
    "name": "+1 Array",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "525d50d2037b7acd6e000534",
    "name": "Array Helpers",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Prototypes"
    ]
  },
  {
    "id": "56a4872cbb65f3a610000026",
    "name": "Rotate for a Max",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59440034e94fae05b2000073",
    "name": "SQL: Concatenating Columns",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "58094559c47d323ebd000035",
    "name": "SQL Basics: Simple JOIN and RANK",
    "approved": true,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "57f8ff867a28db569e000c4a",
    "name": "Kebabize",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "51fda2d95d6efda45e00004e",
    "name": "Codewars style ranking system",
    "approved": true,
    "tags": [
      "Algorithms",
      "Rules"
    ]
  },
  {
    "id": "57b6f5aadb5b3d0ae3000611",
    "name": "Length of missing array",
    "approved": true,
    "tags": [
      "Algorithms",
      "Basic Language Features",
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "58fa273ca6d84c158e000052",
    "name": "Number of Decimal Digits",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Integers",
      "Strings",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "594800ba6fb152624300006d",
    "name": "Easy SQL: LowerCase",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "562f91ff6a8b77dfe900006e",
    "name": "Going to the cinema",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56453a12fcee9a6c4700009c",
    "name": "Compare within margin",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5ba38ba180824a86850000f7",
    "name": "Simple remove duplicates",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5862f663b4e9d6f12b00003b",
    "name": "Thinkful - Number Drills: Blue and red marbles",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "59f11118a5e129e591000134",
    "name": "Sum of array singles",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "55acfc59c3c23d230f00006d",
    "name": "get ascii value of character",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5748a883eb737cab000022a6",
    "name": "Pirates!! Are the Cannons ready!??",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "58e24788e24ddee28e000053",
    "name": "Simple assembler interpreter",
    "approved": true,
    "tags": [
      "Algorithms",
      "Interpreters",
      "Logic"
    ]
  },
  {
    "id": "594a6133704e4daf5d00003d",
    "name": "Easy SQL: Rounding Decimals",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "57a6633153ba33189e000074",
    "name": "Ordered Count of Characters",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "54bb6f887e5a80180900046b",
    "name": "longest_palindrome",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "53d40c1e2f13e331fc000c26",
    "name": "The Millionth Fibonacci Kata",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5659c6d896bc135c4c00021e",
    "name": "Next smaller number with the same digits",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Strings",
      "Integers",
      "Mathematics",
      "Logic"
    ]
  },
  {
    "id": "553e8b195b853c6db4000048",
    "name": "All unique",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "570669d8cb7293a2d1001473",
    "name": "Chuck Norris VII - True or False? (Beginner)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Booleans",
      "Data Types"
    ]
  },
  {
    "id": "58941fec8afa3618c9000184",
    "name": "Simple Fun #74: Growing Plant",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "58113c03009b4fcc66000d29",
    "name": "SQL Basics: Simple IN",
    "approved": true,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "595aa94353e43a8746000120",
    "name": "Lost number in number sequence",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "52223df9e8f98c7aa7000062",
    "name": "ROT13",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Ciphers",
      "Cryptography",
      "Logic",
      "Security",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals"
    ]
  },
  {
    "id": "52f831fa9d332c6591000511",
    "name": "Molecule to atoms",
    "approved": true,
    "tags": [
      "Algorithms",
      "Parsing",
      "Logic",
      "Strings"
    ]
  },
  {
    "id": "58112f8004adbbdb500004fe",
    "name": "SQL Basics: Simple UNION ALL",
    "approved": true,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "593ef0e98b90525e090000b9",
    "name": "SQL Basics - Monsters using CASE",
    "approved": true,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "597c684822bc9388f600010f",
    "name": "FIXME:  Get Full Name",
    "approved": true,
    "tags": [
      "Bugs",
      "Objects",
      "Data Types"
    ]
  },
  {
    "id": "55b3425df71c1201a800009c",
    "name": "Statistics for an Athletic Association",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "57f759bb664021a30300007d",
    "name": "Switcheroo",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "55a5befdf16499bffb00007b",
    "name": "Fundamentals: Return",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "538835ae443aae6e03000547",
    "name": "Functional Addition",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "57a62154cf1fa5b25200031e",
    "name": "Alternate case",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58279e13c983ca4a2a00002a",
    "name": "Coding Meetup #2 - Higher-Order Functions Series - Greet developers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Higher-order Functions",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Data Structures",
      "Logic",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Arrays",
      "Objects",
      "Functional Programming"
    ]
  },
  {
    "id": "57613fb1033d766171000d60",
    "name": "UEFA EURO 2016",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "5b4e779c578c6a898e0005c5",
    "name": "Draw stairs",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "587136ba2eefcb92a9000027",
    "name": "Snakes and Ladders",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Functions",
      "Control Flow",
      "Design Patterns",
      "Design Principles",
      "Games"
    ]
  },
  {
    "id": "5a092d9e46d843b9db000064",
    "name": "Array element parity",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "54598d1fcbae2ae05200112c",
    "name": "Enumerable Magic #1 - True for All?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5a34af40e1ce0eb1f5000036",
    "name": "CSV representation of array",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Basic Language Features"
    ]
  },
  {
    "id": "587c2d08bb65b5e8040004fd",
    "name": "NBA full 48 minutes average",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5a360620f28b82a711000047",
    "name": "Define a card suit",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Basic Language Features"
    ]
  },
  {
    "id": "574b1916a3ebd6e4fa0012e7",
    "name": "They say that only the name is long enough to attract attention. They also said that only a simple Kata will have someone to solve it. This is a sadly story #1: Are they opposite?",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58663693b359c4a6560001d6",
    "name": "Maze Runner",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "52aeb2f3ad0e952f560005d3",
    "name": "Sort the Gift Code",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Hacking Holidays",
      "Sorting",
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "54fdaa4a50f167b5c000005f",
    "name": "Unexpected parsing",
    "approved": true,
    "tags": [
      "Bugs"
    ]
  },
  {
    "id": "5a4d303f880385399b000001",
    "name": "Strong Number (Special Numbers Series #2)  ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Basic Language Features",
      "Loops",
      "Control Flow",
      "Conditional Statements"
    ]
  },
  {
    "id": "5b16490986b6d336c900007d",
    "name": "My Languages",
    "approved": true,
    "tags": [
      "Algorithms",
      "Sorting",
      "Logic",
      "Arrays",
      "Data Types",
      "Hashes",
      "Data Structures"
    ]
  },
  {
    "id": "588a3c3ef0fbc9c8e1000095",
    "name": "max diff - easy",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Collections",
      "Lists",
      "Data Structures",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "526233aefd4764272800036f",
    "name": "Matrix Addition",
    "approved": true,
    "tags": [
      "Algorithms",
      "Graphs",
      "Data Structures",
      "Arithmetic",
      "Mathematics",
      "Logic",
      "Numbers",
      "Arrays",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "56fcfad9c7e1fa2472000034",
    "name": "Evil or Odious",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "581e014b55f2c52bb00000f8",
    "name": "Decipher this! ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays",
      "Ciphers",
      "Algorithms",
      "Cryptography",
      "Logic",
      "Security"
    ]
  },
  {
    "id": "5bb0c58f484fcd170700063d",
    "name": "Pillars",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "562926c855ca9fdc4800005b",
    "name": "Power",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5783d8f3202c0e486c001d23",
    "name": "Convert an array of strings to array of numbers",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Parsing",
      "Algorithms",
      "Logic",
      "Strings",
      "Type Casting",
      "Type Conversion"
    ]
  },
  {
    "id": "5809b9ef88b750ab180001ec",
    "name": "1. Find all active students",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "52b5247074ea613a09000164",
    "name": "Boiled Eggs",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Types",
      "Rules"
    ]
  },
  {
    "id": "57b58827d2a31c57720012e8",
    "name": "Fuel Calculator ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Conditional Statements",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "594a8f653b5b4e8f3d000035",
    "name": "SQL Basics: Raise to the Power",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "5a53a17bfd56cb9c14000003",
    "name": "Disarium Number (Special Numbers Series  #3)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Basic Language Features",
      "Conditional Statements",
      "Control Flow"
    ]
  },
  {
    "id": "586538146b56991861000293",
    "name": "If you can read this...",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "560ecf0cb040de130e00007d",
    "name": "Grasshopper - Order of operations",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Variables",
      "Basic Language Features"
    ]
  },
  {
    "id": "5569b10074fe4a6715000054",
    "name": "Counting Array Elements",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "59811fd8a070625d4c000013",
    "name": "Find the Integral",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "586beb5ba44cfc44ed0006c3",
    "name": "Sum even numbers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arithmetic",
      "Mathematics",
      "Logic",
      "Numbers",
      "Sorting",
      "Filtering"
    ]
  },
  {
    "id": "5539fecef69c483c5a000015",
    "name": "Backwards Read Primes",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5809575e166583acfa000083",
    "name": "SQL Basics: Simple table totaling.",
    "approved": true,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data",
      "Reporting"
    ]
  },
  {
    "id": "5d23d89906f92a00267bb83d",
    "name": "New Cashier Does Not Know About Space or Shift ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "52423db9add6f6fc39000354",
    "name": "Conway's Game of Life  - Unlimited Edition",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "586909e4c66d18dd1800009b",
    "name": "Currying functions: multiply all elements in an array",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Closures",
      "Basic Language Features",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "572b6b2772a38bc1e700007a",
    "name": "ASCII Total",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a87449ab1710171300000fd",
    "name": "Tidy Number (Special Numbers Series  #9)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Basic Language Features",
      "Arrays",
      "Loops",
      "Control Flow",
      "Strings"
    ]
  },
  {
    "id": "5721c189cdd71194c1000b9b",
    "name": "Training JS #11: loop statement --break,continue",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57eaec5608fed543d6000021",
    "name": "Divide and Conquer",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Numbers",
      "Arrays"
    ]
  },
  {
    "id": "5708f682c69b48047b000e07",
    "name": "Multiply the number",
    "approved": true,
    "tags": [
      "Bugs",
      "Fundamentals"
    ]
  },
  {
    "id": "59401e0e54a655a298000040",
    "name": "SQL Basics - Position",
    "approved": true,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "58c5577d61aefcf3ff000081",
    "name": "Rail Fence Cipher:  Encoding and Decoding ",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Ciphers",
      "Cryptography",
      "Security",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "591588d49f4056e13f000001",
    "name": "8kyu interpreters: HQ9+",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Basic Language Features",
      "Control Flow"
    ]
  },
  {
    "id": "5700c9acc1555755be00027e",
    "name": "All Inclusive?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5827acd5f524dd029d0005a4",
    "name": "Coding Meetup #3 - Higher-Order Functions Series - Is Ruby coming?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Higher-order Functions",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Data Structures",
      "Logic",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Arrays",
      "Objects",
      "Functional Programming"
    ]
  },
  {
    "id": "5aa1bcda373c2eb596000112",
    "name": "Maximum Triplet Sum (Array Series #7) ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Basic Language Features",
      "Arrays",
      "Loops",
      "Control Flow"
    ]
  },
  {
    "id": "57216d4bcdd71175d6000560",
    "name": "Training JS #9: loop statement --while and do..while",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "511f0fe64ae8683297000001",
    "name": "Basic Training: Add item to an Array",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5500d54c2ebe0a8e8a0003fd",
    "name": "Greatest common divisor",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Optimization",
      "Fundamentals",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "586d6cefbcc21eed7a001155",
    "name": "Character with longest consecutive repetition",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Fundamentals",
      "Logic"
    ]
  },
  {
    "id": "57096af70dad013aa200007b",
    "name": "Logical calculator",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "57ab2d6072292dbf7c000039",
    "name": "Polish alphabet",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "58dced7b702b805b200000be",
    "name": "Geometry Basics: Distance between points in 2D",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5296455e4fe0cdf2e000059f",
    "name": "Basic Calculator",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Operators",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5512a0b0509063e57d0003f5",
    "name": "A + B",
    "approved": true,
    "tags": [
      "Bugs",
      "Fundamentals",
      "Basic Language Features"
    ]
  },
  {
    "id": "5827bc50f524dd029d0005f2",
    "name": "Coding Meetup #4 - Higher-Order Functions Series - Find the first Python developer",
    "approved": true,
    "tags": [
      "Algorithms",
      "Higher-order Functions",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Data Structures",
      "Arrays",
      "Data Types",
      "Objects",
      "Logic",
      "Strings",
      "Regular Expressions",
      "Advanced Language Features"
    ]
  },
  {
    "id": "5effa412233ac3002a9e471d",
    "name": "16+18=214",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arithmetic",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "53f1015fa9fe02cbda00111a",
    "name": "Color Ghost",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "55a75e2d0803fea18f00009d",
    "name": "Find the Slope",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Algebra",
      "Data Conversion",
      "Data"
    ]
  },
  {
    "id": "5a54e796b3bfa8932c0000ed",
    "name": "Jumping  Number (Special Numbers Series  #4)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Basic Language Features",
      "Conditional Statements",
      "Control Flow",
      "Loops"
    ]
  },
  {
    "id": "593c9175933500f33400003e",
    "name": "Return the first M multiples of N",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5a3e1319b6486ac96f000049",
    "name": "Simple consecutive pairs",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "55a144eff5124e546400005a",
    "name": "Classy Classes",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms",
      "ES2015",
      "Babel"
    ]
  },
  {
    "id": "55a14f75ceda999ced000048",
    "name": "Template Strings",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "ES2015",
      "Babel"
    ]
  },
  {
    "id": "56a32dd6e4f4748cc3000006",
    "name": "Rainfall",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "55911ef14065454c75000062",
    "name": "Multiplying numbers as strings",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "596fba44963025c878000039",
    "name": "Contamination #1 -String-",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "597770e98b4b340e5b000071",
    "name": "extract file name",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "59cfc09a86a6fdf6df0000f1",
    "name": "Indexed capitalization",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5572f7c346eb58ae9c000047",
    "name": "Complete The  Pattern #1 ",
    "approved": true,
    "tags": [
      "Puzzles",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Sequences",
      "Arrays",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "5ad90fb688a0b74111000055",
    "name": "SQL with LOTR: Elven Wildcards",
    "approved": true,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "572b77262bedd351e9000076",
    "name": "pick a set of first elements",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "57f75cc397d62fc93d000059",
    "name": "Char Code Calculation",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Strings",
      "Numbers",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "552564a82142d701f5001228",
    "name": "Discover The Original Price",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5a63948acadebff56f000018",
    "name": "Product Of Maximums Of Array (Array Series #2) ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Basic Language Features",
      "Arrays",
      "Loops",
      "Control Flow"
    ]
  },
  {
    "id": "54fe05c4762e2e3047000add",
    "name": "Object Oriented Piracy ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "558f9f51e85b46e9fa000025",
    "name": "Difference Of Squares",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57ee24e17b45eff6d6000164",
    "name": "Cat and Mouse - Easy Version",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "582c297e56373f0426000098",
    "name": "Convert a linked list to a string",
    "approved": true,
    "tags": [
      "Algorithms",
      "Linked Lists",
      "Lists",
      "Data Structures",
      "Recursion",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "582e4c3406e37fcc770001ad",
    "name": "ES6 string addition",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "ES2015",
      "Babel"
    ]
  },
  {
    "id": "56f3f6a82010832b02000f38",
    "name": "Be Concise I - The Ternary Operator",
    "approved": true,
    "tags": [
      "Refactoring",
      "Fundamentals"
    ]
  },
  {
    "id": "59414360f5c3947364000070",
    "name": "SQL Basics: Repeat and Reverse",
    "approved": true,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "5a512f6a80eba857280000fc",
    "name": "Nth Smallest Element (Array Series  #4) ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Basic Language Features",
      "Arrays"
    ]
  },
  {
    "id": "5a651865fd56cb55760000e0",
    "name": "Array Leaders (Array Series #3)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Basic Language Features",
      "Arrays",
      "Loops",
      "Control Flow"
    ]
  },
  {
    "id": "59590976838112bfea0000fa",
    "name": "English beggars",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Queues",
      "Arrays",
      "Data Types",
      "Lists",
      "Data Structures",
      "Map/Reduce",
      "Algorithms",
      "Logic",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science",
      "Arithmetic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "598d91785d4ce3ec4f000018",
    "name": "Word values",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55b051fac50a3292a9000025",
    "name": "Filter the number",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "55eeddff3f64c954c2000059",
    "name": "Sum consecutives",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "57ecf6efc7fe13eb070000e1",
    "name": "The Office I - Outed",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Objects",
      "Numbers"
    ]
  },
  {
    "id": "57f6ecdfcca6e045d2001207",
    "name": "Simple Comparison? ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Numbers",
      "Integers"
    ]
  },
  {
    "id": "58d76854024c72c3e20000de",
    "name": "Reverse every other word in the string",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "598106cb34e205e074000031",
    "name": "The Deaf Rats of Hamelin",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5268af3872b786f006000228",
    "name": "Don't rely on luck.",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57c1ab3949324c321600013f",
    "name": "ToLeetSpeak",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "548ef5b7f33a646ea50000b2",
    "name": "Character Frequency",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "557f6437bf8dcdd135000010",
    "name": "Large Factorials",
    "approved": true,
    "tags": [
      "Algorithms",
      "Big Integers",
      "Integers",
      "Data Types",
      "Numbers"
    ]
  },
  {
    "id": "574c5075d27783851800169e",
    "name": "Heads and Legs",
    "approved": true,
    "tags": [
      "Algorithms",
      "Algebra",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "546d15cebed2e10334000ed9",
    "name": "Find the unknown digit",
    "approved": true,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5722b3f0bd5583cf44001000",
    "name": "Training JS #12: loop statement --for..in and for..of",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a55f04be6be383a50000187",
    "name": "Special  Number (Special Numbers Series  #5)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Basic Language Features",
      "Conditional Statements",
      "Control Flow",
      "Loops"
    ]
  },
  {
    "id": "570e8ec4127ad143660001fd",
    "name": "Name on billboard",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57280481e8118511f7000ffa",
    "name": "Training JS #18: Methods of String object--concat() split() and its good friend join()",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "577a6e90d48e51c55e000217",
    "name": "Collatz Conjecture (3n+1)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic",
      "Mathematics",
      "Numbers",
      "Arithmetic",
      "Basic Language Features"
    ]
  },
  {
    "id": "5274e122fc75c0943d000148",
    "name": "Grouped by commas",
    "approved": true,
    "tags": [
      "Algorithms",
      "String Formatting",
      "Formatting",
      "Logic",
      "Strings",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "59c5f4e9d751df43cf000035",
    "name": "Longest vowel chain",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "52e9aa89b5acdd26d3000127",
    "name": "Multiply characters",
    "approved": true,
    "tags": [
      "Bugs",
      "Strings",
      "Data Types",
      "Fundamentals"
    ]
  },
  {
    "id": "5613d06cee1e7da6d5000055",
    "name": "Steps in Primes",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "57036f007fd72e3b77000023",
    "name": "Classic Hello World",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Imperative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5274d9d3ebc3030802000165",
    "name": "Two Joggers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Logic"
    ]
  },
  {
    "id": "5436f26c4e3d6c40e5000282",
    "name": "Basic Sequence Practice",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5a045fee46d843effa000070",
    "name": "Factorial decomposition",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5671d975d81d6c1c87000022",
    "name": "4 By 4 Skyscrapers",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "576bb3c4b1abc497ec000065",
    "name": "Compare Strings by Sum of Chars",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Basic Language Features",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5413759479ba273f8100003d",
    "name": "esreveR",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Higher-order Functions",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "56eb0be52caf798c630013c0",
    "name": "Unlucky Days",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "53d16bd82578b1fb5b00128c",
    "name": "Grader",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Rules"
    ]
  },
  {
    "id": "56a29b237e9e997ff2000048",
    "name": "Grasshopper - Create the rooms",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a2e9ae2b6cfd7692a0000ba",
    "name": "Type of sum",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Basic Language Features"
    ]
  },
  {
    "id": "58678d29dbca9a68d80000d7",
    "name": "Esolang Interpreters #2 - Custom Smallfuck Interpreter",
    "approved": true,
    "tags": [
      "Algorithms",
      "Interpreters",
      "Logic"
    ]
  },
  {
    "id": "582cba7d3be8ce3a8300007c",
    "name": "SQL Bug Fixing: Fix the QUERY - Totaling",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59dd2c38f703c4ae5e000014",
    "name": "Numbers in strings",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "55c0a79e20be94c91400014b",
    "name": "Playing with cubes I",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5417423f9e2e6c2f040002ae",
    "name": "Digitize",
    "approved": true,
    "tags": [
      "Algorithms",
      "Lists",
      "Data Structures",
      "Numbers",
      "Data Types",
      "Parsing",
      "Logic",
      "Strings"
    ]
  },
  {
    "id": "57ebaa8f7b45ef590c00000c",
    "name": "Numbers to Letters",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Numbers",
      "Arrays"
    ]
  },
  {
    "id": "5890d8bc9f0f422cf200006b",
    "name": "Calculate Price Excluding VAT",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "59126992f9f87fd31600009b",
    "name": "Simple Fun #261: Whose Move",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5546180ca783b6d2d5000062",
    "name": "Squares sequence",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "58e0f0bf92d04ccf0a000010",
    "name": "Count all the sheep on farm in the heights of New Zealand",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Algebra",
      "Data Conversion",
      "Data"
    ]
  },
  {
    "id": "55d8618adfda93c89600012e",
    "name": "How do I compare numbers?",
    "approved": true,
    "tags": [
      "Bugs",
      "Fundamentals"
    ]
  },
  {
    "id": "5340298112fa30e786000688",
    "name": "Difference of 2",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Sorting",
      "Logic",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Utilities"
    ]
  },
  {
    "id": "5282b48bb70058e4c4000fa7",
    "name": "Convert A Hex String To RGB",
    "approved": true,
    "tags": [
      "Algorithms",
      "Parsing",
      "Logic",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5865cff66b5699883f0001aa",
    "name": "All Star Code Challenge #22",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "53e57dada0cb0400ba000688",
    "name": "Alphabetic Anagrams",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "540afbe2dc9f615d5e000425",
    "name": "Validate Sudoku with size `NxN`",
    "approved": true,
    "tags": [
      "Puzzles",
      "Arrays",
      "Data Types",
      "Games",
      "Algorithms",
      "Logic",
      "Validation",
      "Multi-Dimensional Arrays"
    ]
  },
  {
    "id": "5841f680c5c9b092950001ae",
    "name": "Series of integers from m to n",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "529b418d533b76924600085d",
    "name": "Convert PascalCase string into snake_case",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Formatting",
      "Logic"
    ]
  },
  {
    "id": "557af4c6169ac832300000ba",
    "name": "Help the Fruit Guy",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "5828713ed04efde70e000346",
    "name": "Coding Meetup #5 - Higher-Order Functions Series - Prepare the count of languages",
    "approved": true,
    "tags": [
      "Algorithms",
      "Higher-order Functions",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Data Structures",
      "Arrays",
      "Data Types",
      "Objects",
      "Logic",
      "Strings"
    ]
  },
  {
    "id": "58880c6e79a0a3e459000004",
    "name": "Simple Fun #37:  House Numbers Sum",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58ce8725c835848ad6000007",
    "name": "Drying Potatoes",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5816a3ecf54413a113000074",
    "name": "Conditional Count",
    "approved": true,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "57eba158e8ca2c8aba0002a0",
    "name": "Sort by Last Char",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5a8eb3fb57c562110f0000a1",
    "name": "GROCERY STORE: Inventory",
    "approved": true,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "592e830e043b99888600002d",
    "name": "Digital cypher",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Encryption",
      "Algorithms",
      "Cryptography",
      "Logic",
      "Security"
    ]
  },
  {
    "id": "559f44187fa851efad000087",
    "name": "SevenAte9",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Logic",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5694cb0ec554589633000036",
    "name": "Recursion #1 - Factorial",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Recursion",
      "Algorithms",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "54c9fcad28ec4c6e680011aa",
    "name": "Merged String Checker",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "55beec7dd347078289000021",
    "name": "Linked Lists - Length & Count",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Linked Lists",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "5ac698cdd325ad18a3000170",
    "name": "SQL with Street Fighter: Total Wins",
    "approved": true,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "55d410c492e6ed767000004f",
    "name": "The old switcheroo",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "52ea928a1ef5cfec800003ee",
    "name": "IPv4 to int32",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Networks",
      "Algorithms",
      "Logic",
      "Bits",
      "Binary",
      "Numbers",
      "Data Types",
      "Integers",
      "Utilities"
    ]
  },
  {
    "id": "526a569ca578d7e6e300034e",
    "name": "Base Conversion",
    "approved": true,
    "tags": [
      "Algorithms",
      "Utilities",
      "Strings",
      "Data Types",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5650ab06d11d675371000003",
    "name": "Split In Parts",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "569b5cec755dd3534d00000f",
    "name": "Looking for a benefactor",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5269452810342858ec000951",
    "name": "Coordinates Validator",
    "approved": true,
    "tags": [
      "Algorithms",
      "Validation",
      "Logic",
      "Numbers",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings"
    ]
  },
  {
    "id": "54ca3e777120b56cb6000710",
    "name": "Unary function chainer",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "578c1e2edaa01a9a02000b7f",
    "name": "Crash Override",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Objects",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "5803956ddb07c5c74200144e",
    "name": "Age Range Compatibility Equation",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58640340b3a675d9a70000b9",
    "name": "All Star Code Challenge #3",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "51e04f6b544cf3f6550000c1",
    "name": "Beeramid",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5616868c81a0f281e500005c",
    "name": "Prize Draw",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Sorting",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "56214b6864fe8813f1000019",
    "name": "Grasshopper - Bug Squashing",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57b68bc7b69bfc8209000307",
    "name": "Average Scores",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "55c933c115a8c426ac000082",
    "name": "Switch/Case - Bug Fixing #6",
    "approved": true,
    "tags": [
      "Bugs",
      "Case/Switch Statements",
      "Conditional Statements",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "597d75744f4190857a00008d",
    "name": "Letterbox Paint-Squad",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5763bb0af716cad8fb000580",
    "name": "Count the number of cubes with paint on",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5a99a03e4a6b34bb3c000124",
    "name": "Primorial Of  a Number ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Basic Language Features",
      "Arrays",
      "Loops",
      "Control Flow",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5a8d94d3ba1bb569e5000198",
    "name": "BASICS: Length based SELECT  with LIKE",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data",
      "SQL",
      "Databases",
      "Information Systems"
    ]
  },
  {
    "id": "566be96bb3174e155300001b",
    "name": "Ball Upwards",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "514a7ac1a33775cbb500001e",
    "name": "Return to Sanity",
    "approved": true,
    "tags": [
      "Bugs"
    ]
  },
  {
    "id": "598f76a44f613e0e0b000026",
    "name": "Sum of integers in string",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a262cfb8f27f217f700000b",
    "name": "Unique string characters",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "55a14aa4817efe41c20000bc",
    "name": "Classy Extentions",
    "approved": true,
    "tags": [
      "Fundamentals",
      "ES2015",
      "Babel",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "59f08f89a5e129c543000069",
    "name": "String  array duplicates",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "590e03aef55cab099a0002e8",
    "name": "Incrementer",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57f8ee485cae443c4d000127",
    "name": "Spacify",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "59c287b16bddd291c700009a",
    "name": "For Twins: 2. Math operations",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5898b4b71d298e51b600014b",
    "name": "Srot the inner ctonnet in dsnnieedcg oredr",
    "approved": true,
    "tags": [
      "Algorithms",
      "Basic Language Features",
      "Fundamentals",
      "Strings",
      "Data Types",
      "Logic"
    ]
  },
  {
    "id": "5b0d67c1cb35dfa10b0022c7",
    "name": "The wheat/rice and chessboard problem",
    "approved": true,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Bitwise Operators",
      "Bits",
      "Operators",
      "Advanced Language Features",
      "Binary",
      "Fundamentals",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "56af1a20509ce5b9b000001e",
    "name": "Salesman's Travel",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5811315e04adbbdb5000050e",
    "name": "SQL Basics: Simple NULL handling",
    "approved": true,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "58aed2cafab8faca1d000e20",
    "name": "Nth power rules them all!",
    "approved": true,
    "tags": [
      "Puzzles",
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Algebra",
      "Data Conversion",
      "Data"
    ]
  },
  {
    "id": "5713bc89c82eff33c60009f7",
    "name": "Freudian translator ",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5809b62808ad92e31b000031",
    "name": "Basic Math (Add or Subtract)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "578a8a01e9fd1549e50001f1",
    "name": "Is your period late?",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57fb44a12b53146fe1000136",
    "name": "Exclamation marks series #17: Put the exclamation marks and question marks on the balance - are they balanced?",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "544a54fd18b8e06d240005c0",
    "name": "Smallest value of an array",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "57256064856584bc47000611",
    "name": "Training JS #15: Methods of Number object--toFixed(), toExponential() and toPrecision()",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57274562c8dcebe77e001012",
    "name": "Training JS #16: Methods of String object--slice(), substring() and substr()",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a7893ef0025e9eb50000013",
    "name": "Maximum Gap (Array Series #4)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Basic Language Features",
      "Arrays",
      "Loops",
      "Control Flow"
    ]
  },
  {
    "id": "56d6c333c9ae3fc32800070f",
    "name": "Days in the year",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "5817b124e7f4576fd00020a2",
    "name": "Relational division: Find all movies two actors cast in together",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Databases",
      "Information Systems",
      "Data",
      "SQL"
    ]
  },
  {
    "id": "5267faf57526ea542e0007fb",
    "name": "Math Issues",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "563d59dd8e47a5ed220000ba",
    "name": "Debug Sum of Digits of a Number",
    "approved": true,
    "tags": [
      "Bugs",
      "Fundamentals"
    ]
  },
  {
    "id": "5866fc43395d9138a7000006",
    "name": "Ensure question",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5966eeb31b229e44eb00007a",
    "name": "V     A     P     O     R     C     O     D     E",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "54129112fb7c188740000162",
    "name": "Prefill an Array",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Validation",
      "Algorithms",
      "Logic",
      "Basic Language Features",
      "Arrays",
      "Data Types",
      "Control Flow",
      "Utilities"
    ]
  },
  {
    "id": "5276c18121e20900c0000235",
    "name": "Number Zoo Patrol",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Performance",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "537e18b6147aa838f600001b",
    "name": "Text align justify",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Formatting",
      "Logic"
    ]
  },
  {
    "id": "583ade15666df5a64e000058",
    "name": "Evens and Odds",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "54de279df565808f8b00126a",
    "name": "Binary multiple of 3",
    "approved": true,
    "tags": [
      "Puzzles",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings",
      "Algorithms",
      "Logic",
      "Games",
      "Arithmetic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "580755730b5a77650500010c",
    "name": "Odd-Even String Sort",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5a91a7c5fd8c061367000002",
    "name": "Minimum Steps  (Array Series #6)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Basic Language Features",
      "Arrays",
      "Loops",
      "Control Flow"
    ]
  },
  {
    "id": "55955a48a4e9c1a77500005a",
    "name": "Say hello!",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57f604a21bd4fe771b00009c",
    "name": "The Office IV - Find a Meeting Room",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "580fb94e12b34dd1c40001f0",
    "name": "SQL Bug Fixing: Fix the JOIN",
    "approved": true,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "58249d08b81f70a2fc0001a4",
    "name": "Return the closest number multiple of 10",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5596f6e9529e9ab6fb000014",
    "name": "Calculate String Rotation",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "59f7fc109f0e86d705000043",
    "name": "By 3, or not by 3?  That is the question . . .",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Numbers",
      "Strings",
      "If-then-else Statements",
      "Conditional Statements",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5a9e86705ee396d6be000091",
    "name": "Check three and two",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "51c89385ee245d7ddf000001",
    "name": "Substituting Variables Into Strings: Padded Numbers",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "String Formatting",
      "Formatting",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "58287977ef8d4451f90001a0",
    "name": "Coding Meetup #6 - Higher-Order Functions Series - Can they code in the same language?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Higher-order Functions",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Data Structures",
      "Arrays",
      "Data Types",
      "Objects",
      "Logic",
      "Strings"
    ]
  },
  {
    "id": "5601c5f6ba804403c7000004",
    "name": "Localize The Barycenter of a Triangle",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Geometry",
      "Algebra"
    ]
  },
  {
    "id": "5635e7cb49adc7b54500001c",
    "name": "ATM",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5ab7a736edbcfc8e62000007",
    "name": "SQL with Sailor Moon: Thinking about JOINs...",
    "approved": true,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "57277a31e5e51450a4000010",
    "name": "Training JS #17: Methods of String object--indexOf(), lastIndexOf() and search()",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5878520d52628a092f0002d0",
    "name": "String transformer",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5701e43f86306a615c001868",
    "name": "Credit card issuer checking",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5aee86c5783bb432cd000018",
    "name": "Responsible Drinking",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "580435ab150cca22650001fb",
    "name": "Find the lucky numbers",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Basic Language Features"
    ]
  },
  {
    "id": "5959ec605595565f5c00002b",
    "name": "Reverse the bits in an integer",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Bits",
      "Binary"
    ]
  },
  {
    "id": "51689e27fe9a00b126000004",
    "name": "Format words into a sentence",
    "approved": true,
    "tags": [
      "Algorithms",
      "Utilities",
      "Formatting",
      "Logic",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5a29a0898f27f2d9c9000058",
    "name": "Simple string characters",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57fb142297e0860073000064",
    "name": "Exclamation marks series #13: Count the number of exclamation marks and question marks, return the product",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "586ee462d0982081bf001f07",
    "name": "Thinkful - Dictionary drills: Order filler",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58841cb52a077503c4000015",
    "name": "Simple Fun #2: Circle of Numbers",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "55b4d87a3766d9873a0000d4",
    "name": "How Much?",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5939ab6eed348a945f0007b2",
    "name": "Inspiring Strings",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5a905c2157c562994900009d",
    "name": "Product  Array (Array Series #5)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Basic Language Features",
      "Arrays",
      "Loops",
      "Control Flow"
    ]
  },
  {
    "id": "55e8aba23d399a59500000ce",
    "name": "Grasshopper - Terminal Game #1",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Objects",
      "Data Types"
    ]
  },
  {
    "id": "594a691720ac16a544000075",
    "name": "Easy SQL: Square Root and Log",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "567bed99ee3451292c000025",
    "name": "Regexp Basics - is it a vowel?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "5811501c2d35672d4f000146",
    "name": "SQL Basics: Simple WITH",
    "approved": true,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data",
      "Reporting"
    ]
  },
  {
    "id": "5b68c7029756802aa2000176",
    "name": "easy  logs",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "55b75fcf67e558d3750000a3",
    "name": "Building blocks",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Basic Language Features"
    ]
  },
  {
    "id": "594901ba44645fd7bd00005f",
    "name": "SQL Basics:  Maths with String Manipulations",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "52829c5fe08baf7edc00122b",
    "name": "Number Of Occurrences",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Search",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "56c22c5ae8b139416c00175d",
    "name": "Job Matching #1",
    "approved": true,
    "tags": [
      "Algorithms",
      "Objects",
      "Data Types"
    ]
  },
  {
    "id": "57238ceaef9008adc7000603",
    "name": "Training JS #14: Methods of Number object--toString() and toLocaleString()",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "54dba07f03e88a4cec000caf",
    "name": "Barking mad",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5731861d05d14d6f50000626",
    "name": "Training JS #29: methods of arrayObject---concat() and join()",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5abcf0f930488ff1a6000b66",
    "name": "SQL with Harry Potter: Sorting Hat Comparators",
    "approved": true,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "570bcd9715944a2c8e000009",
    "name": "Coding 3min : Jumping Dutch act",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "573f5c61e7752709df0005d2",
    "name": "Merging sorted integer arrays (without duplicates)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "57faa6ff9610ce181b000028",
    "name": "Clean up after your dog",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5518a860a73e708c0a000027",
    "name": "Last digit of a huge number",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Arithmetic",
      "Integers"
    ]
  },
  {
    "id": "57a1ae8c7cb1f31e4e000130",
    "name": "Find min and max",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57cc79ec484cf991c900018d",
    "name": "Double Sort",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Numbers",
      "Arrays"
    ]
  },
  {
    "id": "55a4f9afeffe4231090000d6",
    "name": "Is integer safe to use?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "ES2015",
      "Babel",
      "Numbers",
      "Data Types",
      "Integers"
    ]
  },
  {
    "id": "594900e16fd782a607000059",
    "name": "Easy SQL: Bit Length",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "5b358a1e228d316283001892",
    "name": "Interview Question (easy)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5e5f09dc0a17be0023920f6f",
    "name": "Countries Capitals for Trivia Night (SQL for Beginners #6)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "609eee71109f860006c377d1",
    "name": "Last Survivor",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Basic Language Features"
    ]
  },
  {
    "id": "526d84b98f428f14a60008da",
    "name": "Hamming Numbers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arithmetic",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5a71939d373c2e634200008e",
    "name": "Simple string reversal",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5966847f4025872c7d00015b",
    "name": "String average",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Numbers"
    ]
  },
  {
    "id": "56882731514ec3ec3d000009",
    "name": "Connect Four",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a07e5b7ffe75fd049000051",
    "name": "Sort My Textbooks",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures",
      "Sorting",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "53907ac3cd51b69f790006c5",
    "name": "Triangle type",
    "approved": true,
    "tags": [
      "Algorithms",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "582ba36cc1901399a70005fc",
    "name": "Coding Meetup #11 - Higher-Order Functions Series - Find the average age",
    "approved": true,
    "tags": [
      "Algorithms",
      "Higher-order Functions",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Data Structures",
      "Arrays",
      "Data Types",
      "Objects",
      "Logic",
      "Strings"
    ]
  },
  {
    "id": "527b3cd0492b6b15250060af",
    "name": "Push a hash/an object into array",
    "approved": true,
    "tags": [
      "Bugs",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5768a693a3205e1cc100071f",
    "name": "Initialize my name",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "52756e5ad454534f220001ef",
    "name": "Longest Common Subsequence",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Search",
      "Logic"
    ]
  },
  {
    "id": "52d1bd3694d26f8d6e0000d3",
    "name": "Vigenère Cipher Helper",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Ciphers",
      "Cryptography",
      "Security",
      "Objects",
      "Data Types",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Fundamentals",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "5512e5662b34d88e44000060",
    "name": "Broken sequence",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a9c35e9ba1bb5c54a0001ac",
    "name": "Sum of Two Integers ",
    "approved": true,
    "tags": [
      "Puzzles",
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Basic Language Features",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "514a677421607afc99000002",
    "name": "getNames()",
    "approved": true,
    "tags": [
      "Bugs"
    ]
  },
  {
    "id": "57ed4cef7b45ef8774000014",
    "name": "The Office II - Boredom Score",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Objects",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "5389864ec72ce03383000484",
    "name": "Autocomplete! Yay!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Arrays",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "55733d3ef7c43f8b0700007c",
    "name": "Complete The Pattern #2",
    "approved": true,
    "tags": [
      "Puzzles",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "56a4addbfd4a55694100001f",
    "name": "Did she say hallo?",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "568018a64f35f0c613000054",
    "name": "Finish Guess the Number Game",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms",
      "ES2015",
      "Babel"
    ]
  },
  {
    "id": "56c24c58e0c0f741d4001aef",
    "name": "isReallyNaN",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Types",
      "Basic Language Features",
      "Numbers"
    ]
  },
  {
    "id": "57ab3c09bb994429df000a4a",
    "name": "Return Two Highest Values in List",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "5a946d9fba1bb5135100007c",
    "name": "Transform To Prime",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Basic Language Features",
      "Arrays",
      "Loops",
      "Control Flow"
    ]
  },
  {
    "id": "5ae7e3f068e6445bc8000046",
    "name": "See You Next Happy Year ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Basic Language Features",
      "Conditional Statements",
      "Control Flow"
    ]
  },
  {
    "id": "5d59576768ba810001f1f8d6",
    "name": "Coefficients of the Quadratic Equation",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5943a58f95d5f72cb900006a",
    "name": "SQL: Right and Left",
    "approved": true,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "5f77d62851f6bc0033616bd8",
    "name": "Valid Spacing",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "567de72e8b3621b3c300000b",
    "name": "Regexp Basics - is it a letter?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "57f625992f4d53c24200070e",
    "name": "Lottery Ticket",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Numbers",
      "Arrays"
    ]
  },
  {
    "id": "585b1fafe08bae9988000314",
    "name": "Digits explosion",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5a1a9e5032b8b98477000004",
    "name": "Evens times last",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "52b305bec65ea40fe90007a7",
    "name": "Arrh, grabscrab!",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Dictionary",
      "Data Structures",
      "Search",
      "Logic"
    ]
  },
  {
    "id": "52fb87703c1351ebd200081f",
    "name": "What century is it?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Logic",
      "Formatting",
      "Dates/Time",
      "Utilities"
    ]
  },
  {
    "id": "595a3ba3843b0cbf8e000004",
    "name": "SQL Basics: Up and Down",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "54599705cbae2aa60b0011a4",
    "name": "Enumerable Magic #5- True for Just One?",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5808ff71c7cfa1c6aa00006d",
    "name": "Count letters in string",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Hashes",
      "Data Structures"
    ]
  },
  {
    "id": "5520714decb43308ea000083",
    "name": "Nth Root of a Number",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5738f5ea9545204cec000155",
    "name": "Help Bob count letters and digits.",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "59f061773e532d0c87000d16",
    "name": "Elevator Distance",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "541af676b589989aed0009e7",
    "name": "Counting Change Combinations",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Recursion",
      "Algorithms",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "5886e082a836a691340000c3",
    "name": "Simple Fun #27: Rectangle Rotation",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "592fd8f752ee71ac7e00008a",
    "name": "Covfefe",
    "approved": true,
    "tags": [
      "Puzzles",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "562e98755e9214cd2500003d",
    "name": "A bugs trilogy: Episode 1 - \"Let Math.Random(); decide your future\"",
    "approved": true,
    "tags": [
      "Bugs",
      "Fundamentals",
      "Basic Language Features"
    ]
  },
  {
    "id": "56ed20a2c4e5d69155000301",
    "name": "Scaling Squared Strings",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57f7b8271e3d9283300000b4",
    "name": "Even or Odd - Which is Greater?",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55dc4520094bbaf50e0000cb",
    "name": "Wilson primes",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Fundamentals"
    ]
  },
  {
    "id": "55f89832ac9a66518f000118",
    "name": "Simplifying multilinear polynomials",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Strings",
      "Data Types",
      "Utilities",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Parsing"
    ]
  },
  {
    "id": "563fbac924106b8bf7000046",
    "name": "Breadcrumb Generator",
    "approved": true,
    "tags": [
      "Algorithms",
      "Parsing",
      "Logic",
      "Strings",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals"
    ]
  },
  {
    "id": "56786a687e9a88d1cf00005d",
    "name": "Character Counter",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Logic",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "51edd51599a189fe7f000015",
    "name": "Mean Square Error",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "56dbe7f113c2f63570000b86",
    "name": "Moves in squared strings (II)",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5641c3f809bf31f008000042",
    "name": "Formatting decimal places #1",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Formatting",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "58291fea7ff3f640980000f9",
    "name": "Coding Meetup #8 - Higher-Order Functions Series - Will all continents be represented?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Higher-order Functions",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Data Structures",
      "Arrays",
      "Data Types",
      "Objects",
      "Logic",
      "Strings"
    ]
  },
  {
    "id": "59a9919107157a45220000e1",
    "name": "Find all occurrences of an element in an array",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "59ca8e8e1a68b7de740001f4",
    "name": "String matchup",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "57bfea4cb19505912900012c",
    "name": "Points of Reflection",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Geometry",
      "Algebra"
    ]
  },
  {
    "id": "582887f7d04efdaae3000090",
    "name": "Coding Meetup #7 - Higher-Order Functions Series - Find the most senior developer",
    "approved": true,
    "tags": [
      "Algorithms",
      "Higher-order Functions",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Data Structures",
      "Arrays",
      "Data Types",
      "Objects",
      "Logic",
      "Strings"
    ]
  },
  {
    "id": "550527b108b86f700000073f",
    "name": "PI approximation ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5c44b0b200ce187106452139",
    "name": "How many arguments",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "589478160c0f8a40870000bc",
    "name": "Area of an arrow",
    "approved": true,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5951d30ce99cf2467e000013",
    "name": "Pythagorean Triple",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algebra",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5121303128ef4b495f000001",
    "name": "Refactored Greeting",
    "approved": true,
    "tags": [
      "Refactoring",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5703c093022cd1aae90012c9",
    "name": "Be Concise IV - Index of an element in an array",
    "approved": true,
    "tags": [
      "Refactoring"
    ]
  },
  {
    "id": "57ad85bb7cb1f3ae7c000039",
    "name": "Numbers with this digit inside",
    "approved": true,
    "tags": [
      "Algorithms",
      "Basic Language Features",
      "Fundamentals",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "59727ff285281a44e3000011",
    "name": "Band name generator",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5263a84ffcadb968b6000513",
    "name": "Square Matrix Multiplication",
    "approved": true,
    "tags": [
      "Algorithms",
      "Graphs",
      "Data Structures",
      "Arithmetic",
      "Mathematics",
      "Logic",
      "Numbers",
      "Linear Algebra",
      "Algebra",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "5d49c93d089c6e000ff8428c",
    "name": "Computer problem series #1: Fill the Hard Disk Drive",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "52bef5e3588c56132c0003bc",
    "name": "Sort binary tree by levels",
    "approved": true,
    "tags": [
      "Algorithms",
      "Trees",
      "Data Structures",
      "Binary Search Trees",
      "Binary",
      "Performance"
    ]
  },
  {
    "id": "556b85b433fb5e899200003f",
    "name": "Simple fraction to mixed number converter",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "599c20626bd8795ce900001d",
    "name": "Summy",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Puzzles",
      "Games",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "52ec24228a515e620b0005ef",
    "name": "Explosive Sum",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Arithmetic",
      "Mathematics",
      "Integers"
    ]
  },
  {
    "id": "53cf459503f9bbb774000003",
    "name": "Name Your Python!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "559f860f8c0d6c7784000119",
    "name": "Are there any arrows left?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "ES2015",
      "Babel"
    ]
  },
  {
    "id": "55caf1fd8063ddfa8e000018",
    "name": "Arithmetic progression",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Sequences",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "568dc69683322417eb00002c",
    "name": "L2: Triple X",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "522551eee9abb932420004a0",
    "name": "N-th Fibonacci",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "57873ab5e55533a2890000c7",
    "name": "Correct the time-string",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Parsing",
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types",
      "Basic Language Features"
    ]
  },
  {
    "id": "56582133c932d8239900002e",
    "name": "Find Count of Most Frequent Item in an Array",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "594a50bafd3b7031c1000013",
    "name": "Easy SQL: Convert to Hexadecimal",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "5a090c4e697598d0b9000004",
    "name": "Max-min arrays",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5250a89b1625e5decd000413",
    "name": "Flatten",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Arrays",
      "Data Types",
      "Utilities"
    ]
  },
  {
    "id": "526c7b931666d07889000a3c",
    "name": "Befunge Interpreter",
    "approved": true,
    "tags": [
      "Algorithms",
      "Esoteric Languages",
      "Interpreters",
      "Logic"
    ]
  },
  {
    "id": "577ad961ae2807182f000c29",
    "name": "Count the Characters",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "5831c204a31721e2ae000294",
    "name": "Changing letters",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "542ebbdb494db239f8000046",
    "name": "What's up next?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Logic"
    ]
  },
  {
    "id": "5b39e91ee7a2c103300018b3",
    "name": "Remove consecutive duplicate words",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals"
    ]
  },
  {
    "id": "566dc566f6ea9a14b500007b",
    "name": "Filtering even numbers (Bug Fixes)",
    "approved": true,
    "tags": [
      "Bugs",
      "Fundamentals"
    ]
  },
  {
    "id": "5571f712ddf00b54420000ee",
    "name": "Loose Change",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Games",
      "Dictionary",
      "Data Structures"
    ]
  },
  {
    "id": "5e2596a9ad937f002e510435",
    "name": "Pandemia 🌡️",
    "approved": true,
    "tags": [
      "Puzzles",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "55805ab490c73741b7000064",
    "name": "makeBackronym",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Methods",
      "Functions",
      "Object-oriented Programming",
      "Control Flow",
      "Basic Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5a662a02e626c54e87000123",
    "name": "Extra Perfect Numbers (Special Numbers Series  #7)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Basic Language Features",
      "Arrays",
      "Loops",
      "Control Flow"
    ]
  },
  {
    "id": "527e4141bb2ea5ea4f00072f",
    "name": "Twisted Sum",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Arithmetic",
      "Mathematics",
      "Logic"
    ]
  },
  {
    "id": "56b8903933dbe5831e000c76",
    "name": "Spoonerize Me",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5bbd279c8f8bbd5ee500000f",
    "name": "Find Screen Size",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "5254bd1357d59fbbe90001ec",
    "name": "Sequences and Series",
    "approved": true,
    "tags": [
      "Puzzles",
      "Sequences",
      "Arrays",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "541629460b198da04e000bb9",
    "name": "Last",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "5938f5b606c3033f4700015a",
    "name": "Alphabet war - airstrike - letters massacre",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "59c8b38423dacc7d95000008",
    "name": "Simple Fun #352: Reagent Formula",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "526dad7f8c0eb5c4640000a4",
    "name": "Vector class",
    "approved": true,
    "tags": [
      "Algorithms",
      "Dynamic Arrays",
      "Arrays",
      "Functional Programming",
      "Data Types",
      "Declarative Programming",
      "Programming Paradigms",
      "Vectors",
      "Objects",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Fundamentals",
      "Prototypes"
    ]
  },
  {
    "id": "55ab4f980f2d576c070000f4",
    "name": "Playing on a chessboard",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5901f361927288d961000013",
    "name": "Product of Array Items",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "52aae14aa7fd03d57400058f",
    "name": "Remove Zeros",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Sorting",
      "Logic"
    ]
  },
  {
    "id": "55afed09237df73343000042",
    "name": "lucky number",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5739174624fc28e188000465",
    "name": "Ranking Poker Hands",
    "approved": true,
    "tags": [
      "Algorithms",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Games"
    ]
  },
  {
    "id": "581283eb0a5fb13e06000020",
    "name": "Hello SQL World!",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5421c6a2dda52688f6000af8",
    "name": "Function Composition",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Higher-order Functions",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Lambdas",
      "Composition",
      "Design Principles"
    ]
  },
  {
    "id": "56baeae7022c16dd7400086e",
    "name": "Phone Directory",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "58356a94f8358058f30004b5",
    "name": "Drone Fly-By",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "5299413901337c637e000004",
    "name": "Return the Missing Element",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Search",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "563089b9b7be03472d00002b",
    "name": "Remove All The Marked Elements of a List",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Algorithms",
      "Logic",
      "Data Structures"
    ]
  },
  {
    "id": "57fcaed83206fb15fd00027a",
    "name": "Replace every nth",
    "approved": true,
    "tags": [
      "Algorithms",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "51f41b98e8f176e70d0002a8",
    "name": "Sort arrays - 1",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Sorting",
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "51c7d8268a35b6b8b40002f2",
    "name": "Building Strings From a Hash",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5639bdcef2f9b06ce800005b",
    "name": "Return String of First Characters",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "59401c25c15cbeb58d000028",
    "name": "SQL Basics - Trimming the Field",
    "approved": true,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "5729b103dd8bac11a900119e",
    "name": "Training JS #21: Methods of String object--trim() and the string template",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "559f3123e66a7204f000009f",
    "name": "Take an Arrow to the knee, Functionally",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "52dbae61ca039685460001ae",
    "name": "Search for letters",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Search",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "58539230879867a8cd00011c",
    "name": "Where is my parent!?(cry)",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "54557d61126a00423b000a45",
    "name": "shorter concat [reverse longer]",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "54592a5052756d5c5d0009c3",
    "name": "Head, Tail, Init and Last",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Ranges",
      "Basic Language Features",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "5868a68ba44cfc763e00008d",
    "name": "Esolang Interpreters #3 - Custom Paintf**k Interpreter",
    "approved": true,
    "tags": [
      "Algorithms",
      "Interpreters",
      "Logic"
    ]
  },
  {
    "id": "56c04261c3fcf33f2d000534",
    "name": "Magnet particules in boxes",
    "approved": true,
    "tags": [
      "Algorithms",
      "Optimization",
      "Mathematics",
      "Logic",
      "Numbers",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "5811597e9d278beb04000038",
    "name": "SQL Basics: Group By Day",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Reporting",
      "Data",
      "Charts",
      "SQL",
      "Databases",
      "Information Systems"
    ]
  },
  {
    "id": "5ab828bcedbcfc65ea000099",
    "name": "SQL with Pokemon:  Damage Multipliers",
    "approved": true,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "547c71fdc5b2b38db1000098",
    "name": "\"this\" is a problem ",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56b22765e1007b79f2000079",
    "name": "Narcissistic Numbers ",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5800580f8f7ddaea13000025",
    "name": "Sum The Tree",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Trees",
      "Data Structures",
      "Recursion",
      "Algorithms",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science",
      "Binary Search Trees",
      "Binary"
    ]
  },
  {
    "id": "58e0bd6a79716b7fcf0013b1",
    "name": "Calculate Two People's Individual Ages",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "57be674b93687de78c0001d9",
    "name": "Powers of 3",
    "approved": true,
    "tags": [
      "Algorithms",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5b37a50642b27ebf2e000010",
    "name": "Sum of a Beach",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Logic",
      "Strings",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "54598e89cbae2ac001001135",
    "name": "Enumerable Magic #2 - True for Any?",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "573992c724fc289553000e95",
    "name": "Find the smallest",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57658bfa28ed87ecfa00058a",
    "name": "Path Finder #2: shortest path",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "58ad317d1541651a740000c5",
    "name": "Simple Fun #159: Middle Permutation",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "525d9b1a037b7a9da7000905",
    "name": "Javascript filter - 1",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "59b844528bcb7735560000a0",
    "name": "Nice Array",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5bbb8887484fcd36fb0020ca",
    "name": "Plus - minus - plus - plus - ... - Count",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a8ed96bfd8c066e7f00011a",
    "name": "GROCERY STORE: Support Local Products",
    "approved": true,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "51fc12de24a9d8cb0e000001",
    "name": "ISBN-10 Validation",
    "approved": true,
    "tags": [
      "Algorithms",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings"
    ]
  },
  {
    "id": "5259510fc76e59579e0009d4",
    "name": "Did you mean ...?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Search",
      "Logic",
      "Dictionary",
      "Data Structures",
      "Fuzzy Matching"
    ]
  },
  {
    "id": "55960bbb182094bc4800007b",
    "name": "Insert dashes",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "582dace555a1f4d859000058",
    "name": "Coding Meetup #12 - Higher-Order Functions Series - Find GitHub admins",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Higher-order Functions",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Data Structures",
      "Arrays",
      "Data Types",
      "Objects",
      "Algorithms",
      "Logic",
      "Strings"
    ]
  },
  {
    "id": "5533c2a50c4fea6832000101",
    "name": "Dictionary from two lists",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Dictionary",
      "Data Structures"
    ]
  },
  {
    "id": "566dc05f855b36a031000048",
    "name": "Add new item (collections are passed by reference)",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5894318275f2c75695000146",
    "name": "Simple Fun #79: Delete a Digit",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "559ce00b70041bc7b600013d",
    "name": "Financing Plan on Planet XY140Z-n",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "563f0c54a22b9345bf000053",
    "name": "A disguised sequence (I)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Sequences",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "56b1eb19247c01493a000065",
    "name": "Unique Sum",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures",
      "Logic",
      "Lambdas",
      "Functional Programming",
      "Functions",
      "Declarative Programming",
      "Programming Paradigms",
      "Control Flow",
      "Basic Language Features",
      "Filtering",
      "Algorithms"
    ]
  },
  {
    "id": "57feb00f08d102352400026e",
    "name": "Airport Arrivals/Departures - #1",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "583952fbc23341c7180002fd",
    "name": "Coding Meetup #14 - Higher-Order Functions Series - Order the food",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Higher-order Functions",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Data Structures",
      "Arrays",
      "Data Types",
      "Objects",
      "Algorithms",
      "Logic",
      "Strings"
    ]
  },
  {
    "id": "53d6387b83db278202000802",
    "name": "We Have Liftoff",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Sorting",
      "Algorithms",
      "Logic",
      "Strings"
    ]
  },
  {
    "id": "56d904db9963e9cf5000037d",
    "name": "Thinking & Testing: A and B?",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5641275f07335295f10000d0",
    "name": "Split The Bill",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Data Types",
      "Numbers",
      "Data Structures",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "57efcb78e77282f4790003d8",
    "name": "How many times should I go?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Conditional Statements",
      "Control Flow",
      "Basic Language Features",
      "Numbers",
      "Data Types",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "58c9322bedb4235468000019",
    "name": "\"Very  Even\" Numbers.",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57680d0128ed87c94f000bfd",
    "name": "Boggle Word Checker",
    "approved": true,
    "tags": [
      "Puzzles",
      "Arrays",
      "Data Types",
      "Recursion",
      "Algorithms",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "5732d3c9791aafb0e4001236",
    "name": "Training JS #32: methods of Math---round() ceil() and floor()",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5508249a98b3234f420000fb",
    "name": "First Variation on Caesar Cipher",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Ciphers",
      "Algorithms",
      "Cryptography",
      "Logic",
      "Security",
      "Strings",
      "Data Types",
      "Utilities"
    ]
  },
  {
    "id": "55a29405bc7d2efaff00007c",
    "name": "Going to zero or to infinity?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "58e61f3d8ff24f774400002c",
    "name": "Assembler interpreter (part II)",
    "approved": true,
    "tags": [
      "Refactoring",
      "Interpreters",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "57d1f36705c186d018000813",
    "name": "Hells Kitchen",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "5270f22f862516c686000161",
    "name": "Base64 Encoding",
    "approved": true,
    "tags": [
      "Algorithms",
      "Binary",
      "Prototypes",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "57ed56657b45ef922300002b",
    "name": "The Office III - Broken Photocopier",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "583989556754d6f4c700018e",
    "name": "Show multiples of 2 numbers within a range",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Ranges"
    ]
  },
  {
    "id": "56f7493f5d7c12d1690000b6",
    "name": "Calculate mean and concatenate string",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a61a846cadebf9738000076",
    "name": "Peak array index",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "554f76dca89983cc400000bb",
    "name": "Diophantine Equation",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5b4e474305f04bea11000148",
    "name": "Every possible sum of two digits",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "55f3da49e83ca1ddae0000ad",
    "name": "Tank Truck",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5583d268479559400d000064",
    "name": "Binary to Text (ASCII) Conversion",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Binary",
      "ASCII",
      "Character Encodings",
      "Formats",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5722fd3ab7162a3a4500031f",
    "name": "Training JS #13: Number object and  its properties",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5b4070144d7d8bbfe7000001",
    "name": "Numericals of a String",
    "approved": true,
    "tags": [
      "Algorithms",
      "Games",
      "Puzzles",
      "Performance"
    ]
  },
  {
    "id": "563c13853b07a8f17c000022",
    "name": "Is the date today",
    "approved": true,
    "tags": [
      "Puzzles",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "58485a43d750d23bad0000e6",
    "name": "Fizz Buzz Cuckoo Clock",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Dates/Time"
    ]
  },
  {
    "id": "5a995c2aba1bb57f660001fd",
    "name": "Scrolling Text",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "57faf32df815ebd49e000117",
    "name": "Exclamation marks series #5: Remove all exclamation marks from the end of words",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5a5032f4fd56cb958e00007a",
    "name": "TV Remote",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "528d9adf0e03778b9e00067e",
    "name": "Find the Mine!",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Search",
      "Logic"
    ]
  },
  {
    "id": "55ca43fb05c5f2f97f0000fd",
    "name": "Fix the loop!",
    "approved": true,
    "tags": [
      "Bugs",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "570409d3d80ec699af001bf9",
    "name": "The fusc function  -- Part 1",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "57cf50a7eca2603de0000090",
    "name": "Move 10",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "5ef9ca8b76be6d001d5e1c3e",
    "name": "Error correction #1 - Hamming Code",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "57faefc42b531482d5000123",
    "name": "Exclamation marks series #3: Remove all exclamation marks from sentence except at the end",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "594a6ad320ac16a54400007f",
    "name": "Easy SQL: Cube Root and Natural Log",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "55849d76acd73f6cc4000087",
    "name": "Online RPG: player to qualifying stage?",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56f935002e6c0d55fa000d92",
    "name": "Fun with ES6 Classes #2 - Animals and Inheritance",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms",
      "ES2015",
      "Babel"
    ]
  },
  {
    "id": "51646de80fd67f442c000013",
    "name": "Strip Url Params",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "52a112d9488f506ae7000b95",
    "name": "Is Integer Array?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Numbers",
      "Integers",
      "Utilities",
      "Validation",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "540d0fdd3b6532e5c3000b5b",
    "name": "Binomial Expansion",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Algebra"
    ]
  },
  {
    "id": "5558cc216a7a231ac9000022",
    "name": "Find Duplicates ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Utilities"
    ]
  },
  {
    "id": "56d8ae9237123036d3001b54",
    "name": "Grasshopper - Object syntax debug",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "583af10620dda4da270000c5",
    "name": "Merge two arrays",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "594a8f2f7ca3c692a4000041",
    "name": "Easy SQL: Absolute Value and Log to Base",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "596f72bbe7cd7296d1000029",
    "name": "Array Deep Count",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Recursion",
      "Algorithms",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "55c0ac142326fdf18d0000af",
    "name": "Playing with cubes II",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Constructors"
    ]
  },
  {
    "id": "558dd9a1b3f79dc88e000001",
    "name": "Find The Duplicated Number in a Consecutive Unsorted List",
    "approved": true,
    "tags": [
      "Refactoring",
      "Arrays",
      "Data Types",
      "Utilities"
    ]
  },
  {
    "id": "59325dc15dbb44b2440000af",
    "name": "Are we alternate?",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5a04133e32b8b998dc000089",
    "name": "Dominant array elements",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5a8d2bf60025e9163c0000bc",
    "name": "Simple frequency sort",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5ce6728c939bf80029988b57",
    "name": "Consecutive letters",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "53e30ec0116393fe1a00060b",
    "name": "Remove Duplicates",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "558ee8415872565824000007",
    "name": "Is n divisible by (...)?",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55b95c76e08bd5eef100001e",
    "name": "Counting in the  Amazon",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Fundamentals"
    ]
  },
  {
    "id": "567501aec64b81e252000003",
    "name": "Easy wallpaper",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5679d5a3f2272011d700000d",
    "name": "6 By 6 Skyscrapers",
    "approved": true,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Games",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "585894545a8a07255e0002f1",
    "name": "Screen Locking Patterns",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Geometry",
      "Algebra",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "585a033e3a36cdc50a00011c",
    "name": "Frequency sequence",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "594804a218e96caa8d00051b",
    "name": "Easy SQL: ASCII Converter",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Numbers",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "5cd5ba1ce4471a00256930c0",
    "name": "last digits of a number",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "545993ee52756d98ca0010e1",
    "name": "Enumerable Magic #4 - True for None?",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56d949281b5fdc7666000004",
    "name": "Thinking & Testing : Uniq or not Uniq",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "51f1342c76b586046800002a",
    "name": "Round by 0.5 steps",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "549ee8b47111a81214000941",
    "name": "Shortest Knight Path",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5844a422cbd2279a0c000281",
    "name": "Debug the functions EASY",
    "approved": true,
    "tags": [
      "Bugs",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "528e95af53dcdb40b5000171",
    "name": "Factorial Factory",
    "approved": true,
    "tags": [
      "Algorithms",
      "Recursion",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science",
      "Mathematics",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "52f677797c461daaf7000740",
    "name": "Smallest possible sum ",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "53573877d5493b4d6e00050c",
    "name": "Find the Capitals",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Hashes",
      "Data Structures"
    ]
  },
  {
    "id": "56bcaedfcf6b7f2125001118",
    "name": "Safen User Input Part I - htmlspecialchars",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5a8d1c82373c2e099d0000ac",
    "name": "Simple string reversal II",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5268acac0d3f019add000203",
    "name": "Design a Simple Automaton (Finite State Machine)",
    "approved": true,
    "tags": [
      "Algorithms",
      "State Machines",
      "Computational Science",
      "Theoretical Computer Science",
      "Design Patterns",
      "Turing Machines",
      "Artificial Intelligence",
      "Machine Learning",
      "Applied Computer Science",
      "Logic"
    ]
  },
  {
    "id": "5d5a7525207a674b71aa25b5",
    "name": "Row of the odd triangle",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Performance"
    ]
  },
  {
    "id": "54e8c3e89e2ae6f4900005a1",
    "name": "Add property to every object in array ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Objects"
    ]
  },
  {
    "id": "590adadea658017d90000039",
    "name": "Fruit Machine",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Games"
    ]
  },
  {
    "id": "5a331ea7ee1aae8f24000175",
    "name": "Insane Coloured Triangles",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Performance",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "570cc83df616a85944001315",
    "name": "Count words",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "58670300f04e7449290000e5",
    "name": "Thinkful - List Drills: Longest word",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "57e8fba2f11c647abc000944",
    "name": "Holiday III - Fire on the boat",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "5590961e6620c0825000008f",
    "name": "Case swapping",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55be95786abade3c71000079",
    "name": "Linked Lists - Push & BuildOneTwoThree",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Linked Lists",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "52945ce49bb38560fe0001d9",
    "name": "Pascal's Triangle #2",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "56f8fe6a2e6c0dc83b0008a7",
    "name": "Be Concise III - Sum Squares",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5868812b15f0057e05000001",
    "name": "Tail Swap",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5dd259444228280032b1ed2a",
    "name": "GCD sum",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58905bfa1decb981da00009e",
    "name": "The Lift",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "58e3f824a33b52c1dc0001c0",
    "name": "Geometry Basics: Circle Area in 2D",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "585d8c8a28bc7403ea0000c3",
    "name": "Find the unique string",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic",
      "Arrays",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "54d418bd099d650fa000032d",
    "name": "Vampire Numbers",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "594a8fa5a2db9e5f290000c3",
    "name": "SQL Basics: Truncating",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "537baa6f8f4b300b5900106c",
    "name": "Area of a Circle",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "54b81566cd7f51408300022d",
    "name": "Partial Word Searching",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "59fc72fe235f93838b002235",
    "name": "Potenciation",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "526471539d52735c620000c6",
    "name": "Broken Counter",
    "approved": true,
    "tags": [
      "Bugs",
      "Prototypes"
    ]
  },
  {
    "id": "56f7f8215d7c12c0e7000b19",
    "name": "Fun with ES6 Classes #1 - People, people, people",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "51f41fe7e8f176e70d0002b9",
    "name": "Sort Arrays (Ignoring Case)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Sorting",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5265b0885fda8eac5900093b",
    "name": "Tiny Three-Pass Compiler",
    "approved": true,
    "tags": [
      "Algorithms",
      "Compiler Theory",
      "Logic"
    ]
  },
  {
    "id": "55cf3b567fc0e02b0b00000b",
    "name": "Getting along with Integer Partitions",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Optimization"
    ]
  },
  {
    "id": "57d2ba8095497e484e00002e",
    "name": "Borrower Speak",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5208fc3cb613bc725f000142",
    "name": "Limit string length - 1",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5bd776533a7e2720c40000e5",
    "name": "The Poet And The Pendulum",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Basic Language Features",
      "Arrays",
      "Dynamic Arrays",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Vectors",
      "Algorithms",
      "Logic",
      "Performance"
    ]
  },
  {
    "id": "52532cc8e9ea83b89b000008",
    "name": "Hard Time Bomb",
    "approved": true,
    "tags": [
      "Puzzles",
      "Polymorphism",
      "Object-oriented Programming",
      "Prototype-based Programming",
      "Programming Paradigms",
      "Security"
    ]
  },
  {
    "id": "55c5b03f8c28da9a51000045",
    "name": "Sum of numerous arguments",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57f5e7bd60d0a0cfd900032d",
    "name": "Find the Missing Number",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "581b30af1ef8ee6aea0015b9",
    "name": "Find how many times did a team from a given country win the Champions League?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Arrays",
      "Data Structures",
      "Objects"
    ]
  },
  {
    "id": "5a5f9f80f5dc3f942b002309",
    "name": "Schrödinger's Boolean",
    "approved": true,
    "tags": [
      "Puzzles",
      "Metaprogramming",
      "Programming Paradigms",
      "Advanced Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "5a97387e5ee396e70a00016d",
    "name": "Powers of i",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "598057c8d95a04f33f00004e",
    "name": "Get the integers between two numbers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Integers"
    ]
  },
  {
    "id": "5f6d533e1475f30001e47514",
    "name": "Consecutive items",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "557e8a141ca1f4caa70000a6",
    "name": "Triangle number check",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Logic"
    ]
  },
  {
    "id": "58069e4cf3c13ef3a6000168",
    "name": "Reverser",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Recursion",
      "Algorithms",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "58e43389acfd3e81d5000a88",
    "name": "Geometry Basics: Circle Circumference in 2D",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5942b066db68b6f35f000084",
    "name": "SQL: Regex Replace",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "57a153e872292d7c030009d4",
    "name": "Simple transposition",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Cryptography",
      "Security"
    ]
  },
  {
    "id": "5c5086287bc6600001c7589a",
    "name": "Is It Negative Zero (-0)?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Basic Language Features"
    ]
  },
  {
    "id": "557dd2a061f099504a000088",
    "name": "List to Array",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "56e3cd1d93c3d940e50006a4",
    "name": "How Green Is My Valley?",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "582c81d982a0a65424000201",
    "name": "Is every value in the array an array?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Booleans",
      "Testing"
    ]
  },
  {
    "id": "597bb84522bc93b71e00007e",
    "name": "String Merge!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Games"
    ]
  },
  {
    "id": "586a1af1c66d18ad81000134",
    "name": "Driving Licence",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "54e320dcebe1e583250008fd",
    "name": "Decimal to Factorial and Back",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Utilities"
    ]
  },
  {
    "id": "5531abe4855bcc8d1f00004c",
    "name": "Ten-Pin Bowling",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57b6f850a6fdc76523001162",
    "name": "Hit Count",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5a0b4dc2ffe75f72f70000ef",
    "name": "Santa's Naughty List",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures",
      "Sorting",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "58ba6fece3614ba7c200017f",
    "name": "Numerical Palindrome #1",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Integers"
    ]
  },
  {
    "id": "5517fcb0236c8826940003c9",
    "name": "Irreducible Sum of Rationals",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5841f4fb673ea2a2ae000111",
    "name": "Series of integers from 0 to n",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "61123a6f2446320021db987d",
    "name": "Previous multiple of three",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57fd696e26b06857eb0011e7",
    "name": "Hungarian Vowel Harmony (easy)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "589273272fab865136000108",
    "name": "Piano Kata, Part 1",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "514a3996d22ce03198000003",
    "name": "Mr. Freeze",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5434283682b0fdb0420000e6",
    "name": "Caffeine Script",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "56be025f9347a066c7000e4f",
    "name": "Improving Math.round(x)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "56d5166ec87df55dbe000063",
    "name": "Sum of Array Averages",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Arithmetic",
      "Mathematics",
      "Logic",
      "Numbers",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "521cd52e790405a74800032c",
    "name": "Semi-Optional",
    "approved": true,
    "tags": [
      "Bugs"
    ]
  },
  {
    "id": "5acbc3b3481ebb23a400007d",
    "name": "Determine if the poker hand is flush",
    "approved": true,
    "tags": [
      "Puzzles",
      "Arrays",
      "Data Types",
      "Algorithms",
      "Logic",
      "Strings",
      "Games"
    ]
  },
  {
    "id": "57fe50d000d05166720000b1",
    "name": "The Office VI - Sabbatical",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays",
      "Numbers",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5a6d3bd238f80014a2000187",
    "name": "Cat Years, Dog Years (2)",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56548dad6dae7b8756000037",
    "name": "Clock in Mirror",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "588422ba4e8efb583d00007d",
    "name": "Simple Fun #3: Late Ride",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "538ae2eb7a4ba8c99b000439",
    "name": "Evil Autocorrect Prank",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "56a1c074f87bc2201200002e",
    "name": "How many are smaller than me?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5902bc7aba39542b4a00003d",
    "name": "The Hunger Games - Zoo Disaster!",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59564f3bcc15b5591a00004a",
    "name": "filterEvenLengthWords",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59ccf051dcc4050f7800008f",
    "name": "Buddy Pairs",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "536e9a7973130a06eb000e9f",
    "name": "Pokemon Damage Calculator",
    "approved": true,
    "tags": [
      "Puzzles",
      "Arrays",
      "Data Types",
      "Games",
      "Strings",
      "Numbers",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "51dda84f91f5b5608b0004cc",
    "name": "Fizz / Buzz",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5426d7a2c2c7784365000783",
    "name": "All Balanced Parentheses",
    "approved": true,
    "tags": [
      "Algorithms",
      "Interview Questions"
    ]
  },
  {
    "id": "5168b125faced29f66000005",
    "name": "Return substring instance count",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "54fb963d3fe32351f2000102",
    "name": "Collatz Conjecture Length",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "58708934a44cfccca60000c4",
    "name": "RoboScript #1 - Implement Syntax Highlighting",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55ea5650fe9247a2ea0000a7",
    "name": "Unscrambled eggs",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57fafd0ed80daac48800019f",
    "name": "Exclamation marks series #8: Move all exclamation marks to the end of the sentence",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "581676828906324b8b00059e",
    "name": "SQL Basics: Simple FULL TEXT SEARCH",
    "approved": true,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "58235a167a8cb37e1a0000db",
    "name": "Pair of gloves",
    "approved": true,
    "tags": [
      "Puzzles",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "593b1909e68ff627c9000186",
    "name": "Nickname Generator",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "528d36d7cc451cd7e4000339",
    "name": "Who has the most money?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "559cc2d2b802a5c94700000c",
    "name": "How many consecutive numbers are needed?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5946a0a64a2c5b596500019a",
    "name": "Split and then add both sides of an array together.",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "52cf02cd825aef67070008fa",
    "name": "Help the general decode secret enemy messages.",
    "approved": true,
    "tags": [
      "Puzzles",
      "Encryption",
      "Algorithms",
      "Cryptography",
      "Logic",
      "Security",
      "Games"
    ]
  },
  {
    "id": "560f8d41cf6e1fe5c900002e",
    "name": "Find variable which breaks strict comparison!",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58167fa1f544130dcf000317",
    "name": "SQL Statistics: MIN, MEDIAN, MAX",
    "approved": true,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data",
      "Statistics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "581e1d083a4820eb4f00004f",
    "name": "MOD 256 without the MOD operator",
    "approved": true,
    "tags": [
      "Puzzles",
      "Algorithms",
      "Logic",
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Mathematics"
    ]
  },
  {
    "id": "54466996990c921f90000d61",
    "name": "Monotone travel",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "5c55ad8c9d76d41a62b4ede3",
    "name": "Find all pairs",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "56d19b2ac05aed1a20000430",
    "name": "Between Extremes",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "59c62f1bdcc40560a2000060",
    "name": "Even odd disparity",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5b18e9e06aefb52e1d0001e9",
    "name": "The Pony Express",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "580fe518cefeff16d00000c0",
    "name": "SQL Basics: Create a FUNCTION",
    "approved": true,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "589519d1f0902e01af000054",
    "name": "Perimeter sequence",
    "approved": true,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5983cba828b2f1fd55000114",
    "name": "Odder Than the Rest",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56019d3b2c39ccde76000086",
    "name": "Grasshopper - Terminal Game Turn Function",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Sequences",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "526ec46d6f5e255e150002d1",
    "name": "Closures and Scopes",
    "approved": true,
    "tags": [
      "Bugs",
      "Closures",
      "Basic Language Features",
      "Fundamentals",
      "Scopes"
    ]
  },
  {
    "id": "57d532d2164a67cded0001c7",
    "name": "Histogram - H1",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "59c1302ecb7fb48757000013",
    "name": "For Twins: 1. Types",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5aa3af22ba1bb5209f000037",
    "name": "Simple equation reversal",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5aca48db188ab3558e0030fa",
    "name": "Find the calculation type",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56368f37d464c0a43c00007f",
    "name": "Debug Basic Calculator",
    "approved": true,
    "tags": [
      "Bugs",
      "Fundamentals",
      "Operators",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "57591ef494aba64d14000526",
    "name": "John and Ann sign up for Codewars",
    "approved": true,
    "tags": [
      "Algorithms",
      "Rules",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5535572c1de94ba2db0000f6",
    "name": "Make them bark!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Objects",
      "Data Types"
    ]
  },
  {
    "id": "57a93f93bb9944516d0000c1",
    "name": "Interactive Dictionary",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5497a3c181dd7291ce000700",
    "name": "Find sum of top-left to bottom-right diagonals",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Graphs",
      "Data Structures",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "583a8bde28019d615a000035",
    "name": "Coding Meetup #15 - Higher-Order Functions Series - Find the odd names",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Higher-order Functions",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Data Structures",
      "Arrays",
      "Data Types",
      "Objects",
      "Algorithms",
      "Logic",
      "Strings"
    ]
  },
  {
    "id": "536c738e49aa8b663b000301",
    "name": "Unlimited Sum",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Arithmetic",
      "Iterators",
      "Control Flow",
      "Object-oriented Programming",
      "Basic Language Features",
      "Programming Paradigms",
      "Data Types",
      "Integers"
    ]
  },
  {
    "id": "5f7c38eb54307c002a2b8cc8",
    "name": "Remove the parentheses",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Algorithms",
      "Logic",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "54d558c72a5e542c0600060f",
    "name": "Defuse the bombs!",
    "approved": true,
    "tags": [
      "Puzzles",
      "Strings",
      "Data Types",
      "Prototype-based Programming",
      "Programming Paradigms",
      "Prototypes",
      "Games",
      "Security"
    ]
  },
  {
    "id": "58989a079c70093f3e00008d",
    "name": "Cartesian neighbors",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "56414fdc6488ee99db00002c",
    "name": "Absent vowel",
    "approved": true,
    "tags": [
      "Puzzles",
      "Arrays",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "540c33513b6532cd58000259",
    "name": "Sum of all arguments",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Declarative Programming",
      "Programming Paradigms",
      "Arguments",
      "Basic Language Features",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "56d93f249c844788bc000002",
    "name": "Thinking & Testing : Something capitalized",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5829ca646d02cd1a65000284",
    "name": "Coding Meetup #9 - Higher-Order Functions Series - Is the meetup age-diverse?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Higher-order Functions",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Data Structures",
      "Arrays",
      "Data Types",
      "Objects",
      "Logic",
      "Strings"
    ]
  },
  {
    "id": "52755006cc238fcae70000ed",
    "name": "Christmas tree",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Formatting",
      "Logic",
      "Hacking Holidays"
    ]
  },
  {
    "id": "5286b2e162056fd0cb000c20",
    "name": "Collatz",
    "approved": true,
    "tags": [
      "Algorithms",
      "Expressions",
      "Basic Language Features",
      "Fundamentals",
      "Logic",
      "Arithmetic",
      "Mathematics",
      "Numbers",
      "Sequences",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "53d32bea2f2a21f666000256",
    "name": "Largest Elements",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Search",
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "56445c4755d0e45b8c00010a",
    "name": "Banker's Plan",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "57ae18c6e298a7a6d5000c7a",
    "name": "Replace all items",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Lists",
      "Data Structures",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "53a1eac7e0afd3ad3300008b",
    "name": "Mutual Recursion",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "5631213916d70a0979000066",
    "name": "Number-Star ladder",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5726f813c8dcebf5ed000a6b",
    "name": "k-Primes",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58b57ae2724e3c63df000006",
    "name": "Parse HTML/CSS Colors",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types",
      "Parsing",
      "Numbers"
    ]
  },
  {
    "id": "58e230e5e24dde0996000070",
    "name": "Next Prime",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Integers",
      "Data Types",
      "Numbers"
    ]
  },
  {
    "id": "5a145ab08ba9148dd6000094",
    "name": "String doubles",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5e96332d18ac870032eb735f",
    "name": "Happy Birthday, Darling!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "580a4001d6df740d61000301",
    "name": "Complete Series",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "53005a7b26d12be55c000243",
    "name": "Simpler Interactive Interpreter",
    "approved": true,
    "tags": [
      "Algorithms",
      "Interpreters",
      "Logic",
      "Expressions",
      "Basic Language Features",
      "Fundamentals",
      "Operators",
      "Parsing",
      "Strings"
    ]
  },
  {
    "id": "54f9f4d7c41722304e000bbb",
    "name": "first character that repeats",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "538948d4daea7dc4d200023f",
    "name": "Delta Bits",
    "approved": true,
    "tags": [
      "Algorithms",
      "Bits",
      "Binary",
      "Utilities"
    ]
  },
  {
    "id": "5825792ada030e9601000782",
    "name": "zipWith",
    "approved": true,
    "tags": [
      "Algorithms",
      "Lists",
      "Data Structures",
      "Arrays",
      "Data Types",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "57f22b0f1b5432ff09001cab",
    "name": "Well of Ideas - Harder Version",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Objects",
      "Strings"
    ]
  },
  {
    "id": "59a1cdde9f922b83ee00003b",
    "name": "Stanton measure",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "59e19a747905df23cb000024",
    "name": "String Letter Counting",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Sorting",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "56dd9b84fe5754786f0014f7",
    "name": "Implement Array.prototype.filter()",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "58f8b35fda19c0c79400020f",
    "name": "Find all non-consecutive numbers",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5697fb83f41965761f000052",
    "name": "Filter Long Words",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56efab15740d301ab40002ee",
    "name": "Reducing by steps",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "589cf45835f99b2909000115",
    "name": "Calculating  Running Total",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Databases",
      "Information Systems",
      "Data",
      "SQL"
    ]
  },
  {
    "id": "5877e7d568909e5ff90017e6",
    "name": "How many numbers III?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Algorithms",
      "Logic",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5994dafcbddc2f116d000024",
    "name": "Calculating Batting Average",
    "approved": true,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "5a4ff3c5fd56cbaf9800003e",
    "name": "Working with arrays I (and why your code fails in some katas)",
    "approved": true,
    "tags": [
      "Refactoring",
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Best Practices"
    ]
  },
  {
    "id": "526d42b6526963598d0004db",
    "name": "Caesar Cipher Helper",
    "approved": true,
    "tags": [
      "Algorithms",
      "Ciphers",
      "Cryptography",
      "Logic",
      "Security",
      "Objects",
      "Data Types",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Fundamentals",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "565b112d09c1adfdd500019c",
    "name": "Substring fun",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "566044325f8fddc1c000002c",
    "name": "Return a string's even characters.",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "570523c146edc287a50014b1",
    "name": "Especially Joyful Numbers",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "52ab60b122e82a6375000bad",
    "name": "Sort Santa's Reindeer",
    "approved": true,
    "tags": [
      "Algorithms",
      "Hacking Holidays",
      "Sorting",
      "Logic",
      "Arrays",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "53e895e28f9e66a56900011a",
    "name": "Character frequency",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Utilities"
    ]
  },
  {
    "id": "560d6ebe7a8c737c52000084",
    "name": "Invisible cubes",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "567d609f1c16d7369c000008",
    "name": "Genetic Algorithm Series - #1 Generate",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Basic Language Features",
      "Fundamentals",
      "Genetic Algorithms",
      "Logic"
    ]
  },
  {
    "id": "586566b773bd9cbe2b000013",
    "name": "All Star Code Challenge #16",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "52724507b149fa120600031d",
    "name": "Write out numbers",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5519a584a73e70fa570005f5",
    "name": "Prime Streaming (PG-13)",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "59ae589c07157afba80000a7",
    "name": "-Reverse it, quickly!",
    "approved": true,
    "tags": [
      "Puzzles",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5f55ecd770692e001484af7d",
    "name": "Mirror, mirror, on the wall...",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "550e9fd127c656709400024d",
    "name": "CubeSummation",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5637b03c6be7e01d99000046",
    "name": "Password maker",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "566efcfbf521a3cfd2000056",
    "name": "Reversing Fun",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Fundamentals",
      "Logic"
    ]
  },
  {
    "id": "5a1a76c8a7ad6aa26a0007a0",
    "name": "Life Path Number",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Recursion",
      "Algorithms",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science",
      "Numbers",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "5818bde9559ff58bd90004a2",
    "name": "Challenge: Two actors who cast together the most",
    "approved": true,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "5941c545f5c394fef900000c",
    "name": "The Greatest Warrior",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Fundamentals",
      "Programming Paradigms",
      "Rules"
    ]
  },
  {
    "id": "5b728f801db5cec7320000c7",
    "name": "Simple letter removal",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55befc42bfe4d13ab1000007",
    "name": "Linked Lists - Get Nth Node",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Linked Lists",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "5b6375f707a2664ada00002a",
    "name": "Who's Online?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Objects"
    ]
  },
  {
    "id": "5859c82bd41fc6207900007a",
    "name": "Thinkful - String Drills: Quotable",
    "approved": true,
    "tags": [
      "Bugs"
    ]
  },
  {
    "id": "59752e1f064d1261cb0000ec",
    "name": "Clocky Mc Clock-Face",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "52ffcfa4aff455b3c2000750",
    "name": "Simple Interactive Interpreter",
    "approved": true,
    "tags": [
      "Algorithms",
      "Interpreters",
      "Logic"
    ]
  },
  {
    "id": "536a155256eb459b8700077e",
    "name": "The Clockwise Spiral",
    "approved": true,
    "tags": [
      "Puzzles",
      "Arrays",
      "Data Types",
      "Numbers"
    ]
  },
  {
    "id": "54acc128329e634e9a000362",
    "name": "A Simplistic TCP Finite State Machine (FSM)",
    "approved": true,
    "tags": [
      "Algorithms",
      "State Machines",
      "Computational Science",
      "Theoretical Computer Science",
      "Design Patterns"
    ]
  },
  {
    "id": "55f4a44eb72a0fa91600001e",
    "name": "Stringing me along",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "567fe8b50c201947bc000056",
    "name": "Regexp Basics - is it IPv4 address?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "584c7b1e2cb5e1a727000047",
    "name": "Hello World - Without Strings",
    "approved": true,
    "tags": [
      "Puzzles",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5893e0c41a88085c330000a0",
    "name": "Simple Fun #63: Shape Area",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58a66c208b88b2de660000c3",
    "name": "Simple Fun #136: Missing Values",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "53d2697b7152a5e13d000b82",
    "name": "Making Copies",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "56eb16655250549e4b0013f4",
    "name": "Most Frequent Weekdays",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58068479c27998b11900056e",
    "name": "Sorting on planet Twisted-3-7",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Sorting",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5356ad2cbb858025d800111d",
    "name": "Name Array Capping",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays",
      "Utilities"
    ]
  },
  {
    "id": "55a8a36703fe4c45ed00005b",
    "name": "Multiples!",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "595519279be6c575b5000016",
    "name": "Battle of the characters (Easy)",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "59e49b2afc3c494d5d00002a",
    "name": "Sort the Vowels!",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a1ee4dfffe75f0fcb000145",
    "name": "Bingo ( Or Not )",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Games",
      "Numbers",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "5a24254fe1ce0ec2eb000078",
    "name": "Simple string indices",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5f709c8fb0d88300292a7a9d",
    "name": "Who is the killer?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Dictionary",
      "Data Structures",
      "Lists",
      "Objects",
      "Data Types"
    ]
  },
  {
    "id": "525481903700c1a1ff0000e1",
    "name": "Function Cache",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Caching",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Prototype-based Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5970df092ef474680a0000c9",
    "name": "Alphabetized",
    "approved": true,
    "tags": [
      "Puzzles",
      "Strings",
      "Data Types",
      "Sorting",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "525dfedb5b62f6954d000006",
    "name": "Throwing Darts",
    "approved": true,
    "tags": [
      "Algorithms",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "57ced2c1c6fdc22123000316",
    "name": "Numbers  to Objects",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Numbers",
      "Arrays",
      "Objects"
    ]
  },
  {
    "id": "59f7a0a77eb74bf96b00006a",
    "name": "What's my golf score?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays",
      "Numbers",
      "Integers",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Conditional Statements"
    ]
  },
  {
    "id": "58381907f8ac48ae070000de",
    "name": "Coding Meetup #13 - Higher-Order Functions Series - Is the meetup language-diverse?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Higher-order Functions",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Data Structures",
      "Arrays",
      "Data Types",
      "Objects",
      "Logic",
      "Strings"
    ]
  },
  {
    "id": "586bca7fa44cfc833e00005c",
    "name": "Number to digit tiers",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Strings",
      "Maps",
      "Data Structures",
      "Map/Reduce",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "56dbeec613c2f63be4000be6",
    "name": "Moves in squared strings (III)",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "592edfda5be407b9640000b2",
    "name": "Digital cypher vol 2",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Encryption",
      "Algorithms",
      "Cryptography",
      "Logic",
      "Security"
    ]
  },
  {
    "id": "566584e3309db1b17d000027",
    "name": "Differentiate a polynomial",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Strings",
      "Integers"
    ]
  },
  {
    "id": "57cc4853fa9fc57a6a0002c2",
    "name": "No Loops 1 - Small enough?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Booleans",
      "Data Types",
      "Numbers",
      "Arrays"
    ]
  },
  {
    "id": "5857e8bb9948644aa1000246",
    "name": "Can Santa save Christmas?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "5981a139f5471fd1b2000071",
    "name": "Spraying trees",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Types"
    ]
  },
  {
    "id": "55cb0597e12e896ab6000099",
    "name": "Arithmetic sequence -  sum of n elements",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Sequences",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "562e274ceca15ca6e70000d3",
    "name": "Parabolic Arc Length",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5728203b7fc662a4c4000ef3",
    "name": "Training JS #19: Methods of String object--toUpperCase() toLowerCase() and replace()",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "576986639772456f6f00030c",
    "name": "Path Finder #3: the Alpinist",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "54207f9677730acd490000d1",
    "name": "Password Hashes",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Hashes",
      "Data Structures",
      "Security",
      "Encryption",
      "Algorithms",
      "Cryptography",
      "Logic"
    ]
  },
  {
    "id": "5862fb364f7ab46270000078",
    "name": "Basic Encryption",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Encryption",
      "Algorithms",
      "Cryptography",
      "Logic",
      "Security",
      "Decryption",
      "Mathematics",
      "Numbers",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "513fa1d75e4297ba38000003",
    "name": "flatten()",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "55b7bb74a0256d4467000070",
    "name": "Number of Proper Fractions with Denominator d",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56d0a591c6c8b466ca00118b",
    "name": "Beginner Series #5 Triangular Numbers",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5805ed25c2799821cb000005",
    "name": "Birthday I - Cake",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "594a389387a7c6a77a000005",
    "name": "Easy SQL: Moving Values",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Numbers",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "59d9d8cb27ee005972000045",
    "name": "Catalog",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "57ef016a7b45ef647a00002d",
    "name": "Homogenous arrays",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "56c30ad8585d9ab99b000c54",
    "name": "Play with two Strings",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "56cac350145912e68b0006f0",
    "name": "up AND down",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "571c1e847beb0a8f8900153d",
    "name": "Help Suzuki rake his garden!",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "566d5e2e57d8fae53c00000c",
    "name": "Bingo Card",
    "approved": true,
    "tags": [
      "Algorithms",
      "Games",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5834315e06f227a6ac000099",
    "name": "Find twins",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "59b401e24f98a813f9000026",
    "name": "Integer depth",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59f4a0acbee84576800000af",
    "name": "Positions Average",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "54a0689443ab7271a90000c6",
    "name": "Harshad or Niven numbers",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Basic Language Features",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5516ab668915478845000780",
    "name": "Do you speak retsec?",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55c7f90ac8025ebee1000062",
    "name": "Failed Sort - Bug Fixing #4",
    "approved": true,
    "tags": [
      "Bugs",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "58d3487a643a3f6aa20000ff",
    "name": "MinMinMax",
    "approved": true,
    "tags": [
      "Puzzles",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5811527d9d278b242f000006",
    "name": "SQL Basics: Simple VIEW",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Reporting",
      "Data",
      "Charts",
      "SQL",
      "Databases",
      "Information Systems"
    ]
  },
  {
    "id": "58d06bfbc43d20767e000074",
    "name": "Battle ships: Sunk damaged or not touched?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5a7f58c00025e917f30000f1",
    "name": "Longest alphabetical substring",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Basic Language Features"
    ]
  },
  {
    "id": "5536a85b6ed4ee5a78000035",
    "name": "Help your granny!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5861487fdb20cff3ab000030",
    "name": "Esolang Interpreters #4 - Boolfuck Interpreter",
    "approved": true,
    "tags": [
      "Algorithms",
      "Interpreters",
      "Logic",
      "Esoteric Languages"
    ]
  },
  {
    "id": "559e10e2e162b69f750000b4",
    "name": "What dominates your array?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "564d0490e96393fc5c000029",
    "name": "Calculator: Coin Combination",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Fundamentals"
    ]
  },
  {
    "id": "56bc1acf66a2abc891000561",
    "name": "Greek Sort",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57aa218e72292d98d500240f",
    "name": "Heron's formula",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5863f97fb3a675d9a700003f",
    "name": "All Star Code Challenge #1",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "586560a639c5ab3a260000f3",
    "name": "All Star Code Challenge #15",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "52998bf8caa22d98b800003a",
    "name": "Manhattan Distance",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Arithmetic",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5868b2de442e3fb2bb000119",
    "name": "Closest and Smallest",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Sorting",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "545434090294935e7d0010ab",
    "name": "Functional SQL",
    "approved": true,
    "tags": [
      "Algorithms",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "57f6051c3ff02f3b7300008b",
    "name": "The Office V - Find a Chair ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "588f5a38ec641b411200005b",
    "name": "Difference between years. (Level 1)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Numbers",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "517b0f33cd023d848d000001",
    "name": "Ninja vs Samurai: Strike",
    "approved": true,
    "tags": [
      "Bugs",
      "Prototype-based Programming",
      "Programming Paradigms",
      "Prototypes"
    ]
  },
  {
    "id": "55736129f78b30311300010f",
    "name": "Complete The Pattern #4",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "57037ed25a7263ac35000c80",
    "name": "Generate user links",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "57ee31c5e77282c24d000024",
    "name": "Paul's Misery",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5aec1ed7de4c7f3517000079",
    "name": "N smallest elements in original order",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Lists",
      "Data Structures",
      "Logic"
    ]
  },
  {
    "id": "520d9c27e9940532eb00018e",
    "name": "Duplicate Arguments",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arguments",
      "Basic Language Features",
      "Fundamentals",
      "Functions",
      "Control Flow"
    ]
  },
  {
    "id": "52a47dd7e950edabfa000391",
    "name": "Max Headroom and JavaScript style",
    "approved": true,
    "tags": [
      "Bugs",
      "Pitfalls"
    ]
  },
  {
    "id": "5a8ec692b17101bfc70001ba",
    "name": "GROCERY STORE:  Logistic Optimisation",
    "approved": true,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "5b93fecd8463745630001d05",
    "name": "Snail crawls up",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "57741d8f10a0a66915000001",
    "name": "Integer Difference",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5d376cdc9bcee7001fcb84c0",
    "name": "Odd Ones Out!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Arrays",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "52a6b34e43c2484ac10000cd",
    "name": "Naughty or Nice?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Hacking Holidays",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "52eb114b2d55f0e69800078d",
    "name": "Simple Substitution Cipher Helper",
    "approved": true,
    "tags": [
      "Algorithms",
      "Ciphers",
      "Cryptography",
      "Logic",
      "Security",
      "Objects",
      "Data Types",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Fundamentals",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "545b342082e55dc9da000051",
    "name": "Enumerable Magic #30 - Split that Array!",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "584466950d3bedb9b300001f",
    "name": "How many times does it contain?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "586ec0b8d098206cce001141",
    "name": "Thinkful - List and Loop Drills: Inverse Slicer",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "58845748bd5733f1b300001f",
    "name": "Simple Fun #10: Range Bit Counting",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5887a6fe0cfe64850800161c",
    "name": "Largest Square Inside A Circle",
    "approved": true,
    "tags": [
      "Algorithms",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Logic"
    ]
  },
  {
    "id": "58e93b4706db4d24ee000096",
    "name": "How many days are we represented in a foreign country?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "5a4b16435f08299c7000274f",
    "name": "Sum - Square Even, Root Odd",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5d41e16d8bad42002208fe1a",
    "name": "More Zeros than Ones",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56bdd0aec5dc03d7780010a5",
    "name": "Basics 08: Find next higher number with same Bits (1's)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "57f7796697d62fc93d0001b8",
    "name": "Double Trouble",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Numbers"
    ]
  },
  {
    "id": "58e0cb3634a3027180000040",
    "name": "Sort an array by value and index",
    "approved": true,
    "tags": [
      "Algorithms",
      "Basic Language Features",
      "Fundamentals",
      "Logic",
      "Arrays",
      "Data Types",
      "Numbers"
    ]
  },
  {
    "id": "5935558a32fb828aad001213",
    "name": "Multi Line Task++: Hello World",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57efab9acba9daa4d1000b30",
    "name": "Slaphead",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "526f35b9c103314662000007",
    "name": "Binary Genetic Algorithms",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Genetic Algorithms",
      "Algorithms",
      "Logic",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Machine Learning",
      "Applied Computer Science"
    ]
  },
  {
    "id": "54fdadc8762e2e51e400032c",
    "name": "String to integer conversion",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Integers",
      "Numbers",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "571b6a4a7beb0a8ade0007a8",
    "name": "Blood-Alcohol Content",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Data Types",
      "Logic"
    ]
  },
  {
    "id": "581e476d5f59408553000a4b",
    "name": "Fun with lists: length",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "5f70e4cce10f9e0001c8995a",
    "name": "Stones on the Table",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "540de1f0716ab384b4000828",
    "name": "Unpacking Arguments",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arguments",
      "Basic Language Features",
      "Declarative Programming",
      "Programming Paradigms",
      "Functions",
      "Control Flow",
      "Lambdas",
      "Functional Programming",
      "Higher-order Functions"
    ]
  },
  {
    "id": "545af3d185166a3dec001190",
    "name": "Enumerable Magic #20 - Cascading Subsets",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56bf3287b5106eb10f000899",
    "name": "Move all vowels",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5b6c220fa0a661fbf200005d",
    "name": "Convert the score",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Objects",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "52d3b68215be7c2d5300022f",
    "name": "Simple Events",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Design Patterns",
      "Design Principles",
      "Event Handling",
      "PubSub"
    ]
  },
  {
    "id": "5a7778790136a132a00000c1",
    "name": "Single digit",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Binary"
    ]
  },
  {
    "id": "5bb3e299484fcd5dbb002912",
    "name": "Billiards triangle",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5c3433a4d828182e420f4197",
    "name": "Ultimate Array Reverser",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5809c661f15835266900010a",
    "name": "Double Every Other",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures",
      "Arrays",
      "Data Types",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "594b8e182fa0a0d7fc000875",
    "name": "Without the letter 'E'",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "596d34df24a04ee1e3000a25",
    "name": "Count ones in a segment",
    "approved": true,
    "tags": [
      "Algorithms",
      "Binary",
      "Numbers",
      "Data Types",
      "Performance"
    ]
  },
  {
    "id": "59859f435f5d18ede7000050",
    "name": "Word to binary",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55968ab32cf633c3f8000008",
    "name": "C.Wars",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "55c4eb777e07c13528000021",
    "name": "Factorial tail",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "55da6c52a94744b379000036",
    "name": "Sum up the random string",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "596e4ef7b61e25981200009f",
    "name": "Aspect Ratio Cropping - Part 1",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "59c3e8c9f5d5e40cab000ca6",
    "name": "Sum two arrays ",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "57073869924f34185100036d",
    "name": "Random case",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5733f948d780e27df6000e33",
    "name": "Training JS #34: methods of Math---pow() sqrt() and cbrt()",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "582a53ed261c2af9d200018c",
    "name": "Coding Meetup #10 - Higher-Order Functions Series - Create usernames",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Higher-order Functions",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Data Structures",
      "Arrays",
      "Data Types",
      "Objects",
      "Algorithms",
      "Logic",
      "Strings"
    ]
  },
  {
    "id": "58ae6ae22c3aaafc58000079",
    "name": "Permute a Palindrome",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5a8059b1fd577709860000f6",
    "name": "Alphabetically ordered ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5ae326342f8cbc72220000d2",
    "name": "Simple Simple Simple String Expansion",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Basic Language Features",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "59cb550486a6fd10b50000ad",
    "name": "SQL: Disorder",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5efae11e2d12df00331f91a6",
    "name": "Crack the PIN",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Cryptography",
      "Security",
      "Hashes",
      "Data Structures"
    ]
  },
  {
    "id": "5f3142b3a28d9b002ef58f5e",
    "name": "Cryptanalysis Word Patterns",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59daf400beec9780a9000045",
    "name": "What's in a name?",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59f7597716049833200001eb",
    "name": "Upside down numbers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5a084a098ba9146690000969",
    "name": "Easy Time Convert",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5574835e3e404a0bed00001b",
    "name": "Handshake problem",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "565c0fa6e3a7d39dee000125",
    "name": "Braking well",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57b9fc5b8f5813384a000aa3",
    "name": "Fruit string calculator",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Numbers"
    ]
  },
  {
    "id": "5943b797d8c9432eb7000066",
    "name": "SQL: Padding Encryption",
    "approved": true,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "513f887e484edf3eb3000001",
    "name": "Person Class Bug",
    "approved": true,
    "tags": [
      "Bugs",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Fundamentals",
      "Programming Paradigms"
    ]
  },
  {
    "id": "515dfd2f1db09667a0000003",
    "name": "Get key/value pairs as arrays",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Hashes",
      "Data Structures"
    ]
  },
  {
    "id": "57ee2a1b7b45efcf700001bf",
    "name": "Cat and Mouse - Harder Version",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "56d931ecc443d475d5000003",
    "name": "Thinking & Testing : True or False",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "59d398bb86a6fdf100000031",
    "name": "String Breakers",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Conditional Statements"
    ]
  },
  {
    "id": "5b097da6c3323ac067000036",
    "name": "Rock Off!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Operators",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5351b35ebaeb67f9110012d2",
    "name": "Can you keep a secret?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Closures",
      "Basic Language Features"
    ]
  },
  {
    "id": "54b7c8d2cd7f51a839000ebf",
    "name": "Easy mathematical callback",
    "approved": true,
    "tags": [
      "Algorithms",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "55b86beb1417eab500000051",
    "name": "Find the longest  gap!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "561046a9f629a8aac000001d",
    "name": "Array comparator",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "585a1f0945376c112a00019a",
    "name": "Thinkful - String Drills: Repeater level 2",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Formats"
    ]
  },
  {
    "id": "599db0a227ca9f294b0000c8",
    "name": "Test's results",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Dictionary",
      "Data Structures",
      "Lists"
    ]
  },
  {
    "id": "5b752a42b11814b09c00005d",
    "name": "Recursion  101",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "53daa9e5af55c184db00025f",
    "name": "Check for prime numbers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Mathematics"
    ]
  },
  {
    "id": "57080f21d531cd94950007eb",
    "name": "Not so black box",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5c4cb8fc3cf185147a5bdd02",
    "name": "Larger Product or Sum",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5245a9138ca049e9a10007b8",
    "name": "Adjacent repeated words in a string",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Search",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "559760bae64c31556c00006b",
    "name": "Number climber",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5612a42e746aa62de100001a",
    "name": "Decibel Scale",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "52988f3f7edba9839c00037d",
    "name": "The reject() function",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5917a2205ffc30ec3a0000a8",
    "name": "7×7 Skyscrapers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Puzzles",
      "Games",
      "Optimization"
    ]
  },
  {
    "id": "5982619d2671576e90000017",
    "name": "sPoNgEbOb MeMe",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "54e9554c92ad5650fe00022b",
    "name": "Converting integer to currency format",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56b97b776ffcea598a0006f2",
    "name": "Bubblesort Once",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "57cf3dad05c186ba22000348",
    "name": "Resistor Color Codes",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "57e5279b7cf1aea5cf000359",
    "name": "Fun with trees: max sum",
    "approved": true,
    "tags": [
      "Algorithms",
      "Trees",
      "Data Structures",
      "Recursion",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science",
      "Binary Search Trees",
      "Binary"
    ]
  },
  {
    "id": "5822d89270ca28c85c0000f3",
    "name": "String Scramble",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "58305403aeb69a460b00019a",
    "name": "String Reversing, Changing case, etc.",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57d001b405c186ccb6000304",
    "name": "Ironman Triathlon",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Arrays",
      "Objects"
    ]
  },
  {
    "id": "559576d984d6962f8c00003c",
    "name": "Array2Binary addition",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "573d498eb90ccf20a000002a",
    "name": "The Barksdale Code",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Cryptography",
      "Security"
    ]
  },
  {
    "id": "588e27b7d1140d31cb000060",
    "name": "Pairs of integers from 0 to n",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58e8cad9fd89ea0c6c000258",
    "name": "Kooka-Counter",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "55c353487fe3cc80660001d4",
    "name": "Capitals first!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5a2c22271f7f709eaa0005d3",
    "name": "Single character palindromes",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "559b8e46fa060b2c6a0000bf",
    "name": "Easy Diagonal",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55d7e5aa7b619a86ed000070",
    "name": "Ordering  the words!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Sorting",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "57d165ad95497ea150000020",
    "name": "Pairs of Bears",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Numbers",
      "Arrays"
    ]
  },
  {
    "id": "587309155cfd6b9fb60000a0",
    "name": "Unwanted dollars",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Types",
      "Basic Language Features"
    ]
  },
  {
    "id": "5a0d38c9697598b67a000041",
    "name": "Eliminate the intruders! Bit manipulation",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Bits",
      "Binary",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "540f8a19a7d43d24ac001018",
    "name": "Arithmetic Sequence!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Arithmetic"
    ]
  },
  {
    "id": "56e7d40129035aed6c000632",
    "name": "Easy Line",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "56fbdda707cff41b68000de2",
    "name": "Fun with ES6 Classes #3 - Cuboids, Cubes and Getters",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms",
      "ES2015",
      "Babel",
      "Inheritance",
      "Polymorphism"
    ]
  },
  {
    "id": "5839c48f0cf94640a20001d3",
    "name": "Land perimeter",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "58856a06760b85c4e6000055",
    "name": "Bits Battle",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games",
      "Binary",
      "Bits"
    ]
  },
  {
    "id": "525f277c7103571f47000147",
    "name": "Finding an appointment",
    "approved": true,
    "tags": [
      "Algorithms",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "5803c0c6ab6c20a06f000026",
    "name": "Strings: swap vowels' case",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5812a2a2492760dfca000450",
    "name": "SQL Basics: Simple Hierarchical structure",
    "approved": true,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data",
      "Reporting"
    ]
  },
  {
    "id": "60908bc1d5811f0025474291",
    "name": "Find the Squares",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5239f06d20eeab9deb00049b",
    "name": "Complete Fibonacci Series",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "532b4057484b0e58e8000766",
    "name": "Use reduce() to calculate the sum of the values in an array",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Map/Reduce",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "54589f3b52756d34d6000158",
    "name": "All, None & Any",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "57a06005cf1fa5fbd5000216",
    "name": "Words to sentence",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59f44c7bd4b36946fd000052",
    "name": "Errors : histogram",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "57a84137cf1fa5f9f80000d6",
    "name": "Get list sum recursively",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5143d157ceb46d6a61000001",
    "name": "Float Precision",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Floats/Doubles",
      "Data Types",
      "Numbers"
    ]
  },
  {
    "id": "5326ef17b7320ee2e00001df",
    "name": "Escape the Mines !",
    "approved": true,
    "tags": [
      "Puzzles",
      "Graphs",
      "Data Structures",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "56f253dd75e340ff670002ac",
    "name": "Composing squared strings",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5732b0351eb838d03300101d",
    "name": "Training JS #31: methods of arrayObject---isArray() indexOf() and toString()",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "589573e3f0902e8919000109",
    "name": "Simple Fun #87: Shuffled Array",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5a793fdbfd8c06d07f0000d5",
    "name": "Simple string expansion",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5dd5128f16eced000e4c42ba",
    "name": "Most valuable character",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "53ea07c9247bc3fcaa00084d",
    "name": "Look and say numbers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Recursion",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science",
      "Sequences",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "59b11f57f322e5da45000254",
    "name": "Ones' Complement",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59b81886460387d8fc000043",
    "name": "The soul of wit: reverse an array",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "57fafb6d2b5314c839000195",
    "name": "Exclamation marks series #7: Remove words from  the sentence if it contains one exclamation mark ",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5913152be0b295cf99000001",
    "name": "Number of Divisions",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "554e52e7232cdd05650000a0",
    "name": "Lowest product of 4 consecutive numbers",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "51fc3beb41ecc97ee20000c3",
    "name": "Lazy Repeater",
    "approved": true,
    "tags": [
      "Algorithms",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Iterators",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "58583922c1d5b415b00000ff",
    "name": "Street Fighter 2 - Character Selection - Part 2",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Graphs",
      "Data Structures",
      "Arrays",
      "Data Types",
      "Lists"
    ]
  },
  {
    "id": "5a8c1b06fd5777d4c00000dd",
    "name": "Principal Diagonal   |  VS  |   Secondary Diagonal",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Graphs",
      "Data Structures",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "54554846126a002d5b000854",
    "name": "A Gift Well Spent",
    "approved": true,
    "tags": [
      "Algorithms",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "54f8693ea58bce689100065f",
    "name": "Some Egyptian fractions",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55031bba8cba40ada90011c4",
    "name": "Hidden \"Cubic\" numbers",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55c606e6babfc5b2c500007c",
    "name": "Failed Filter - Bug Fixing #3",
    "approved": true,
    "tags": [
      "Bugs",
      "Numbers",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "563b1f55a5f2079dc100008a",
    "name": "Number Pairs",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "566b490c8b164e03f8000002",
    "name": "80's Kids #6: Rock 'Em, Sock 'Em Robots",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5dd462a573ee6d0014ce715b",
    "name": "Check same case",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59f9796cffe75f9299000025",
    "name": "!a == a ?!",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "6089c7992df556001253ba7d",
    "name": "What a \"Classy\" Song",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "558fa34727c2d274c10000ae",
    "name": "Scrabble Score",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Parsing",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "559e3224324a2b6e66000046",
    "name": "Functions of Integers on Cartesian Plane",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5884b6550785f7c58f000047",
    "name": "Organise duplicate numbers in list",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Sorting",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "594257d4db68b6e99200002c",
    "name": "SQL: Regex AlphaNumeric Split",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "59f38b033640ce9fc700015b",
    "name": "Sum of prime-indexed elements",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "515ceaebcc1dde8870000001",
    "name": "Retrieve array value by index with default",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "52180ce6f626d55cf8000071",
    "name": "Turn String Input into Hash",
    "approved": true,
    "tags": [
      "Algorithms",
      "Hashes",
      "Data Structures",
      "Parsing",
      "Logic",
      "Strings"
    ]
  },
  {
    "id": "5355a811a93a501adf000ab7",
    "name": "Custom FizzBuzz Array",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Logic"
    ]
  },
  {
    "id": "55b1e5c4cbe09e46b3000034",
    "name": "Figurate Numbers #2 - Pronic Number",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "55be10de92aad5ef28000023",
    "name": "Color Choice",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56853c44b295170b73000007",
    "name": "Are they square?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "56f4f7cfaf5b1f8cd100060e",
    "name": "Be Concise II - I Need Squares",
    "approved": true,
    "tags": [
      "Refactoring"
    ]
  },
  {
    "id": "585cf93f6ad5e0d9bf000010",
    "name": "Bowling Pins",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "52705ed65de62b733f000064",
    "name": "Return a sorted list of objects",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Sorting",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "569218bc919ccba77000000b",
    "name": "Target Date",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56a921fa8c5167d8e7000053",
    "name": "Password validator",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Validation",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5886c6b2f3b6ae33dd0000be",
    "name": "Simple Fun #20: First Reverse Try",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5a15a4db06d5b6d33c000018",
    "name": "Sum of a nested list",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Recursion",
      "Algorithms",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "51f082ba7297b8f07f000001",
    "name": "Find within array",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "564f458b4d75e24fc9000041",
    "name": "Finding Remainder Without Using '%' Operator",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5e0b72d2d772160011133654",
    "name": "Casino chips",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5fc7d2d2682ff3000e1a3fbc",
    "name": "Message Validator",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5297bf69649be865e6000922",
    "name": "Simple Sentences",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "55caef80d691f65cb6000040",
    "name": "Geometric Progression Sequence",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "572ab0cfa3af384df7000ff8",
    "name": "Training JS #22: Unlock new skills--Arrow function,spread operator and deconstruction",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58aa68605aab54a26c0001a6",
    "name": "Simple Fun #144: Distinct Digit Year",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "530017aac7c0f49926000084",
    "name": "Pluck",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Utilities",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "529f32794a6db5d32a00071f",
    "name": "Basic JS - Calculating averages",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Arguments",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "531963f82dde6fc8c800048a",
    "name": "Mystery function #1",
    "approved": true,
    "tags": [
      "Puzzles",
      "Security",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Games"
    ]
  },
  {
    "id": "580777ee2e14accd9f000165",
    "name": "The Skiponacci Sequence",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5855777bb45c01bada0002ac",
    "name": "Resistor Color Codes, Part 2",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "5aa39ba75084d7cf45000008",
    "name": "Simple fibonacci strings",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5dad6e5264e25a001918a1fc",
    "name": "Reversing a Process",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "517b25a48557c200b800000c",
    "name": "Elapsed Seconds",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "52249faee9abb9cefa0001ee",
    "name": "uniq (UNIX style)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Filtering",
      "Logic"
    ]
  },
  {
    "id": "55de9c184bb732a87f000055",
    "name": "I need more speed!",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Methods",
      "Functions",
      "Object-oriented Programming",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Programming Paradigms",
      "Classes"
    ]
  },
  {
    "id": "575fa9afee048b293e000287",
    "name": "How much water do I need?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "59d727d40e8c9dd2dd00009f",
    "name": "Easy Balance Checking",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5ebd53ea50d0680031190b96",
    "name": "Turkish Numbers, 0-99",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "537529f42993de0e0b00181f",
    "name": "Calculate number of inversions in array",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "56b5dc75d362eac53d000bc8",
    "name": "Basics 03: Strings, Numbers and Calculation",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Numbers",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Arrays"
    ]
  },
  {
    "id": "57547f9182655569ab0008c4",
    "name": "Recursive Replication",
    "approved": true,
    "tags": [
      "Algorithms",
      "Recursion",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "525a037c82bf42b9f800029b",
    "name": "Partition On",
    "approved": true,
    "tags": [
      "Algorithms",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Higher-order Functions",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "529e2e1f16cb0fcccb000a6b",
    "name": "Almost Even",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "536c00e21da4dc0a0700128b",
    "name": "Find Your Villain Name",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Dates/Time"
    ]
  },
  {
    "id": "546a3fea8a3502302a000cd2",
    "name": "The Shell Game",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55d6a0e4ededb894be000005",
    "name": "The old switcheroo 2",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "56f1c6034d0c330e4a001059",
    "name": "HTML dynamic color string generation",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5a49f074b3bfa89b4c00002b",
    "name": "String subpattern recognition I",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5cd4aec6abc7260028dcd942",
    "name": "Shortest steps to a number",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Sequences",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5ce969ab07d4b7002dcaa7a1",
    "name": "String prefix and suffix",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5ff50f64c0afc50008861bf0",
    "name": "Four/Seven",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "52af7bf41f5a1291a6000025",
    "name": "Milk and Cookies for Santa",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Hacking Holidays",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "5a5915b8d39ec5aa18000030",
    "name": "Find the missing element between two arrays",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Arrays",
      "Interview Questions"
    ]
  },
  {
    "id": "5bf774a81505a7413400006a",
    "name": "Sentences should start with capital letters.",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "54381f0b6f032f933c000108",
    "name": "Counting power sets",
    "approved": true,
    "tags": [
      "Algorithms",
      "Sets",
      "Arrays",
      "Data Types",
      "Permutations",
      "Logic"
    ]
  },
  {
    "id": "5655c60db4c2ce0c2e000026",
    "name": "Function composition",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "596f6385e7cd727fff0000d6",
    "name": "Average Array",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5f3afc40b24f090028233490",
    "name": "Swap Case Using N",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "521ef596c106a935c0000519",
    "name": "(Ready for) Prime Time",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Types",
      "Utilities"
    ]
  },
  {
    "id": "527fde8d24b9309d9b000c4e",
    "name": "Break the pieces",
    "approved": true,
    "tags": [
      "Algorithms",
      "ASCII",
      "Character Encodings",
      "Formats"
    ]
  },
  {
    "id": "52fea6fd158f0576b8000089",
    "name": "ASCII hex converter",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Bits",
      "Binary",
      "Utilities",
      "Data Conversion",
      "Algorithms",
      "Data",
      "Logic",
      "Strings",
      "Data Types",
      "ASCII",
      "Character Encodings",
      "Formats"
    ]
  },
  {
    "id": "5786f8404c4709148f0006bf",
    "name": "Pole Vault Starting Marks",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5b043e3886d0752685000009",
    "name": "Pizza Payments",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "542f3d5fd002f86efc00081a",
    "name": "Prime Factors",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "55a5c82cd8e9baa49000004c",
    "name": "Count the divisible numbers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "580a0347430590220e000091",
    "name": "Find the area of the rectangle!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "583ebb9328a0c034490001ba",
    "name": "Identical Elements",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "565c4e1303a0a006d7000127",
    "name": "Number Format",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Formats",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "56fe97b3cc08ca00e4000dc9",
    "name": "Coding 3min: Bug in Apple",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57470efebf81fea166001627",
    "name": "noobCode 03: CHECK THESE LETTERS... see if letters in \"String 2\" are present in \"String 1\"",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "59016379ee5456d8cc00000f",
    "name": "One Line Task: Squirrel And Tree",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "52e864d1ffb6ac25db00017f",
    "name": "Infix to Postfix Converter",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Types",
      "Operators",
      "Fundamentals"
    ]
  },
  {
    "id": "534ffb35edb1241eda0015fe",
    "name": "Blackjack Scorer",
    "approved": true,
    "tags": [
      "Algorithms",
      "Rules",
      "Games"
    ]
  },
  {
    "id": "555b73a81a6285b6ce000047",
    "name": "Gradually Adding Parameters",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Arguments"
    ]
  },
  {
    "id": "55d17ddd6d7868493e000074",
    "name": "Linked Lists - Append",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Linked Lists",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "56576f82ab83ee8268000059",
    "name": "Running out of space",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "570f6436b29c708a32000826",
    "name": "The First Non Repeated Character In A String ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "59619e4609868dd923000041",
    "name": "Sushi-go-round (Beginner's)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Logic"
    ]
  },
  {
    "id": "52549d3e19453df56f0000fe",
    "name": "Fibonacci Reloaded",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "54d22119beeaaaf663000024",
    "name": "254 shades of grey",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Utilities"
    ]
  },
  {
    "id": "55b1fd84a24ad00b32000075",
    "name": "Selective fear of numbers",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55e4c52ad58df7509c00007e",
    "name": "Invalid Login - Bug Fixing #11",
    "approved": true,
    "tags": [
      "Bugs",
      "Security"
    ]
  },
  {
    "id": "56311e4fdd811616810000ce",
    "name": "Method For Counting Total Occurence Of Specific Digits",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Data Structures",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Control Flow"
    ]
  },
  {
    "id": "57a1d5ef7cb1f3db590002af",
    "name": "Fibonacci",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57d86d3d3c3f961278000005",
    "name": "99 Problems, #1: last in list",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "58308360aeb69a460b0002b2",
    "name": "Train to remove duplicates from an array with filter()",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "589b1c15081bcbfe6700017a",
    "name": "Driving School Series #2",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "59be6bdc4f98a8a9c700007d",
    "name": "letters only, please!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "55e6125ad777b540d9000042",
    "name": "Invalid Input - Error Handling #1",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5982020284a83baf2f00001c",
    "name": "SQL Basics: Simple PIVOTING data WITHOUT CROSSTAB",
    "approved": true,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "5c556845d7e0334c74698706",
    "name": "Suitcase packing",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "525821ce8e7b0d240b002615",
    "name": "Arabian String",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Formatting",
      "Logic"
    ]
  },
  {
    "id": "585af8f645376cda59000200",
    "name": "Thinkful - String Drills: Poem formatter",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "59568be9cc15b57637000054",
    "name": "BECOME IMMORTAL",
    "approved": true,
    "tags": [
      "Algorithms",
      "Puzzles",
      "Games",
      "Dynamic Programming",
      "Programming Paradigms",
      "Performance"
    ]
  },
  {
    "id": "5da9af1142d7910001815d32",
    "name": "Tetris Series #1 — Scoring System",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Games",
      "Algorithms",
      "Logic",
      "Basic Language Features",
      "Loops",
      "Control Flow",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5dae2599a8f7d90025d2f15f",
    "name": "Consecutive Ducks",
    "approved": true,
    "tags": [
      "Puzzles",
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Basic Language Features",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "555185132c0d4cca3d000197",
    "name": "I Spy",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Higher-order Functions",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "56a73d2194505c29f600002d",
    "name": "Regular Expression - Check if divisible by 0b111 (7)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Puzzles",
      "Games",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "56f4ff45af5b1f8cd100067d",
    "name": "Sort - one, three, two",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Sorting",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "578fdcfc75ffd1112c0001a1",
    "name": "The Lazy Startup Office",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Iterators",
      "Control Flow",
      "Object-oriented Programming",
      "Basic Language Features",
      "Programming Paradigms",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "57d0089e05c186ccb600035e",
    "name": "Check if  a triangle is an equable triangle!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "58a5aeb893b79949eb0000f1",
    "name": "Shared Bit Counter",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Binary",
      "Bits"
    ]
  },
  {
    "id": "5572392fee5b0180480001ae",
    "name": "Keypad horror",
    "approved": true,
    "tags": [
      "Puzzles",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5808c8eff0ed4210de000008",
    "name": "Alan Partridge I - Partridge Watch",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "5302d655be2a91068b0001fb",
    "name": "Dependency Injection",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Design Patterns",
      "Design Principles",
      "Object-oriented Programming",
      "Utilities",
      "Angular"
    ]
  },
  {
    "id": "54b679eaac3d54e6ca0008c9",
    "name": "Function iteration",
    "approved": true,
    "tags": [
      "Algorithms",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "55217af7ecb43366f8000f76",
    "name": "Mysterious function",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57d5e850bfcdc545870000b7",
    "name": "Dead Ants",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "580751a40b5a777a200000a1",
    "name": "Vowel one",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "588817db5fb13af14a000020",
    "name": "Simple Fun #40:  Timed Reading",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "55ed875819ae85ca8b00005c",
    "name": "Multiply array values and filter non-numeric",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "580a41b6d6df740d6100030c",
    "name": "Alan Partridge III - London",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "55d2aee99f30dbbf8b000001",
    "name": "Scoring Tests",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Numbers",
      "Integers"
    ]
  },
  {
    "id": "58ac59d21c9e1d7dc5000150",
    "name": "Cut array into smaller parts",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59bd84b8a0640e7c49002398",
    "name": "Triangle area",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "52190daefe9c702a460003dd",
    "name": "Return substring instance count - 2",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Search",
      "Logic"
    ]
  },
  {
    "id": "546dba39fa8da224e8000467",
    "name": "Run-length encoding",
    "approved": true,
    "tags": [
      "Algorithms",
      "Encoding",
      "Logic",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5546ea9bddfc5c0c38000026",
    "name": "You Can't Code Under Pressure #2",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Closures",
      "Basic Language Features",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "567d71b93f8a50f461000019",
    "name": "Genetic Algorithm Series - #3 Crossover",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Logic",
      "Genetic Algorithms"
    ]
  },
  {
    "id": "56c0ca8c6d88fdb61b000f06",
    "name": "Next Version",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "5892595f190ca40ad0000095",
    "name": "Mispelled word",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays",
      "Conditional Statements",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5b609ebc8f47bd595e000627",
    "name": "Find the force of gravity between two objects",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "523d2e964680d1f749000135",
    "name": "Interleaving Arrays",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "59e9f404fc3c49ab24000112",
    "name": "Ch4113ng3",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5a58ca28e626c55ae000018a",
    "name": "Calculate the area of a regular n sides polygon inside a circle of radius r",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Geometry",
      "Algebra"
    ]
  },
  {
    "id": "55cacc3039607536c6000081",
    "name": "Linked Lists - Insert Nth Node",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Linked Lists",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "570184a95594a091150000a0",
    "name": "Ghost code?!",
    "approved": true,
    "tags": [
      "Bugs",
      "Unicode",
      "Character Encodings",
      "Formats"
    ]
  },
  {
    "id": "58a664bb586e986c940001d5",
    "name": "Simple Fun #135: Missing Alphabets",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "59557b2a6e595316ab000046",
    "name": "Convert Hash To An Array",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Hashes",
      "Data Structures",
      "Objects",
      "Lists"
    ]
  },
  {
    "id": "5647c3858d4acbbe550000ad",
    "name": "Regular expression for binary numbers divisible by 5",
    "approved": true,
    "tags": [
      "Algorithms",
      "Binary",
      "Numbers",
      "Data Types",
      "Logic",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings"
    ]
  },
  {
    "id": "57d448c6ba30875437000138",
    "name": "Find the sum of the roots of a quadratic equation",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "53da6a7e112bd15cbc000012",
    "name": "Sorting Dictionaries",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Sorting",
      "Algorithms",
      "Logic",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "54db3f2903e88ad6c30002ff",
    "name": "Hello W... wait what?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "565b9d6f8139573819000056",
    "name": "Decoding a message",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Encryption",
      "Algorithms",
      "Cryptography",
      "Logic",
      "Security"
    ]
  },
  {
    "id": "5840586b5225616069000001",
    "name": "Which string is worth more?",
    "approved": true,
    "tags": [
      "Puzzles",
      "ASCII",
      "Character Encodings",
      "Formats"
    ]
  },
  {
    "id": "5865a75da5f19147370000c7",
    "name": "All Star Code Challenge #20",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "588463cae61257e44600006d",
    "name": "Simple Fun #13: Magical Well",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "557341907fbf439911000022",
    "name": "Complete The Pattern #3 (Horizontal Image of #2)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "55de6173a8fbe814ee000061",
    "name": "Filter unused digits",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "566543703c72200f0b0000c9",
    "name": "Disease Spread",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59c01248bf10a47bd1000046",
    "name": "Validate my Password",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Conditional Statements",
      "Control Flow",
      "Basic Language Features",
      "Loops"
    ]
  },
  {
    "id": "5d98b6b38b0f6c001a461198",
    "name": "Binaries",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "527a6e602a7db3456e000a2b",
    "name": "Extract Nested Object Reference",
    "approved": true,
    "tags": [
      "Refactoring",
      "Objects",
      "Data Types",
      "Prototypes",
      "Properties",
      "Basic Language Features",
      "Object-oriented Programming",
      "Fundamentals",
      "Programming Paradigms",
      "Hashes",
      "Data Structures",
      "Namespaces",
      "Utilities"
    ]
  },
  {
    "id": "56f78a42f749ba513b00037f",
    "name": "Probabilities for Sums in Rolling  Cubic Dice",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Control Flow",
      "Basic Language Features",
      "Statistics",
      "Data",
      "Puzzles",
      "Games",
      "Permutations"
    ]
  },
  {
    "id": "588e2a1ad1140d31cb00008c",
    "name": "Pairs of integers from m to n",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "593406b8f3d071d83c00005d",
    "name": "How many animals are there?",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "594093784aafb857f0000122",
    "name": "Difference between two collections",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5a02e9c19f8e2dbd50000167",
    "name": "Start with a Vowel",
    "approved": true,
    "tags": [
      "Algorithms",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings"
    ]
  },
  {
    "id": "5e030f77cec18900322c535d",
    "name": "Minimum to multiple",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "55466644b5d240d1d70000ba",
    "name": "Candy problem",
    "approved": true,
    "tags": [
      "Algorithms",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "56684677dc75e3de2500002b",
    "name": "Comfortable words",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Validation",
      "Logic"
    ]
  },
  {
    "id": "567b39b27d0a4606a5000057",
    "name": "Genetic Algorithm Series - #2 Mutation",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Genetic Algorithms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "57e5a6a67fbcc9ba900021cd",
    "name": "Fun with trees: array to tree",
    "approved": true,
    "tags": [
      "Algorithms",
      "Trees",
      "Data Structures",
      "Arrays",
      "Data Types",
      "Binary Search Trees",
      "Binary"
    ]
  },
  {
    "id": "582001237a3a630ce8000a41",
    "name": "Using Window Functions To Get Top N per Group",
    "approved": true,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "583d972b8bbc0402cf000121",
    "name": "Coding Meetup #16 - Higher-Order Functions Series - Ask for missing details",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Higher-order Functions",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Data Structures",
      "Arrays",
      "Data Types",
      "Objects",
      "Algorithms",
      "Logic",
      "Strings"
    ]
  },
  {
    "id": "604517d65b464d000d51381f",
    "name": "Strange mathematics",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Sorting",
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "573182c405d14db0da00064e",
    "name": "Consecutive k-Primes",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "586c0909c1923fdb89002031",
    "name": "Connect 4",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "59fa8e2646d8433ee200003f",
    "name": "Sorting by bits",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Logic",
      "Arrays",
      "Data Types",
      "Algorithms",
      "Data Structures"
    ]
  },
  {
    "id": "5a057ec846d843c81a0000ad",
    "name": "1/n- Cycle",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5b0a80ce84a30f4762000069",
    "name": "FIXME: Hello",
    "approved": true,
    "tags": [
      "Bugs"
    ]
  },
  {
    "id": "5d076515e102162ac0dc514e",
    "name": " Baby shark lyrics generator",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "536c6b8749aa8b3c2600029a",
    "name": "A String of Sorts",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Sorting",
      "Logic"
    ]
  },
  {
    "id": "569512b7707bc1b88200002f",
    "name": "Recursion #2 - Fibonacci",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Recursion",
      "Algorithms",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "56dbf59b0a10feb08c000227",
    "name": "Moves in squared strings (IV)",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "581f4ac139dc423f04000b99",
    "name": "Transpose two strings in an array",
    "approved": true,
    "tags": [
      "Puzzles",
      "Arrays",
      "Data Types",
      "Strings",
      "Methods",
      "Functions",
      "Object-oriented Programming",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5870fa11aa0428da750000da",
    "name": "RoboScript #2 - Implement the RS1 Specification",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5a32526ae1ce0ec0f10000b2",
    "name": "Digits Average",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "514aa0dc21607ae236000017",
    "name": "Shifty Closures",
    "approved": true,
    "tags": [
      "Bugs",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Closures"
    ]
  },
  {
    "id": "5701800886306a876a001031",
    "name": "Suzuki needs help lining up his students!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Sorting",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "581331293788bc1702001fa6",
    "name": "Framed Reflection",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "592a33e549fe9840a8000ba1",
    "name": "isEven? - Bitwise Series",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59d28768a25c8c51a6000057",
    "name": "Count cubes in a Menger Sponge",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "60a1aac7d5a5fc0046c89651",
    "name": "Last Survivors Ep.2",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Basic Language Features",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "542f0c36d002f8cd8a0005e5",
    "name": "Waiting room",
    "approved": true,
    "tags": [
      "Algorithms",
      "Sorting",
      "Logic",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "56069d0c4af7f633910000d3",
    "name": "Filter Coffee",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "57e92812750fcc051800004d",
    "name": "Holiday VII - Local Talk",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "5bdc191306a8a678f6000187",
    "name": "Shift Left",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5259acb16021e9d8a60010af",
    "name": "Least Common Multiple",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5574940eae1cf7d520000076",
    "name": "Complete The Pattern #6 - Odd Ladder",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5624e574ec6034c3a20000e6",
    "name": "Hamming Distance - Part 1: Binary codes",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Basic Language Features"
    ]
  },
  {
    "id": "56fcc393c5957c666900024d",
    "name": "Coding with Squared Strings",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "57ebdf1c2d45a0ecd7002cd5",
    "name": "Inside Out Strings",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "597754ba62f8a19c98000030",
    "name": "Vowel Changer",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "54530f75699b53e558002076",
    "name": "NATO Phonetic Alphabet",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5592fc599a7f40adac0000a8",
    "name": "Diagonals sum",
    "approved": true,
    "tags": [
      "Algorithms",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "57f8842367c96a89dc00018e",
    "name": "Cat and Mouse - 2D Version",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5869848f2d52095be20001d1",
    "name": "Cat Kata, Part 1",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5594463eaf1701909c0000d4",
    "name": "Sum ALL the arrays!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Recursion",
      "Algorithms",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "586a933fc66d187b6e00031a",
    "name": "Image host filename generator",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Logic",
      "Objects",
      "Data Types",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "5a626fc7fd56cb63c300008c",
    "name": "Uncollapse Digits",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "529872bdd0f550a06b00026e",
    "name": "Largest product in a series",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "52ae6b6623b443d9090002c8",
    "name": "Guess The Gifts!",
    "approved": true,
    "tags": [
      "Algorithms",
      "Hacking Holidays"
    ]
  },
  {
    "id": "5566b0dd450172dfc4000005",
    "name": "Finding length of the sequence",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "57293671c98f77e84b000065",
    "name": "What is type of variable?",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58b38256e51f1c2af0000081",
    "name": "Simple Fun #166: Best Match",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5784c89be5553370e000061b",
    "name": "Product of Largest Pair",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Algorithms",
      "Logic",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Sorting"
    ]
  },
  {
    "id": "5f9f43328a6bff002fa29eb8",
    "name": "Floating point comparison",
    "approved": true,
    "tags": [
      "Bugs",
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Floats/Doubles",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5286d92ec6b5a9045c000087",
    "name": "Objectify a URL Query String",
    "approved": true,
    "tags": [
      "Algorithms",
      "Maps",
      "Data Structures",
      "Map/Reduce",
      "Logic"
    ]
  },
  {
    "id": "55c423ecf847fbcba100002b",
    "name": "Regex Failure - Bug Fixing #2",
    "approved": true,
    "tags": [
      "Bugs",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "58844f1a76933b1cd0000023",
    "name": "Simple Fun #8: Kill K-th Bit",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5bc052f93f43de7054000188",
    "name": "Simple string matching",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "559f3e20f4f29869cf0000ea",
    "name": "Sort with Arrow Functions",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5710a50d336aed828100055a",
    "name": "Coding 3min : Remove screws I",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58545549b45c01ccab00058c",
    "name": "Calculate Meal Total",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5886d65e427c27afeb0000c1",
    "name": "Simple Fun #23: Square Digits Sequence",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "52cd53948d673a6e66000576",
    "name": "Breaking search bad",
    "approved": true,
    "tags": [
      "Bugs",
      "Search",
      "Algorithms",
      "Logic",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings"
    ]
  },
  {
    "id": "54f0d5447872e8ce9f00013d",
    "name": "Big Factorial",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "558cb3df5f511f40d500001d",
    "name": "Replicate `new`",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Constructors",
      "Basic Language Features",
      "Operators",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Objects",
      "Data Types",
      "Inheritance",
      "Polymorphism",
      "Prototypes"
    ]
  },
  {
    "id": "5899aa695401a83a5c0000c4",
    "name": "Circle area inside square",
    "approved": true,
    "tags": [
      "Algorithms",
      "Shape Modeling",
      "Graphics",
      "Mathematics",
      "Logic",
      "Numbers",
      "Geometry",
      "Algebra"
    ]
  },
  {
    "id": "596776fbb4f24d0d82000141",
    "name": "Alternating between three values",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Dictionary",
      "Data Structures",
      "Conditional Statements",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "51e704f2d8dbace389000279",
    "name": "Arrays Similar",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5277dc3ff4bfbd9a36000c1c",
    "name": "ASCII85 Encoding & Decoding",
    "approved": true,
    "tags": [
      "Algorithms",
      "Binary",
      "ASCII",
      "Character Encodings",
      "Formats",
      "Encoding",
      "Logic",
      "Decoding",
      "Prototypes",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "56242b89689c35449b000059",
    "name": "draw me a chessboard",
    "approved": true,
    "tags": [
      "Algorithms",
      "Puzzles",
      "Games",
      "Fundamentals"
    ]
  },
  {
    "id": "5660aa3d5e011dfd6e000063",
    "name": "80's Kids #2: Help ALF Find His Spaceship",
    "approved": true,
    "tags": [
      "Algorithms",
      "Lambdas",
      "Functional Programming",
      "Functions",
      "Declarative Programming",
      "Programming Paradigms",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Maps",
      "Data Structures",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "56d31aaefd3a52902a000d66",
    "name": "The Ladies of ENIAC",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "57a2ab1abb994466910003af",
    "name": "T.T.T.17: Split odd and even",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58cda88814e65627c5000045",
    "name": "Write Number in Expanded Form - Part 2",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Numbers",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "563319974612f4fa3f0000e0",
    "name": "White or Black?",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "56d9292cc11bcc3629000533",
    "name": "Thinking & Testing : Incomplete string",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "577e277c9fb2a5511c00001d",
    "name": "Vowel Shifting",
    "approved": true,
    "tags": [
      "Algorithms",
      "Basic Language Features",
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "592915cc1fad49252f000006",
    "name": "No ifs no buts",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "592eaf848c91f248ca000012",
    "name": "Adding words - Part I",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5d6f49d85e45290016bf4718",
    "name": "Is There an Odd Bit?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Bits",
      "Binary"
    ]
  },
  {
    "id": "54ce4c6804fcc440a1000ecb",
    "name": "Burrows-Wheeler-Transformation",
    "approved": true,
    "tags": [
      "Algorithms",
      "Encoding",
      "Logic",
      "Decoding",
      "Lists",
      "Data Structures",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5a433c7a8f27f23bb00000dc",
    "name": "Split By Value",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5f8341f6d030dc002a69d7e4",
    "name": "Least Larger",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "552ab0a4db0236ff1a00017a",
    "name": "SillyCASE",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "582cd9033c1acf1d45000052",
    "name": "Bash Basics - While Loop",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Bash",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "589e0837e10c4a1018000028",
    "name": "Calculating Month-Over-Month Percentage Growth Rate",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Databases",
      "Information Systems",
      "Data",
      "SQL"
    ]
  },
  {
    "id": "54c2fc0552791928c9000517",
    "name": "Sum of many ints",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "54db15b003e88a6a480000b9",
    "name": "Moduli number system",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "552e45cc30b0dbd01100001a",
    "name": "Russian postal code checker",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "558878ab7591c911a4000007",
    "name": "Single Word Pig Latin",
    "approved": true,
    "tags": [
      "Puzzles",
      "Strings",
      "Data Types",
      "Games",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals"
    ]
  },
  {
    "id": "583ea278c68d96a5fd000abd",
    "name": "Coding Meetup #17 - Higher-Order Functions Series - Sort by programming language",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Higher-order Functions",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Data Structures",
      "Arrays",
      "Data Types",
      "Objects",
      "Algorithms",
      "Logic",
      "Strings"
    ]
  },
  {
    "id": "5932c94f6aa4d1d786000028",
    "name": "number with 3 roots. ",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5811010104adbba24b0002fe",
    "name": "SQL Basics: Create a FUNCTION (DATES)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "5d10d53a4b67bb00211ca8af",
    "name": "Aerial Firefighting",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Logic",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "53951fff369894e4f10007a9",
    "name": "Use map() to double the values in an array",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "546ba103f0cf8f7982000df4",
    "name": "Binary Calculator",
    "approved": true,
    "tags": [
      "Algorithms",
      "Binary"
    ]
  },
  {
    "id": "54de3257f565801d96001200",
    "name": "Ease the StockBroker",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "565abd876ed46506d600000d",
    "name": "Simpson's Rule - Approximate Integration",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5b7ea71db90cc0f17c000a5a",
    "name": "Total pressure calculation",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "513e1e47c600c93cef000001",
    "name": "JavaScript class-like objects",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "52b50a20fa0e77b304000103",
    "name": "SantaClausable Interface",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Hacking Holidays",
      "Interfaces",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Dynamic Programming"
    ]
  },
  {
    "id": "562d8d4c434582007300004e",
    "name": "Email Address Obfuscator",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "57eb936de1051801d500008a",
    "name": "Array Array Array",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Numbers",
      "Arrays"
    ]
  },
  {
    "id": "58f6f87a55d759439b000073",
    "name": "Negation of a Value",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Logic",
      "Algorithms"
    ]
  },
  {
    "id": "591eab1d192fe0435e000014",
    "name": "Car Park Escape",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Games"
    ]
  },
  {
    "id": "5b5097324a317afc740000fe",
    "name": "Not above the one!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5258b272e6925db09900386a",
    "name": "For the sake of argument",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arguments",
      "Basic Language Features",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "53fc954904a45eda6b00097f",
    "name": "Custom Array Filters",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Utilities",
      "Arrays",
      "Data Types",
      "Prototype-based Programming",
      "Programming Paradigms",
      "Prototypes"
    ]
  },
  {
    "id": "583d10c03f02f41462000137",
    "name": "The maximum sum value of ranges -- Simple version",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5864eb8039c5ab9cd400005c",
    "name": "All Star Code Challenge #14 - Find the median",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a19226646d843de9000007d",
    "name": "How Many Unique Consonants?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Fundamentals"
    ]
  },
  {
    "id": "572af273a3af3836660014a1",
    "name": "Training JS #23: methods of arrayObject---push(), pop(), shift() and unshift()",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59cf805aaeb28438fe00001c",
    "name": "Sum of digits",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5519e930cd82ff8a9a000216",
    "name": "Count the Ones",
    "approved": true,
    "tags": [
      "Algorithms",
      "Binary"
    ]
  },
  {
    "id": "556c04c72ee1147ff20000c9",
    "name": "Social Golfer Problem Validator",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5806445c3f1f9c2f72000031",
    "name": "Mean vs. Median",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Numbers"
    ]
  },
  {
    "id": "582c5382f000e535100001a7",
    "name": "Parse a linked list from a string",
    "approved": true,
    "tags": [
      "Algorithms",
      "Linked Lists",
      "Lists",
      "Data Structures",
      "Recursion",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "586e4c61aa0428f04e000069",
    "name": "Get decimal part of the given number",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "58902f676f4873338700011f",
    "name": "Lucky Bus Ticket",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "59491429952ac97ad9000106",
    "name": "SQL: Bytes in String from Ints",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Numbers",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "54cb771c9b30e8b5250011d4",
    "name": "Fabergé Easter Eggs crush test",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Dynamic Programming",
      "Programming Paradigms",
      "Performance"
    ]
  },
  {
    "id": "55efecb8680f47654c000095",
    "name": "Hero's root",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56a75b91688b49ad94000015",
    "name": "Excessively Abundant Numbers",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Puzzles",
      "Games",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "57c7231c484cf9e6ac000090",
    "name": "Adding values of arrays in a shifted way",
    "approved": true,
    "tags": [
      "Algorithms",
      "Basic Language Features",
      "Fundamentals",
      "Mathematics",
      "Logic",
      "Numbers",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "57e1857d333d8e0f76002169",
    "name": "Loose Change!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Basic Language Features"
    ]
  },
  {
    "id": "592a6ad46d6c5a62b600003f",
    "name": "GA-DE-RY-PO-LU-KI cypher",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Encryption",
      "Algorithms",
      "Cryptography",
      "Logic",
      "Security"
    ]
  },
  {
    "id": "5b1cd19fcd206af728000056",
    "name": "Which x for that sum?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5c563cb78dac1951c2d60f01",
    "name": "Club Doorman",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Decryption",
      "Algorithms",
      "Cryptography",
      "Logic",
      "Security"
    ]
  },
  {
    "id": "53f9ee9f64b19d4b1d0001ed",
    "name": "Hello Happy Codevarrior!",
    "approved": true,
    "tags": [
      "Bugs"
    ]
  },
  {
    "id": "544975fc18f47481ba00107b",
    "name": "Circularly Sorted Array",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Sorting"
    ]
  },
  {
    "id": "54a6b43e478d8ee14c000a5d",
    "name": "Java Functional Programming (Part 1: The Beginning)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lambdas",
      "Functional Programming",
      "Functions",
      "Declarative Programming",
      "Programming Paradigms",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "568f9bd9cbe89334c900000c",
    "name": "Unique numbers",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "56b0f6243196b9d42d000034",
    "name": "Sum Factorial",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "571b2ee08d8c9c0d160014ec",
    "name": "How sexy is your name?",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "589ebcb9926baae92e000001",
    "name": "ASCII letters from Number",
    "approved": true,
    "tags": [
      "Fundamentals",
      "ASCII",
      "Character Encodings",
      "Formats",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "593ff8b39e1cc4bae9000070",
    "name": "Longest Common Subsequence (Performance version)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Performance",
      "Strings",
      "Data Types",
      "Sequences",
      "Arrays"
    ]
  },
  {
    "id": "59be8c08bf10a49a240000b1",
    "name": "Convert all the cases!",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Formatting",
      "Logic",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals"
    ]
  },
  {
    "id": "525fbff0594da0665c0003a3",
    "name": "Conway's Game of Life",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Graphics",
      "Rules"
    ]
  },
  {
    "id": "55cc33e97259667a08000044",
    "name": "Linked Lists - Sorted Insert",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Linked Lists",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "572fdeb4380bb703fc00002c",
    "name": "Training JS #26: methods of arrayObject---map()",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58039f8efca342e4f0000023",
    "name": "Change it up",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "59ad7d2e07157af687000070",
    "name": "Pull your words together, man!",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Formatting",
      "Logic"
    ]
  },
  {
    "id": "5a805631ba1bb55b0c0000b8",
    "name": "Case-sensitive!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5bd00c99dbc73908bb00057a",
    "name": "Alphabetical Sequence",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "54cf7f926b85dcc4e2000d9d",
    "name": "Huffman Encoding",
    "approved": true,
    "tags": [
      "Algorithms",
      "Encoding",
      "Logic",
      "Decoding"
    ]
  },
  {
    "id": "55b22ef242ad87345c0000b2",
    "name": "Quick (n choose k) calculator",
    "approved": true,
    "tags": [
      "Algorithms",
      "Optimization"
    ]
  },
  {
    "id": "562e6df5cf2d3908ad00019e",
    "name": "Don't Drink the Water",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types",
      "Sorting",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "56b0bc0826814364a800005a",
    "name": "Cyclops numbers",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "570fd7ad34e6130455001835",
    "name": "Zebulan's Nightmare",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5832db03d5bafb7d96000107",
    "name": "Lottery machine",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5a2b7edcb6486a856e00005b",
    "name": "Is it a vowel on this position?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Basic Language Features"
    ]
  },
  {
    "id": "556cebcf7c58da564a000045",
    "name": "Number of Rectangles in a Grid",
    "approved": true,
    "tags": [
      "Puzzles",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Games"
    ]
  },
  {
    "id": "55b350026cc02ac1a7000032",
    "name": "Convert integer to Whitespace format",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Binary"
    ]
  },
  {
    "id": "574bd867d277832448000adf",
    "name": "Master of Files ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "59413d53f5c3947364000016",
    "name": "SQL: Regex String to Table",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "606b43f4adea6e00425dff42",
    "name": "Map over a list of lists",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "51c38e14ea1c97ffaf000003",
    "name": "Populate hash with array keys and default value",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Hashes",
      "Data Structures",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5410c0e6a0e736cf5b000e69",
    "name": "Hamming Distance",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "56a4a3d4043c316002000042",
    "name": "regex  validation of 24 hours time.",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Dates/Time",
      "Data Types",
      "Parsing",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "56c22cdbe0c0f7cae2001789",
    "name": "Write shortest function to calculate Average number of Array",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5a731b36e19d14400f000c19",
    "name": "Password Check - Binary to String",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Binary",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "5b3e1dca3da310a4390000f3",
    "name": "Offload your work!",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5deeb1cc0d5bc9000f70aa74",
    "name": "Will you survive the zombie onslaught?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Games"
    ]
  },
  {
    "id": "5e8dd197c122f6001a8637ca",
    "name": "Duplicates. Duplicates Everywhere.",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Objects",
      "Data Types",
      "Arrays",
      "Sets",
      "Sorting",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5f8a15c06dbd530016be0c19",
    "name": "Duplicate sandwich",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "564a6486c2070faee6000011",
    "name": "Is Undefined?",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56b7251b81290caf76000978",
    "name": "Find Fibonacci last digit",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Sequences",
      "Arrays",
      "Data Types",
      "Parsing",
      "Strings"
    ]
  },
  {
    "id": "5862e7c63f8628a126000e18",
    "name": "Thinkful - Number Drills: Congo warehouses",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "586430a5b3a675296a000395",
    "name": "Cost of my ride",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58865bfb41e04464240000b0",
    "name": "World Bits War",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Bits",
      "Binary",
      "Map/Reduce",
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types",
      "Integers",
      "Numbers"
    ]
  },
  {
    "id": "589631d24a7323d18d00016f",
    "name": "Piano Kata, Part 2",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59be9f425227ddd60c00003b",
    "name": "SELECT prime numbers",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "59cd155d1a68b70f8e000117",
    "name": "Middle Me",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5b047875de4c7f9af800011b",
    "name": "String Reordering",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "536950ffc8a5ca9982001371",
    "name": "Frog jumping",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "55c9fb1b407024afe6000055",
    "name": "Find an employees role in the company",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Basic Language Features"
    ]
  },
  {
    "id": "56044de2aa75e28875000017",
    "name": "CompoundArray",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "563a8656d52a79f06c00001f",
    "name": "Is valid identifier?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Data Types",
      "Validation",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "573023c81add650b84000429",
    "name": "Training JS #27: methods of arrayObject---filter()",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5523b97ac8f5025c45000900",
    "name": "The Enigma Machine - Part 1: The Plugboard",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "564e7fc20f0b53eb02000106",
    "name": "Count consonants",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "582642b1083e12521f0000da",
    "name": "Array Mash",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Numbers",
      "Strings"
    ]
  },
  {
    "id": "5a1cb5406975987dd9000028",
    "name": "Sort odd and even numbers in different order",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5a941f4e1a60f6e8a70025fe",
    "name": "Odds-Index",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5c09ccc9b48e912946000157",
    "name": "Bird Mountain",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "52503c77e5b972f21600000e",
    "name": "Largest Difference in Increasing Indexes",
    "approved": true,
    "tags": [
      "Algorithms",
      "Interview Questions",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "540c013634e6bac0350000a5",
    "name": "Unique Pairs",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Arithmetic",
      "Mathematics"
    ]
  },
  {
    "id": "55c1d030da313ed05100005d",
    "name": "Building Spheres",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Basic Language Features"
    ]
  },
  {
    "id": "56ff9b53140fcca90b000530",
    "name": "SpeedCode #3 × Fun with ES6 Classes #5 - Dogs and Classes",
    "approved": true,
    "tags": [
      "Puzzles",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Inheritance",
      "Polymorphism",
      "Refactoring"
    ]
  },
  {
    "id": "57675f3dedc6f728ee000256",
    "name": "Build Tower Advanced",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Basic Language Features"
    ]
  },
  {
    "id": "53222010db0eea35ad000001",
    "name": "Slope of a Line",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Graphs",
      "Data Structures",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Geometry",
      "Algebra"
    ]
  },
  {
    "id": "55a3cb91d1c9ecaa2900001b",
    "name": "Katastrophe!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "56d344c7fd3a52566700124b",
    "name": "Test Your Knowledge Of Function Scope",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Scopes",
      "Basic Language Features",
      "Functions",
      "Control Flow"
    ]
  },
  {
    "id": "56e56756404bb1c950000992",
    "name": "Sum of differences between products and LCMs",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Lists",
      "Data Structures",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "59901fb5917839fe41000029",
    "name": "Generic numeric template formatter",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings",
      "Formats"
    ]
  },
  {
    "id": "54f8b0c7a58bce9db6000dc4",
    "name": "Rotate Array (JS)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5668e3800636a6cd6a000018",
    "name": "Ghostbusters (whitespace removal)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "58b972cae826b960a300003e",
    "name": "Jenny the youngest detective",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays",
      "Algorithms",
      "Logic",
      "Basic Language Features"
    ]
  },
  {
    "id": "5908242330e4f567e90000a3",
    "name": "One Line Task: Circle Intersection",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "59437bd7d8c9438fb5000004",
    "name": "Alphabet wars - nuclear strike",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "603b2bb1c7646d000f900083",
    "name": "Shifter words ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "53670c5867e9f2222f000225",
    "name": "Orthogonal Vectors",
    "approved": true,
    "tags": [
      "Algorithms",
      "Physics",
      "Logic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "57a23e3753ba332b8e0008da",
    "name": "Password System",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58067088c27998b119000451",
    "name": "Reverse Factorials",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "596f28fd9be8ebe6ec0000c1",
    "name": "Wave Sorting",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "59de795c289ef9197f000c48",
    "name": "Remove B M W",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5464cbfb1e0c08e9b3000b3e",
    "name": "Happy numbers",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "55a89dd69fdfb0d5ce0000ac",
    "name": "Back to Basics",
    "approved": true,
    "tags": [
      "Bugs"
    ]
  },
  {
    "id": "58126aa90ea99769e7000119",
    "name": "SQL Basics: Simple PIVOTING data",
    "approved": true,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data",
      "Reporting"
    ]
  },
  {
    "id": "5b2be37991c7460d17000009",
    "name": "String Packet Based Communications",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Networks",
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types",
      "Games"
    ]
  },
  {
    "id": "605ae9e1d2be8a0023b494ed",
    "name": "Count salutes",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "53583765d5493bfdf5001b35",
    "name": "Using closures to share class state",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Closures",
      "Basic Language Features",
      "Design Patterns",
      "Design Principles",
      "Inheritance",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Polymorphism"
    ]
  },
  {
    "id": "5836dce6966f8d1d43000007",
    "name": "TV  channels",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Objects"
    ]
  },
  {
    "id": "587e18b97a25e865530000d8",
    "name": "Number of anagrams in an array of words",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "58844a13aa037ff143000072",
    "name": "Simple Fun #7: Will You?",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5fc4349ddb878a0017838d0f",
    "name": "Red Knight",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "551614eb77dd9ee37100003e",
    "name": "Batman Quotes",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5575ff8c4d9c98bc96000042",
    "name": "Complete The Pattern #8 - Number Pyramid",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "559d7951ce5e0da654000073",
    "name": "Alternate Square Sum",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "57e2afb6e108c01da000026e",
    "name": "Write out expression!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Basic Language Features"
    ]
  },
  {
    "id": "57e2dd0bec7d247e5600013a",
    "name": "Unflatten a list (Easy)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Basic Language Features",
      "Fundamentals",
      "Mathematics",
      "Logic",
      "Numbers",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "593e84f16e836ca9a9000054",
    "name": "Return 1, 2, 3 randomly",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5ac5e9aa3853da25d9000102",
    "name": "ORing arrays",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Lists",
      "Data Structures",
      "Bitwise Operators",
      "Bits",
      "Operators",
      "Advanced Language Features",
      "Binary",
      "Maps",
      "Map/Reduce",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5e16ffb7297fe00001114824",
    "name": "Most sales",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55749101ae1cf7673800003e",
    "name": "Complete The Pattern #5 - Even Ladder",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "59c0cdbd5fb133c82b00007d",
    "name": "Everything Is Even",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Arithmetic",
      "Data Types",
      "Basic Language Features"
    ]
  },
  {
    "id": "5a1dc4baffe75f270200006b",
    "name": "Only Duplicates",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Strings",
      "Data Types",
      "Logic"
    ]
  },
  {
    "id": "5cb05eee03c3ff002153d4ef",
    "name": "Which section did you scroll to?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals"
    ]
  },
  {
    "id": "54746b7ab2bc2868a0000acf",
    "name": "Mod4 Regex",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "570e6e32de4dc8a8340016dd",
    "name": "The Lamp: Revisited",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5772382d509c65de7e000982",
    "name": "Fibo akin",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57e8f757085f7c7d6300009a",
    "name": "Holiday II - Plane Seating",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Numbers",
      "Arrays"
    ]
  },
  {
    "id": "5865a28fa5f191d35f0000f8",
    "name": "Thinkful - Logic Drills: Umbrella decider",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Booleans",
      "Data Types",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5911385598dcd432ae000004",
    "name": "Simple Fun #258: Is Divisible By 6",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Numbers",
      "Data Types",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59e66e48fc3c499ec5000103",
    "name": "Array  combinations",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5c942f40bc4575001a3ea7ec",
    "name": "Multiplicative Persistence... What's special about 277777788888899?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Persistence",
      "Data",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5266fba01283974e720000fa",
    "name": "Calculate Variance",
    "approved": true,
    "tags": [
      "Algorithms",
      "Statistics",
      "Data",
      "Logic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "52fba2a9adcd10b34300094c",
    "name": "Matrix Transpose",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Algebra",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "554910d77a3582bbe300009c",
    "name": "Who won the election?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Lists",
      "Data Structures",
      "Fundamentals",
      "Data"
    ]
  },
  {
    "id": "55a243393fb3e87021000198",
    "name": "Remember",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types",
      "Arrays",
      "Search"
    ]
  },
  {
    "id": "585a36b445376cbc22000072",
    "name": "Thinkful - String Drills: Areacode extractor",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5e4217e476126b000170489b",
    "name": "Polydivisible Numbers",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "541da001259d9ca85d000688",
    "name": "Arithmetic List!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "55688b4e725f41d1e9000065",
    "name": "Even Fibonacci Sum",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "578bf2d8daa01a4ee8000046",
    "name": "Data compression using run-length encoding",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "57ff9d3b8f7dda23130015fa",
    "name": "Mine Sweeper",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "592c1dfb912f22055b000099",
    "name": "Mr. Safety's treasures",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "52840d2b27e9c932ff0016ae",
    "name": "search in multidimensional array",
    "approved": true,
    "tags": [
      "Algorithms",
      "Search",
      "Logic",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "557592fcdfc2220bed000042",
    "name": "Complete The Pattern #7 - Cyclical Permutation",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Sequences",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "55f7eb009e6614447b000099",
    "name": "Grains",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5669a5113c8ebf16ed00004c",
    "name": "Common Substrings",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "56ec1e8492446a415e000b63",
    "name": "Counter of neighbor ones",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5904be220881cb68be00007d",
    "name": "Plenty of Fish in the Pond",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5b45e4b3f41dd36bf9000090",
    "name": "Guess the Sequence",
    "approved": true,
    "tags": [
      "Algorithms",
      "Games",
      "Puzzles"
    ]
  },
  {
    "id": "52763db7cffbc6fe8c0007f8",
    "name": "Tongues",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Encryption",
      "Cryptography",
      "Logic",
      "Security",
      "Decryption",
      "Ciphers"
    ]
  },
  {
    "id": "56eff1e64794404a720002d2",
    "name": "Thinking & Testing : How many \"word\"?",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5862eeeae20244d5eb000005",
    "name": "Thinkful - Number Drills: Rømer temperature",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5906a218dfeb0dbb52000005",
    "name": "The Hidden Word",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Case/Switch Statements",
      "Conditional Statements",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5a34f087c5e28462d9000082",
    "name": "Swap the head and the tail",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "5b94d7eb1d5ed297680000ca",
    "name": "Simple directions reversal",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "55f81f9aa51f9b72a200002f",
    "name": "Find the unique number",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Integers",
      "Arrays",
      "Performance"
    ]
  },
  {
    "id": "56ba8a9b022c16017d0001f3",
    "name": "Sequence generator",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Utilities",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "572cb264362806af46000793",
    "name": "Training JS #24: methods of arrayObject---splice() and slice()",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "576a29ab726f4bba4b000bb1",
    "name": "What is my name score? #1",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Objects",
      "Arrays"
    ]
  },
  {
    "id": "5888cba35194f7f5a800008b",
    "name": "Asterisk it",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Logic"
    ]
  },
  {
    "id": "5a908da30025e995880000e3",
    "name": "Simple prime streaming",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "55f9064161541a9e01000001",
    "name": "Valid number to 2 decimal places",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "563f879ecbb8fcab31000041",
    "name": "First-Class Function Factory",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Control Flow",
      "Basic Language Features",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5803a6d8db07c59fff00015f",
    "name": "Strings: starts with",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5886d35d4703f125a6000008",
    "name": "Simple Fun #22: Is Smooth?",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58e09234ca6895c7b300008c",
    "name": "Numerical Palindrome #1.5",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "599da159a30addffd00000af",
    "name": "Collision Detection",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a34da5dee1aae516d00004a",
    "name": "Matrix creation",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Numbers",
      "Basic Language Features"
    ]
  },
  {
    "id": "5c0ae69d5f72394e130025f6",
    "name": "SQL easy regex extraction",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "5f5802bf4c2cc4001a6f859e",
    "name": "Grid index",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "53ad69892a27079b34000bd9",
    "name": "Ackermann Function ",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "54f9173aa58bce9031001548",
    "name": "The takeWhile Function",
    "approved": true,
    "tags": [
      "Algorithms",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "57a04da9e298a7ee43000111",
    "name": "Reverse list",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "57cfd92c05c1864df2001563",
    "name": "Vowels Back",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "58259d9062cfb45e1a00006b",
    "name": "Fun with lists: map",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Higher-order Functions",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5899f1df27926b7d000000eb",
    "name": "Tower of Hanoi",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5a03af9606d5b65ff7000009",
    "name": "User class for Banking System",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5b538734beb8654d6b00016d",
    "name": "Queue time counter",
    "approved": true,
    "tags": [
      "Algorithms",
      "Queues",
      "Arrays",
      "Data Types",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "5b55c49d4a317adff500015f",
    "name": "Points in the circle",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Integers"
    ]
  },
  {
    "id": "53574972e727385ad10002ca",
    "name": "Lambdas as a mechanism for Open/Closed",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lambdas",
      "Functional Programming",
      "Functions",
      "Declarative Programming",
      "Programming Paradigms",
      "Control Flow",
      "Basic Language Features",
      "Design Principles"
    ]
  },
  {
    "id": "5384df88aa6fc164bb000e7d",
    "name": "Don't Eat the Last Cake!",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Strategies",
      "Rules"
    ]
  },
  {
    "id": "557efeb04effce569d000022",
    "name": "makeAcronym",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Methods",
      "Functions",
      "Object-oriented Programming",
      "Control Flow",
      "Basic Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "567de8823fa5eee02100002a",
    "name": "Regexp Basics - is it all whitespace?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Parsing",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "57d6b40fbfcdc5e9280002ee",
    "name": "Spelling Bee",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "587a88a208236efe8500008b",
    "name": "Sum of a Sequence [Hard-Core Version]",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Optimization",
      "Sequences",
      "Arrays",
      "Data Types",
      "Arithmetic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "59564a286e595346de000079",
    "name": "Mobile Display Keystrokes",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59b843b58bcb7766660000f6",
    "name": "Acrostic reader",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "52ece9de44751a64dc0001d9",
    "name": "Bit calculator",
    "approved": true,
    "tags": [
      "Algorithms",
      "Bits",
      "Binary",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "52ed326b8df6540e06000029",
    "name": "Simple elevator",
    "approved": true,
    "tags": [
      "Fundamentals",
      "State Machines",
      "Computational Science",
      "Theoretical Computer Science",
      "Design Patterns"
    ]
  },
  {
    "id": "58999425006ee3f97c00011f",
    "name": "Driving School Series #1 ",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58a6568827f9546931000027",
    "name": "Simple Fun #132: Number Of Carries",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "590f5b4a7bbb3e246000007d",
    "name": "What comes after? ",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a7b3d08fd5777bf6a000121",
    "name": "Working with arrays II (and why your code fails in some katas)",
    "approved": true,
    "tags": [
      "Refactoring",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5ad1e412cc2be1dbfb000016",
    "name": "Missing Alphabet",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Logic",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Games",
      "Puzzles"
    ]
  },
  {
    "id": "5bb804397274c772b40000ca",
    "name": "Stacked Balls - 2D",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "53921994d8f00b93df000bea",
    "name": "Weight of its Contents",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "5734c38da41454b7f700106e",
    "name": "Only one",
    "approved": true,
    "tags": [
      "Algorithms",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "57642a90dee2da8dd3000161",
    "name": "Arguments to Binary addition",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Binary"
    ]
  },
  {
    "id": "57829376a1b8d576640000d6",
    "name": "Trumpness detector",
    "approved": true,
    "tags": [
      "Algorithms",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "589e4d646642d144a90000d8",
    "name": "Running Average",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Closures",
      "Basic Language Features"
    ]
  },
  {
    "id": "58afce23b0e8046a960000eb",
    "name": "Simple Fun #165: Withdraw ",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5ef0456fcd067000321baffa",
    "name": "Negative Connotation",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5fde1ea66ba4060008ea5bd9",
    "name": "⚠️Fusion  Chamber Shutdown⚠️",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "6097a9f20d32c2000d0bdb98",
    "name": "I'm everywhere!",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5453dce502949307cf000bff",
    "name": "Find the Nexus of the Codewars Universe",
    "approved": true,
    "tags": [
      "Algorithms",
      "Hashes",
      "Data Structures"
    ]
  },
  {
    "id": "54f9c37106098647f400080a",
    "name": "The dropWhile Function",
    "approved": true,
    "tags": [
      "Algorithms",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "57029e77005264a3b9000eb5",
    "name": "Nothing special",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "57cc847e58a06b1492000264",
    "name": "Sort and Transform",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Booleans",
      "Data Types",
      "Strings",
      "Numbers",
      "Arrays"
    ]
  },
  {
    "id": "57e90bcc97a0592126000064",
    "name": "Holiday V - SeaSick Snorkelling",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "582e0450fe38013dbc0002d3",
    "name": "Regex Tic Tac Toe Win Checker",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Games",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "58ade2233c9736b01d0000b3",
    "name": "Password generator",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Security"
    ]
  },
  {
    "id": "59414b46d040b7b8f7000021",
    "name": "Turn any word into a beef taco",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5acc3634c6fde760ec0001f7",
    "name": "Adding remainders to a list",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "53a8a476947277a3020001cc",
    "name": "Array Appender",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "56833b76371e86f8b6000015",
    "name": "Regexp basics - parsing prices",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "57a60bad72292d3e93000a5a",
    "name": "Make acronym",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5820176255c3d23f360000a9",
    "name": "Using LATERAL JOIN To Get Top N per Group",
    "approved": true,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "606efc6a9409580033837dfb",
    "name": "Harvest Festival",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Conditional Statements",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "554dc2b88fbafd2e95000125",
    "name": "[Geometry A-2]: Length of a vector",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Dynamic Arrays",
      "Arrays",
      "Functional Programming",
      "Data Types",
      "Declarative Programming",
      "Programming Paradigms",
      "Vectors",
      "Numbers"
    ]
  },
  {
    "id": "55a58505cb237a076100004a",
    "name": "Find the 2nd largest integer in array",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "567b468357ed7411be00004a",
    "name": "Genetic Algorithm Series - #4 Get population and fitnesses",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Genetic Algorithms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "57658f3dedc6f7a751000e7b",
    "name": "Robotic Tattoo Removal",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "57b71a89b69bfc92c7000170",
    "name": "Sum of squares less than some number",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "596f610441372ee0de00006e",
    "name": "Basic DeNico",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Encryption",
      "Algorithms",
      "Cryptography",
      "Logic",
      "Security"
    ]
  },
  {
    "id": "59a1ec603203e862bb00004f",
    "name": "Concatenated Sum",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "59a421985eb5d4bb41000031",
    "name": "Multi Line Task∞: Hello World",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "59b2963132779166d2001018",
    "name": "Multiply the strings in the array",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "5a254114e1ce0ecf6a000168",
    "name": "Progressive Spiral Number Position",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Integers",
      "Data Types",
      "Arithmetic"
    ]
  },
  {
    "id": "536602df5d0266e7b0000d31",
    "name": "Morse Encoding",
    "approved": true,
    "tags": [
      "Algorithms",
      "Bits",
      "Binary",
      "Strings",
      "Data Types",
      "Numbers",
      "Integers",
      "Parsing",
      "Logic"
    ]
  },
  {
    "id": "56bd9e4b0d0b64eaf5000819",
    "name": "Combine objects",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Objects",
      "Data Types",
      "Arrays",
      "Hashes",
      "Data Structures",
      "Dictionary"
    ]
  },
  {
    "id": "572269697297444c570008b9",
    "name": "noobCode 02: TRICKY QUESTIONS ( primitives and operator precedence)",
    "approved": true,
    "tags": [
      "Puzzles",
      "Operators",
      "Fundamentals",
      "Games"
    ]
  },
  {
    "id": "57ed40e3bd793e9c92000fcb",
    "name": "Chicken Sexing",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Games"
    ]
  },
  {
    "id": "585ba6dff59b3cef3f000132",
    "name": "Reducing by rules to get the result",
    "approved": true,
    "tags": [
      "Algorithms",
      "Basic Language Features",
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Logic",
      "Control Flow"
    ]
  },
  {
    "id": "5a2809dbe1ce0e07f800004d",
    "name": "Divisible by previous digit?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Sequences",
      "Arrays",
      "Data Types",
      "Numbers"
    ]
  },
  {
    "id": "5bce125d3bb2adff0d000245",
    "name": "London CityHacker",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5c1ae703ba76f438530000a2",
    "name": "Word Mesh",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "52dc4688eca89d0f820004c6",
    "name": "Whitespace Interpreter",
    "approved": true,
    "tags": [
      "Algorithms",
      "Esoteric Languages",
      "Interpreters",
      "Logic"
    ]
  },
  {
    "id": "573c84bf0addf9568d001299",
    "name": "Yes No Yes No",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "581c6b075cfa83852700021f",
    "name": "Fun with lists: indexOf",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "588fe9eaadbbfb44b70001fc",
    "name": "Zalgo text reader",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "5a0c5b3206d5b696940000b8",
    "name": "Monkey Tennis  - The Aftermath",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Objects"
    ]
  },
  {
    "id": "5458d4d2cbae2a9438000389",
    "name": "Lazily executing a function",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Closures"
    ]
  },
  {
    "id": "545af6d361aa4cd12700135c",
    "name": "Enumerable Magic #22 - First Elements of an Array",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "54bd6b4c956834c9870001a1",
    "name": "Bagels",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "56662e268c0797cece0000bb",
    "name": "SumFibs",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "58bcd27b7288983803000002",
    "name": "Simple Fun #182: Happy \"g\"",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals"
    ]
  },
  {
    "id": "58da7ae9b340a2440500009c",
    "name": "Point in a unit circle",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5925acf31a9825d616000e74",
    "name": "Friday the 13th Part 1",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "595b3f0ad26b2d817400002a",
    "name": "Grill it!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Binary"
    ]
  },
  {
    "id": "59c3e819d751df54e9000098",
    "name": "Consecutive Count",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5f47e79e18330d001a195b55",
    "name": "Bases Everywhere",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Sequences",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5ff6060ed14f4100106d8e6f",
    "name": "Ce*s*r*d Strings",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "55ea5304685da2fb40000018",
    "name": "heggeleggleggo",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "56d8f14cba01a83cdb0002a2",
    "name": "Hands Up",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic"
    ]
  },
  {
    "id": "57de78848a8b8df8f10005b1",
    "name": "How much coffee do you need?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "5971b219d5db74843a000052",
    "name": "Three added Characters",
    "approved": true,
    "tags": [
      "Puzzles",
      "Logic",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5a8bcd980025e99381000099",
    "name": "Array - squareUp b!",
    "approved": true,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Games",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5b76a34ff71e5de9db0000f2",
    "name": "Simple time difference",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "55563df50dda59adf900004d",
    "name": "EAN Validation",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Fundamentals",
      "Mathematics",
      "Numbers",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "56a24b4d9f3671584d000039",
    "name": "Are there doubles?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "5729fa716c7d26dc84000040",
    "name": "Lowercase strings in array",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Strings"
    ]
  },
  {
    "id": "57fb79784e2d0639c9000066",
    "name": "Sorting the Odd way!",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "52336a4436e0b095d8000093",
    "name": "MergeSort \"merge\" function",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "52dffa05467ee54b93000712",
    "name": "Sort sentence pseudo-alphabetically",
    "approved": true,
    "tags": [
      "Algorithms",
      "Sorting",
      "Logic",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "569924899aa8541eb200003f",
    "name": "Quicksum",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "57284d23e81185ae6200162a",
    "name": "Training JS #20: Methods of String object--charAt() charCodeAt() and fromCharCode()",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "588f3e0dfa74475a2600002a",
    "name": "1's, 0's and wildcards",
    "approved": true,
    "tags": [
      "Puzzles",
      "Strings",
      "Data Types",
      "Permutations",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5a8f00745084d718940000c5",
    "name": "GROCERY STORE: Real Price!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "52dca71390c32d8fb900002b",
    "name": "Adding ordinal indicator suffixes to numbers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Strings",
      "Formatting",
      "Logic"
    ]
  },
  {
    "id": "55c11989e13716e35f000013",
    "name": "Adding Binary Numbers",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Binary",
      "Bits"
    ]
  },
  {
    "id": "57a03b8872292dd851000069",
    "name": "The nth smallest integer",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic",
      "Optimization"
    ]
  },
  {
    "id": "5bdcd20478d24e664d00002c",
    "name": "Separate The Wheat From The Chaff",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Basic Language Features",
      "Arrays",
      "Dynamic Arrays",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Vectors",
      "Performance"
    ]
  },
  {
    "id": "5365bb5d5d0266cd010009be",
    "name": "Making Change",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "54566695309908a6590005f1",
    "name": "Cross Product of Vectors",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Dynamic Arrays",
      "Arrays",
      "Functional Programming",
      "Data Types",
      "Declarative Programming",
      "Programming Paradigms",
      "Vectors"
    ]
  },
  {
    "id": "5502ddd734137e90af000f62",
    "name": "Convert Time to String",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "55830eec3e6b6c44ff000040",
    "name": "Odd/Even number of divisors",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Logic",
      "Performance"
    ]
  },
  {
    "id": "5667525f0f157f7a0a000004",
    "name": "80's Kids #5: You Can't Do That on Television",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "57193a349906afdf67000f50",
    "name": "Magic Sum of 3s",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57b56af6b69bfcffb80000d7",
    "name": "Get initials from person name",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57d06663eca260fe630001cc",
    "name": "Olympic Rings",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "5877027d885d4f6144000404",
    "name": "Escape the maze",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59b7ae14bf10a402d40000f3",
    "name": "Twin Prime",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5a62da60d39ec5d947000093",
    "name": "Squares in a Rectangle",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5a9078e24a6b340b340000b8",
    "name": "Simple nearest prime",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5eb34624fec7d10016de426e",
    "name": "Mr Martingale",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5f882dcc272e7a00287743f5",
    "name": "[Code Golf] Return Odd No Matter What",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Basic Language Features",
      "Numbers",
      "Data Types",
      "Integers"
    ]
  },
  {
    "id": "547f1a8d4a437abdf800055c",
    "name": "\"this\" is an other problem",
    "approved": true,
    "tags": [
      "Bugs",
      "Objects",
      "Data Types",
      "Properties",
      "Basic Language Features",
      "Object-oriented Programming",
      "Fundamentals",
      "Programming Paradigms"
    ]
  },
  {
    "id": "55a13556ca4a6d0ab4000003",
    "name": "Lexical this",
    "approved": true,
    "tags": [
      "Fundamentals",
      "ES2015",
      "Babel"
    ]
  },
  {
    "id": "56b861671d36bb0aa8000819",
    "name": "Basics 06: Reversing and Combining Text",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "5785cd91a1b8d5c06e000007",
    "name": "ReOrdering",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "594a1822a2db9e93bd0001d4",
    "name": "Simple Fun #320: Scratch lottery I",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings"
    ]
  },
  {
    "id": "5b04be641839f1a0ab000151",
    "name": "An English Twist on a Japanese Classic",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5b7176768adeae9bc9000056",
    "name": "Element  equals its index",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Search",
      "Logic"
    ]
  },
  {
    "id": "551204b7509063d9ba000b45",
    "name": "Product of the main diagonal of a square matrix.",
    "approved": true,
    "tags": [
      "Algorithms",
      "Graphs",
      "Data Structures",
      "Linear Algebra",
      "Algebra",
      "Mathematics",
      "Logic"
    ]
  },
  {
    "id": "5545f847bd94d050be00011d",
    "name": "Wordsearch",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "581a52d305fe7756720002eb",
    "name": "Is that a real phone number?  (British version)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings",
      "Data Types",
      "Numbers",
      "Integers"
    ]
  },
  {
    "id": "58738d518ec3b4bf95000192",
    "name": "RoboScript #3 - Implement the RS2 Specification",
    "approved": true,
    "tags": [
      "Algorithms",
      "Interpreters",
      "Logic",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings"
    ]
  },
  {
    "id": "59a2a3ba5eb5d4e609000055",
    "name": "Find array",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "604287495a72ae00131685c7",
    "name": "Doubleton number",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Sets",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "586efc2dcf7be0f217000619",
    "name": "String reverse slicing 101",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Basic Language Features"
    ]
  },
  {
    "id": "588a00ad70720f2cd9000005",
    "name": "Simple Web Framework #1: Create  a basic router",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Frameworks",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5a026a9cffe75fbace00007f",
    "name": "Circles in Polygons",
    "approved": true,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5353212e5ee40d4694001114",
    "name": "Array Exchange",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "583710f6b468c07ba1000017",
    "name": "Proof Read ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "588e0f11b7b4a5b373000041",
    "name": "Temperature analysis I",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "595910299197d929a10005ae",
    "name": "Free pizza",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "55679d644c58e2df2a00009c",
    "name": "All that is open must be closed...",
    "approved": true,
    "tags": [
      "Algorithms",
      "Stacks",
      "Arrays",
      "Data Types",
      "Parsing",
      "Logic",
      "Strings",
      "Validation"
    ]
  },
  {
    "id": "558f0553803bc3c4720000af",
    "name": "Find The Duplicated Number in a Consecutive Unsorted List - Tougher Version",
    "approved": true,
    "tags": [
      "Algorithms",
      "Lists",
      "Data Structures",
      "Arrays",
      "Data Types",
      "Sequences"
    ]
  },
  {
    "id": "55d9f257d60c5fd98d00001b",
    "name": "Linked Lists - Remove Duplicates",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Linked Lists",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "577c349edf78c178a1000108",
    "name": "Xmas Tree",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "57b2020eb69bfcbf64000375",
    "name": "Weird words ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "582aafca2d44a4a4560000e7",
    "name": "Keep the Order",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "589577f0d1b93ae32a000001",
    "name": "Simple Fun #88: Sort By Height",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "59126cd3379de6ca5f00019c",
    "name": "Simple Fun #262: Case Unification",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "596343a24489a8b2a00000a2",
    "name": "Fix My Phone Numbers!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5a580064e6be38fd34000147",
    "name": "Create Four Letter Birding Codes from Bird Names",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "53b138b3b987275b46000115",
    "name": "Compare Versions",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Numbers"
    ]
  },
  {
    "id": "56b7771481290cc283000f28",
    "name": "Find last Fibonacci digit [hardcore version]",
    "approved": true,
    "tags": [
      "Algorithms",
      "Sequences",
      "Arrays",
      "Data Types",
      "Parsing",
      "Logic",
      "Strings"
    ]
  },
  {
    "id": "587edac2bdf76ea23500011a",
    "name": "Esolang: Tick",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Interpreters",
      "Algorithms",
      "Logic",
      "Esoteric Languages",
      "Strings",
      "Data Types",
      "Arrays",
      "Turing Machines",
      "Computational Science",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "5906436806d25f846400009b",
    "name": "ASCII Fun #1: X- Shape",
    "approved": true,
    "tags": [
      "Algorithms",
      "Puzzles",
      "Games",
      "ASCII",
      "Character Encodings",
      "Formats"
    ]
  },
  {
    "id": "5b5604e26dc79e6832000101",
    "name": "Inverting a Hash",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "602afedfd4a64d0008eb4e6e",
    "name": "Determine the date by the day number",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "548db0bd1df5bbf29b0000b7",
    "name": "validDate Regex",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "555a7dc335d4c407af00006e",
    "name": "Tea for two",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5672f4e3404d0609ec00000a",
    "name": "Create a frame!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "58488e89cc8feac6cb000941",
    "name": "Remove HTML tags using regexp",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "59de1e2fe50813a046000124",
    "name": "Matching And Substituting",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5eb27d81077a7400171c6820",
    "name": "Graceful Tipping",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "536ce83e2f403659a5000d47",
    "name": "Additionless addition.",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "54b0306c56f22d0bf9000ffb",
    "name": "Decode Morse",
    "approved": true,
    "tags": [
      "Algorithms",
      "Encoding",
      "Logic",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5551dc71101b2cf599000023",
    "name": "Pizza pieces",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Logic"
    ]
  },
  {
    "id": "582f52208278c6be55000067",
    "name": "Round to nearest 0 or 5",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "584d2c19766c2b2f6a00004f",
    "name": "Boolean logic from scratch",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Booleans",
      "Data Types",
      "Logic"
    ]
  },
  {
    "id": "586f61bdfd53c6cce50004ee",
    "name": "Thinkful - Dictionary Drills: User contacts",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5899e054aa1498da6b0000cc",
    "name": "Reverse and Invert",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures",
      "Integers",
      "Data Types",
      "Numbers"
    ]
  },
  {
    "id": "596e91b48c92ceff0c00001f",
    "name": "Words to Hex",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays",
      "Recursion",
      "Algorithms",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "5a043fbef3251a5a2b0002b0",
    "name": "Grandma learning to text",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5ce6cf94cb83dc0020da1929",
    "name": "Uglify Word",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5d0365accfd09600130a00c9",
    "name": "Simple array product",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "54eecc187f9142cc4600119e",
    "name": "HTML Generator",
    "approved": true,
    "tags": [
      "Puzzles",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "57193694938fcdfe3a001dd7",
    "name": "IPv4 Validator",
    "approved": true,
    "tags": [
      "Bugs",
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "581c06b95cfa838603000435",
    "name": "Scraping: Codewars Top 500 Users",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Hashes",
      "Data Structures",
      "Structs",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5881460c780e0dd207000084",
    "name": "Spot the Differences",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "595e9f258b763bc2d2000032",
    "name": "Battle of the characters (Medium)",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "59887207635904314100007b",
    "name": "Closest to Zero",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5ae71f8c2c5061059e000044",
    "name": "Find X",
    "approved": true,
    "tags": [
      "Puzzles",
      "Optimization",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5c7254fcaccda64d01907710",
    "name": "Which filetypes are you using the most?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "5d16af632cf48200254a6244",
    "name": "Strongest even number in an interval",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Optimization"
    ]
  },
  {
    "id": "525a3d6b85a9a47fcf00055a",
    "name": "Calculate Hypotenuse of Right-angled Triangle",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "52996b5c99fdcb5f20000004",
    "name": "Instant Runoff Voting",
    "approved": true,
    "tags": [
      "Algorithms",
      "Rules",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "55695bc4f75bbaea5100016b",
    "name": "Fibonacci Streaming",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "55aea0a123c33fa3400000e7",
    "name": "sort array by last character",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55b2549a781b5336c0000103",
    "name": "Compare powers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Optimization"
    ]
  },
  {
    "id": "55e3f27d5dee52d8dd0000a9",
    "name": "Difference between biggest 2 numbers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "563d54a7329a7af8f4000059",
    "name": "Put a Letter in a Column",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "56b2abae51646a143400001d",
    "name": "Mystery Function",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "581fb63e70ca28d92500000d",
    "name": "SQL Tuning: Function Calls",
    "approved": true,
    "tags": [
      "Refactoring",
      "SQL",
      "Databases",
      "Information Systems",
      "Data",
      "Performance"
    ]
  },
  {
    "id": "59b7571bbf10a48c75000070",
    "name": "String tops",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "59e1b9ce7997cbecb9000014",
    "name": "Cogs",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5314b3c6bb244a48ab00076c",
    "name": "Luck check",
    "approved": true,
    "tags": [
      "Puzzles",
      "Fundamentals",
      "Strings",
      "Data Types",
      "Numbers",
      "Integers",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Rules"
    ]
  },
  {
    "id": "5507309481b8bd3b7e001638",
    "name": "Simple Maths Test",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Loops"
    ]
  },
  {
    "id": "55e529bf6c6497394a0000b5",
    "name": "Alternating Loops",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals"
    ]
  },
  {
    "id": "5682e72eb7354b2f39000021",
    "name": "PatternCraft - State",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Design Patterns",
      "Design Principles"
    ]
  },
  {
    "id": "56d02e6cc6c8b49c510005bb",
    "name": "Find missing numbers",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Arrays",
      "Sequences"
    ]
  },
  {
    "id": "58702c0ca44cfc50dc000245",
    "name": "Pig Atinlay",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5a40c250c5e284a76400008c",
    "name": "Bouncing Ball",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5b277e94b6989dd1d9000009",
    "name": "TV Remote (shift and space)",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "52dd72494367608ac1000416",
    "name": "Prime Numbers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "544d114f84e41094a9000439",
    "name": "Power of 4",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "551e51155ed5ab41450006e1",
    "name": "Sum Times Tables",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "564d398e2ecf66cec00000a9",
    "name": "Which triangle is that?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Logic"
    ]
  },
  {
    "id": "5681cf0be812b41721000034",
    "name": "Remove the noise from the string",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "56f399b59821793533000683",
    "name": "Sort deck of cards",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic",
      "Lists",
      "Data Structures",
      "Sorting"
    ]
  },
  {
    "id": "5866c6cf442e3f16f9000089",
    "name": "All Star Code Challenge #24",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "588a7d45019c42be61000009",
    "name": "Interweaving strings and removing digits",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59b710ed70a3b7dd8f000027",
    "name": "Possibilities Array",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Sequences"
    ]
  },
  {
    "id": "5a40fc7ce1ce0e34440000a3",
    "name": "Numbers with d occurences of digit d",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5b203de891c7469b520000b4",
    "name": "Player Contact Manager",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Arrays",
      "Data Types",
      "Hashes",
      "Data Structures",
      "Objects"
    ]
  },
  {
    "id": "5b5e0ef007a26632c400002a",
    "name": "Sub-array elements sum",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Lists",
      "Data Structures",
      "Dynamic Arrays",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Vectors",
      "Arithmetic",
      "Mathematics",
      "Logic",
      "Numbers",
      "Integers",
      "Map/Reduce",
      "Maps"
    ]
  },
  {
    "id": "526e8de0512511429e000006",
    "name": "Trim a String",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "52cd0d600707d0abcd0003eb",
    "name": "Exercise in Summing",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Numbers",
      "Integers",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Aggregations"
    ]
  },
  {
    "id": "530265044b7e23379d00076a",
    "name": "Point in Polygon",
    "approved": true,
    "tags": [
      "Algorithms",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "54e2213f13d73eb9de0006d2",
    "name": "Pair Zeros",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types",
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "56d9b46113f38864b8000c5a",
    "name": "Thinking & Testing : Math of Primary School",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5856c5f7f37aeceaa100008e",
    "name": "Christmas baubles on the tree",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5894017082b9fb62c50000df",
    "name": "Simple Fun #69: Are Equally Strong?",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58983deb128a54b530000be6",
    "name": "Braces status",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic",
      "Arrays",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "58c21c4ff130b7cab400009e",
    "name": " Simple Fun #195: Guess Hat Color",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "590fd3220f05b4f1ad00007c",
    "name": "Simple Fun #253: Cool String",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59245b3c794d54b06600002a",
    "name": "Bleatrix Trotter (The Counting Sheep)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "595bbea8a930ac0b91000130",
    "name": "1RM Calculator",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "55084d3898b323f0aa000546",
    "name": "Second Variation on Caesar Cipher",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "550cc572b9e7b563be00054f",
    "name": "Scheduling (Shortest Job First or SJF)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Scheduling",
      "Logic",
      "Utilities",
      "Queues",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "55c9172ee4bb15af9000005d",
    "name": "Pentabonacci",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Data Structures"
    ]
  },
  {
    "id": "570cbe88f616a8f4f50011ac",
    "name": "Bob's Short Forms",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5733d6c2d780e20173000baa",
    "name": "Training JS #33: methods of Math---max() min() and abs()",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58644e8ddf95f81a38001d8d",
    "name": "Make a square box!",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Arrays",
      "Logic"
    ]
  },
  {
    "id": "59530d2401d6039f8600001f",
    "name": "Number of measurements to spot the counterfeit coin",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Logic",
      "Interview Questions"
    ]
  },
  {
    "id": "599d973255342a0ce400009b",
    "name": "Odd + Even = Odd? Prove it!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5a28cf591f7f7019a80000de",
    "name": "Simple number sequence",
    "approved": true,
    "tags": [
      "Algorithms",
      "Sequences",
      "Arrays",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "5a2e8c0955519e54bf0000bd",
    "name": "Check digit",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Numbers",
      "Basic Language Features",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "54acd76f7207c6a2880012bb",
    "name": "Decode the Morse code, for real",
    "approved": true,
    "tags": [
      "Algorithms",
      "Decoding",
      "Logic"
    ]
  },
  {
    "id": "54bb6ee72c4715684d0008f9",
    "name": "Multiples of 3 and 5 redux",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "5735e39313c205fe39001173",
    "name": "Training JS #37: Unlock new weapon---RegExp Object",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "57a05e0172292dd8510001f7",
    "name": "Sentence to words",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58e3ea29a33b52c1dc0000c0",
    "name": "Geometry Basics: Dot Product in  3D",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "58f6000bc0ec6451960000fd",
    "name": "Selective Array Reversing",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types",
      "Numbers"
    ]
  },
  {
    "id": "5318f00b31b30925fd0001f8",
    "name": "Formatting a number as price",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Formatting",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Decimals",
      "Utilities"
    ]
  },
  {
    "id": "53c93982689f84e321000d62",
    "name": "Prime number decompositions",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "53d628de83db278fb1000710",
    "name": "Re-open class",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Classes",
      "Basic Language Features",
      "Dynamic Programming"
    ]
  },
  {
    "id": "557a2c136b19113912000010",
    "name": "reverseIt",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Methods",
      "Functions",
      "Object-oriented Programming",
      "Control Flow",
      "Basic Language Features",
      "Programming Paradigms",
      "Data Types"
    ]
  },
  {
    "id": "5630d1747935943168000013",
    "name": "Tally it up",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "58e16de3a312d34d000000bd",
    "name": "Ranking System",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Ranking",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5a90c9ecb171012b47000077",
    "name": "Thinking & Testing: A * B?",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "567c9f56d83baeed8300000f",
    "name": "Regexp Basics - is it a hexadecimal number?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "567e8f7b4096f2b4b1000005",
    "name": "Regexp Basics - is it a eight bit unsigned number?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "57a4a3e653ba3346bc000810",
    "name": "Describe a list ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "585eaef9851516fcae00004d",
    "name": "Naughty or Nice?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Hacking Holidays",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5866a58b9cbc02c4f8000cac",
    "name": "21 Sticks",
    "approved": true,
    "tags": [
      "Algorithms",
      "Games",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5922543bf9c15705d0000020",
    "name": "Isomorphism",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5a33ec23ee1aaebecf000130",
    "name": "How many feelings?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Basic Language Features"
    ]
  },
  {
    "id": "605f5d33f38ca800322cb18f",
    "name": "Tap Code Translation",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types",
      "Cryptography",
      "Security"
    ]
  },
  {
    "id": "54fb853b2c8785dd5e000957",
    "name": "Chain me",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55d8dc4c8e629e55dc000068",
    "name": "Trigrams",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Search",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "55dd5386575839a74f0000a9",
    "name": "Linked Lists - Alternating Split",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Linked Lists",
      "Lists"
    ]
  },
  {
    "id": "56c2acc8c44a3ad6e400050a",
    "name": "Monkey's MATH 01:  How many \"ZERO\"s?",
    "approved": true,
    "tags": [
      "Puzzles",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals"
    ]
  },
  {
    "id": "583c5469977933319f000403",
    "name": "The maximum and minimum difference -- Simple version",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5844e0890d3bedc5c5000e54",
    "name": "File Path Operations",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "59473c0a952ac9b463000064",
    "name": "Alphabet war -  Wo lo loooooo priests join the war",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5a21e090f28b824def00013c",
    "name": "Swap items in a dictionary",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Types",
      "Arrays",
      "Logic"
    ]
  },
  {
    "id": "5ab363ff6a176b29880000dd",
    "name": "Hex Hash Sum",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Security"
    ]
  },
  {
    "id": "545b35e882e55d9c6400007a",
    "name": "Enumerable Magic #31 - Array to Hash",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Hashes",
      "Data Structures"
    ]
  },
  {
    "id": "55b8c0276a7930249e00003c",
    "name": "International Morse Code Encryption",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Encoding",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "566091b73e119a073100003a",
    "name": "80's Kids #1: How Many Licks Does it Take?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "581214d54624a8232100005f",
    "name": "Change two-dimensional array",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59884371d1d8d3d9270000a5",
    "name": "Nut Farm",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "598ee7b6ec6cb90dd6000061",
    "name": "Count Repeats",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "599f403119afacf9f1000051",
    "name": "nextPerfectSquare",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59da47fa27ee00a8b90000b4",
    "name": "Non-even substrings",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5ab3495595df9ec78f0000b4",
    "name": "Binary to string",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Binary",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5b1b27c8f60e99a467000041",
    "name": "Anagram difference",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5c784110bfe2ef660cb90369",
    "name": "Ranking position",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "525f00ec798bc53e8e00004c",
    "name": "Secret knock",
    "approved": true,
    "tags": [
      "Puzzles",
      "Security"
    ]
  },
  {
    "id": "53a20af2e0afd3e2cd000333",
    "name": "Say \"Hello World\" JS Style",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "545f05676b42a0a195000d95",
    "name": "Rank Vector",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Sorting",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "587c0138110b20624e000253",
    "name": "Esolang: MiniBitMove",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Interpreters",
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types",
      "Arrays",
      "Bits",
      "Binary"
    ]
  },
  {
    "id": "5936371109ca68fe6900000c",
    "name": "Simple Fun #319: Number And IP Address",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59922ce23bfe2c10d7000057",
    "name": "FIRE and FURY",
    "approved": true,
    "tags": [
      "Algorithms",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5a726f16373c2ee6c60000db",
    "name": "Hide password from jdbc url",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5b6b128783d648c4c4000129",
    "name": "Smallest Product",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5b6db1acb118141f6b000060",
    "name": "Let's Recycle!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Objects"
    ]
  },
  {
    "id": "5bb148b840196d1be50000b1",
    "name": "Word to initial number",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Numbers"
    ]
  },
  {
    "id": "517b2bcf8557c200b8000015",
    "name": "Ninja vs Samurai: Attack + Block",
    "approved": true,
    "tags": [
      "Bugs",
      "Prototype-based Programming",
      "Programming Paradigms",
      "Prototypes"
    ]
  },
  {
    "id": "51e000d070fe4414000003f0",
    "name": "Time-like string format",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Formatting",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5268956c10342831a8000135",
    "name": "Binary Tree Traversal",
    "approved": true,
    "tags": [
      "Algorithms",
      "Binary Search Trees",
      "Trees",
      "Binary",
      "Data Structures",
      "Traversal",
      "Logic",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "53223653a191940f2b000877",
    "name": "Determining if a graph has a solution",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Theoretical Computer Science",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "55de8eabd9bef5205e0000ba",
    "name": "Emirps",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Structures"
    ]
  },
  {
    "id": "582c1092306063791c000c00",
    "name": "The position of a digital string in a infinite digital string",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5a84d485742ba347b90006b7",
    "name": "List of Presents",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Lists",
      "Data Structures",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5158bfce931c51b69b000001",
    "name": "Extract the IDs from the data set",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Mapping",
      "Logic"
    ]
  },
  {
    "id": "557cffec8c3e8e55cc00010f",
    "name": "Count number of zeros from 1 to N",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "55b195a69a6cc409ba000053",
    "name": "Total increasing or decreasing numbers up to a power of 10",
    "approved": true,
    "tags": [
      "Puzzles",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5811aef3acdf4dab5e000251",
    "name": "Mixbonacci",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Sequences",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5912ded3f9f87fd271000120",
    "name": "Guess the Word: Count Matching Letters",
    "approved": true,
    "tags": [
      "Puzzles",
      "Strings",
      "Data Types",
      "Games"
    ]
  },
  {
    "id": "5930d8a4b8c2d9e11500002a",
    "name": "Digital cypher vol 3 - missing key",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Encryption",
      "Algorithms",
      "Cryptography",
      "Logic",
      "Security"
    ]
  },
  {
    "id": "597eeb0136f4ae84f9000001",
    "name": "Parse bank account number",
    "approved": true,
    "tags": [
      "Puzzles",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "59c6fa6972851e8959000067",
    "name": "zero-balanced Array",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5d65fbdfb96e1800282b5ee0",
    "name": "Happy Birthday",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5301329926d12b90cc000908",
    "name": "Cumulative Triangle",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Geometry",
      "Algebra",
      "Mathematics"
    ]
  },
  {
    "id": "545aefb461aa4c3638001177",
    "name": "Enumerable Magic #18 - All Items Except the First...",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "567e8dbb9b6f4da558000030",
    "name": "Regexp Basics - is it a six bit unsigned number?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "57262ca48565846f33001365",
    "name": "Reverse a singly-linked list",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5905871c00881d0e85000015",
    "name": "Mix Fruit Juice ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Map/Reduce",
      "Algorithms",
      "Logic",
      "Conditional Statements",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "596ddaccdd42c1cf0e00005c",
    "name": "Operations with sequence",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Sequences",
      "Arrays",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5a1c28f9c9fc0ef2e900013b",
    "name": "Return pyramids",
    "approved": true,
    "tags": [
      "Puzzles",
      "Strings",
      "Data Types",
      "Algorithms",
      "Logic",
      "ASCII",
      "Character Encodings",
      "Formats"
    ]
  },
  {
    "id": "529a92d9aba78c356b000353",
    "name": "Algebraic Lists",
    "approved": true,
    "tags": [
      "Algorithms",
      "Lists",
      "Data Structures",
      "Applicative Programming",
      "Programming Paradigms",
      "Algebra",
      "Mathematics",
      "Logic",
      "Mapping"
    ]
  },
  {
    "id": "55f4e56315a375c1ed000159",
    "name": "Numbers that are a power  of their  sum of  digits",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Sorting",
      "Data Structures"
    ]
  },
  {
    "id": "5637ead70013386e30000027",
    "name": "Multiplication - Generators #2",
    "approved": true,
    "tags": [
      "Fundamentals",
      "ES2015",
      "Babel"
    ]
  },
  {
    "id": "5714eb80e1bf814e53000c06",
    "name": "How much hex is the fish",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Dictionary",
      "Data Structures"
    ]
  },
  {
    "id": "5821ee33ec380124f1000013",
    "name": "Dealing With Messy Data",
    "approved": true,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data",
      "Reporting"
    ]
  },
  {
    "id": "585a29183d357b31f700023f",
    "name": "Thinkful - String Drills: Jedi name",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5993c1d917bc97d05d000068",
    "name": "Regular Expression for Binary Numbers Divisible by n",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Puzzles",
      "Games",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5d2d0d34bceae80027bffddb",
    "name": "Sort Strings by Most Contiguous Vowels",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "52a723508a4d96c6c90005ba",
    "name": "99 Bottles of Beer",
    "approved": true,
    "tags": [
      "Algorithms",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "546937989c0b6ab3c5000183",
    "name": "Dbftbs Djqifs",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Encryption",
      "Algorithms",
      "Cryptography",
      "Logic",
      "Security"
    ]
  },
  {
    "id": "5470ae03304c1250b4000e57",
    "name": "Re-organize the weapons!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Dictionary",
      "Data Structures"
    ]
  },
  {
    "id": "54a6c6e7478d8ee02d000cd9",
    "name": "Java Functional Programming (Part 2: Multiline Functions)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Lambdas",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "560e80734267381a270000a2",
    "name": "Binary operations #1",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "577e9095d648a15b800000d4",
    "name": "Evaluate a postfix expression",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "57a23c2acf1fa514d0001034",
    "name": "Who Took The Car Key?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Binary"
    ]
  },
  {
    "id": "58373ba351e3b615de0001c3",
    "name": "The Book of Mormon",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "5837fd7d44ff282acd000157",
    "name": "Count the days!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "585c50e75d0930e6a7000336",
    "name": "Coprime Validator",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "588453ea56daa4af920000ca",
    "name": "Simple Fun #9: Array Packing",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "589d36bbb6c071f7c20000f7",
    "name": "Simple Fun #116: Prime String",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "59ec2d112332430ce9000005",
    "name": "Simple  division",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a3357ae8058425bde002674",
    "name": "Iterative Rotation Cipher",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Ciphers",
      "Cryptography",
      "Logic",
      "Security",
      "Encryption"
    ]
  },
  {
    "id": "5a405ba4e1ce0e1d7800012e",
    "name": "Custom Christmas Tree",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "52f3bb2095d6bfeac2002196",
    "name": "Valid string",
    "approved": true,
    "tags": [
      "Algorithms",
      "Dictionary",
      "Data Structures",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "55cd4ce59382498cbd000080",
    "name": "Class conundrum - Bug Fixing #7",
    "approved": true,
    "tags": [
      "Bugs",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Fundamentals",
      "Programming Paradigms",
      "ES2015",
      "Babel"
    ]
  },
  {
    "id": "56d6b7e43e8186c228000637",
    "name": "Colour Association",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Objects",
      "Data Types",
      "Maps",
      "Data Structures",
      "Map/Reduce",
      "Algorithms",
      "Logic",
      "Hashes"
    ]
  },
  {
    "id": "5747fcfce2fab91f43000697",
    "name": "Sort by Example",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Sorting",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "57ce0c634001a5f3c7000006",
    "name": "Date Format Validation",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "580a1a4af195dbc9ed00006c",
    "name": "Equalize the array!",
    "approved": true,
    "tags": [
      "Puzzles",
      "Fundamentals",
      "Games",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "58ddffda929dfc2cae0000a5",
    "name": "Send in the Clones",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "59971e64bfccc70748000068",
    "name": "Sequence convergence",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5a2d70a6f28b821ab4000004",
    "name": "Zero Terminated Sum",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a3f2925b6cfd78fb0000040",
    "name": "Simple reversed parenthesis",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5800b6568f7ddad2c10000ae",
    "name": "Simplify the number!",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58029cc9af749f80e3001e34",
    "name": "New £5 notes collectors!",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "584ebd7a044a1520f20000d5",
    "name": "Range function",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Ranges",
      "Basic Language Features",
      "Utilities",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "59dbab4d7997cb350000007f",
    "name": "Check if two words are isomorphic to each other",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5b1956a7803388baae00003a",
    "name": "CamelCase to underscore",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "5b5e0c0d83d64866bc00001d",
    "name": "Say Me Please Operations",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Strings",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "51f9d3db4095e07f130001ee",
    "name": "Compose functions (T Combinator)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Composition",
      "Design Principles",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "540954232a3259755d000039",
    "name": "Friday the 13ths",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types",
      "Strings",
      "Basic Language Features"
    ]
  },
  {
    "id": "545cff101288c1d2da0006fb",
    "name": "Showing X to Y of Z Products.",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "54bd06539f075cece0000feb",
    "name": "Tick Toward",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "55da347204760ba494000038",
    "name": "Linked Lists - Move Node",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Linked Lists",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "564ab935de55a747d7000040",
    "name": "Not all but sometimes all",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Objects"
    ]
  },
  {
    "id": "5702f077e55d30a7af000115",
    "name": "ScholarStem: Unit 6- Baby count! ",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5782b5ad202c0ef42f0012cb",
    "name": "Simple Encryption #2 - Index-Difference",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Cryptography",
      "Security",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "582c42e0f000e54a7d000086",
    "name": "Dan's great power generator",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58ff1c8b13b001a5a50005b4",
    "name": "Sort My Animals",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures",
      "Objects",
      "Data Types",
      "Sorting",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5a1ebc2480171f29cf0000e5",
    "name": "Sort rectangles and circles by area II",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a2cb4bff28b820c33000082",
    "name": "Whose bicycle?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Objects",
      "Data Types",
      "Numbers",
      "Basic Language Features"
    ]
  },
  {
    "id": "531489f2bb244a5b9f00077e",
    "name": "Undo/Redo",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "53417de006654f4171000587",
    "name": "Simple card game",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Games",
      "Logic",
      "Rules"
    ]
  },
  {
    "id": "5819081d056d4bdd410004f8",
    "name": "Fun with lists: countIf",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Higher-order Functions",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5827e2efc983ca6f230000e0",
    "name": "Complete the table pattern",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5893fa478a8a23ef82000031",
    "name": "Simple Fun #68: Palindrome Rearranging",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58d5e6c114286c8594000027",
    "name": "Array Manipulation",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Numbers",
      "Binary Search Trees",
      "Trees",
      "Binary",
      "Data Structures"
    ]
  },
  {
    "id": "5932d5c160ee35745d0000d6",
    "name": "Equals without \"=\"",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5a30e7e9c5e28454790000c1",
    "name": "The Spider and the Fly (Jumping Spider)",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5f5da7a415fbdc0001ae3c69",
    "name": "Right in the Centre",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "51f42b1de8f176db5a0002ae",
    "name": "Sort arrays - 3",
    "approved": true,
    "tags": [
      "Algorithms",
      "Sorting",
      "Logic",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5307ff5b588fe6d7000000a5",
    "name": "Once",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Utilities",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "535bfa2ccdbf509be8000113",
    "name": "First n Prime Numbers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Fundamentals",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5469e0798a3502f4a90005c9",
    "name": "Rotate Array",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "546d5028ddbcbd4b8d001254",
    "name": "Number of integer partitions",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "54f9cba3c417224c63000872",
    "name": "Monty Hall Problem",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55a710b462afc49a540000b9",
    "name": "More than Zero?",
    "approved": true,
    "tags": [
      "Bugs"
    ]
  },
  {
    "id": "582cb3a637c5583f2200005d",
    "name": "Disagreeable ascii",
    "approved": true,
    "tags": [
      "Fundamentals",
      "ASCII",
      "Character Encodings",
      "Formats",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "59175441e76dc9f9bc00000f",
    "name": "Ideal electron distribution",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "5a3af5b1ee1aaeabfe000084",
    "name": "Sums of Perfect Squares",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "545b377982e55d648e00008b",
    "name": "Enumerable Magic #32 - Zip Up!",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5631ac5139795b281d00007d",
    "name": "Urban Dictionary",
    "approved": true,
    "tags": [
      "Algorithms",
      "Objects",
      "Data Types"
    ]
  },
  {
    "id": "56743fd3a12043ffbb000049",
    "name": "80's Kids #7: She's a Small Wonder",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57729a09914da60e17000329",
    "name": "What time is it?",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "579735144be912fd220001d8",
    "name": "Object-Oriented PHP #1 - Classes, Public Properties and Methods",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Classes",
      "Basic Language Features"
    ]
  },
  {
    "id": "58de819eb76cf778fe00005c",
    "name": "Numerical Palindrome #2 ",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a1e6323ffe75f71ae000026",
    "name": "Simple Fun #384: Is Turing's Equation?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "52b74e0936d582d9210005ff",
    "name": "esreveR gnirtS",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Prototypes"
    ]
  },
  {
    "id": "555f43d8140a6df1dd00012b",
    "name": "Cartesian coordinates from degree angle",
    "approved": true,
    "tags": [
      "Puzzles",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Geometry",
      "Algebra"
    ]
  },
  {
    "id": "5571d9fc11526780a000011a",
    "name": "The builder of things",
    "approved": true,
    "tags": [
      "Algorithms",
      "Metaprogramming",
      "Programming Paradigms",
      "Advanced Language Features",
      "Fundamentals",
      "Domain Specific Languages",
      "Declarative Programming"
    ]
  },
  {
    "id": "5596700a386158e3aa000011",
    "name": "Binary Pyramid 101",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5729c30961cecadc4f001878",
    "name": "Sorted Union",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "573156709a231dcec9000ee8",
    "name": "Training JS #30: methods of arrayObject---reduce() and reduceRight()",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5899a4b1a6648906fe000113",
    "name": "Follow that Spy",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "59afff65f1c8274f270020f5",
    "name": "Spinning Rings",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59eb28fb0a2bffafbb0000d6",
    "name": "Sort by binary ones",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "5d7c7697e8ad48001e642964",
    "name": "Find the Speedcuber's times!",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5d9f95424a336600278a9632",
    "name": "Sum of powers of 2",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "547202bdf7587835d9000c46",
    "name": "Five Fundamental Monads",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Monads",
      "Data Structures",
      "Functional Programming"
    ]
  },
  {
    "id": "54ad586282bc65b7ec000182",
    "name": "Convert a Number to money!!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "564fa92d1639fbefae00009d",
    "name": "Find factors of a number",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Sorting",
      "Algorithms",
      "Logic",
      "Arrays"
    ]
  },
  {
    "id": "57040e445a726387a1001cf7",
    "name": "The fusc function -- Part 2",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "57ed7214f670e99f7a000c73",
    "name": "Ski Jump",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "58a6af7e8c08b1e9c40001c1",
    "name": "Simple Fun #141: Hamming Distance",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58c47a95e4eb57a5b9000094",
    "name": "What's Your Poison?",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Algorithms",
      "Logic",
      "Bits",
      "Binary",
      "Interview Questions",
      "Fundamentals"
    ]
  },
  {
    "id": "594adadee075005308000122",
    "name": "Even and Odd !",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5966f6343c0702d1dc00004c",
    "name": "You Got Change?",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59de469cfc3c492da80000c5",
    "name": "Compress sentences",
    "approved": true,
    "tags": [
      "Algorithms",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "5a903c0557c562cd7500026f",
    "name": "Simple arithmetic progression",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "53046ceefe87e4905e00072a",
    "name": "Palindrome for your Dome",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "String Formatting",
      "Formatting",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "545aadb361aa4cafcb000e09",
    "name": "Enumerable Magic #8 - Find the Index of the Matching Item",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "545af54961aa4ca58e001334",
    "name": "Enumerable Magic #21 - Filter that Array!",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55d2603d506a40e162000056",
    "name": "Reducing Problems - Bug Fixing #8",
    "approved": true,
    "tags": [
      "Bugs",
      "Map/Reduce",
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5682e809386707366d000024",
    "name": "PatternCraft - Strategy",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Design Patterns",
      "Design Principles"
    ]
  },
  {
    "id": "56b58d11e3a3a7cade000792",
    "name": "Sexy Primes <3",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Conditional Statements",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "57238766214e4b04b8000011",
    "name": "Simple Change Machine ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "587d7544f1be39c48c000109",
    "name": "Save the Spice Harvester (Dune Universe)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "58ca77b9c0d640ecd2000b1e",
    "name": "Multiples and Digit Sums",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arithmetic",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "58e3e62f20617b6d7700120a",
    "name": "Geometry Basics: Triangle Perimeter  in 2D",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "592645498270ccd7950000b4",
    "name": "Simple Fun #305: Typist",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "593f50f343030bd35e0000c6",
    "name": "Ciphers #1 - The  01 Cipher",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5ad6266b673f2f067b000004",
    "name": "Possibilities of throwing a coin n times",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Statistics",
      "Data",
      "Sorting",
      "Trees",
      "Data Structures",
      "Permutations",
      "Performance"
    ]
  },
  {
    "id": "5f6d120d40b1c900327b7e22",
    "name": "Leaderboard climbers",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "55847fcd3e7dadc9f800005f",
    "name": "Binary Tree Compare",
    "approved": true,
    "tags": [
      "Algorithms",
      "Binary Search Trees",
      "Trees",
      "Binary",
      "Data Structures"
    ]
  },
  {
    "id": "558ffec0f0584f24250000a0",
    "name": "Drunk friend",
    "approved": true,
    "tags": [
      "Puzzles",
      "Strings",
      "Data Types",
      "Algorithms",
      "Logic",
      "Decoding"
    ]
  },
  {
    "id": "57c6c2e1f8392d982a0000f2",
    "name": "Histogram - V1",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "58881b859ab1e053240000cc",
    "name": "Simple Fun #41:  Elections Winners",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58a3fa665973c2a6e80000c4",
    "name": "Challenge Fun #10: Integer Square Root",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "59e270da7997cba3d3000041",
    "name": "Zero-plentiful Array",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a6225e5d8e145b540000127",
    "name": "Common array elements",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Performance"
    ]
  },
  {
    "id": "525a566985a9a47bc8000670",
    "name": "Rotate an array matrix",
    "approved": true,
    "tags": [
      "Algorithms",
      "Graphs",
      "Data Structures",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5267e5827526ea15d8000708",
    "name": "Pete, the baker (part 2)",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "534eb5ad704a49dcfa000ba6",
    "name": "Hanoi record",
    "approved": true,
    "tags": [
      "Puzzles",
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Mathematics"
    ]
  },
  {
    "id": "535bea76cdbf50281a00004c",
    "name": "8 towers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "54bd79a7956834e767001357",
    "name": "Psychic",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "55606aeebf1f0305f900006f",
    "name": "Convert Integer to Binary",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Binary",
      "Numbers",
      "Data Types",
      "Integers"
    ]
  },
  {
    "id": "558ac25e552b51dbc60000c3",
    "name": "Complete The Pattern #12",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "565ce4ab24ef4aee6a000074",
    "name": "String Matcher",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5714803d2817ffce17000a35",
    "name": "Coding 3min : A*B=C",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57a73e697cb1f31dd70000d2",
    "name": "Chinese Zodiac",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "57eeb8cc5f79f6465a0015c1",
    "name": "KISS - Keep It Simple Stupid",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "581bc0629ad9ff9873000316",
    "name": "Route Calculator",
    "approved": true,
    "tags": [
      "Algorithms",
      "Recursion",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Higher-order Functions",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Classes",
      "Object-oriented Programming"
    ]
  },
  {
    "id": "58659b1261cbfc8bfc00020a",
    "name": "Thinkful - Logic Drills: Graceful addition",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Control Flow",
      "Basic Language Features",
      "Exception Handling"
    ]
  },
  {
    "id": "58ef87dc4db9b24c6c000092",
    "name": "Sectional Array Sort",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Sorting",
      "Logic",
      "Data Structures"
    ]
  },
  {
    "id": "5919f3bf6589022915000023",
    "name": "Rotate matrix counter -  clockwise N - times!",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "59b44d00bf10a439dd00006f",
    "name": "Sum it continuously",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "5a8fbe73373c2e904700008c",
    "name": "Simple rotated palindromes",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5a91e0793e9156ccb0003f6e",
    "name": "Name to Matrix",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "5ffc226ce1666a002bf023d2",
    "name": "Game Hit the target",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Games",
      "Graphs",
      "Data Structures",
      "Arrays",
      "Data Types",
      "Strings",
      "Booleans"
    ]
  },
  {
    "id": "6071ef9cbe6ec400228d9531",
    "name": "Dot Calculator",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "545ac03985166a70ed000ec5",
    "name": "Enumerable Magic #14 - Map that Array!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Maps",
      "Data Structures",
      "Map/Reduce",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5512ec4bbe2074421d00028c",
    "name": "Functional streams",
    "approved": true,
    "tags": [
      "Algorithms",
      "Data Types",
      "Streams",
      "IO",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "58184387d14fc32f2b0012b2",
    "name": "Floating-point Approximation (I)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5926624c9b424d10390000bf",
    "name": "Sum Even Fibonacci Numbers",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59d0ee709f0cbcf65400003b",
    "name": "Address Book by State",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5a420163b6cfd7cde5000077",
    "name": "Ranking NBA teams",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5ac54bcbb925d9b437000001",
    "name": "Find the Middle of the Product",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Basic Language Features"
    ]
  },
  {
    "id": "5b2f6ad842b27ea689000082",
    "name": "Smooth numbers",
    "approved": true,
    "tags": [
      "Puzzles",
      "Numbers",
      "Data Types",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5b83c1c44a6acac33400009a",
    "name": "Simple string division",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5da9973d06119a000e604cb6",
    "name": "Counting Valleys",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5e2c7639b5d728001489d910",
    "name": "Product ID from URL",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "52195c9bb576caf14200007f",
    "name": "Adding useful functional functionality to JavaScript arrays  ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Higher-order Functions",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "523c7fbb0d47a759580000e2",
    "name": "Simple Time Bomb",
    "approved": true,
    "tags": [
      "Puzzles",
      "Reverse Engineering",
      "Security",
      "Games"
    ]
  },
  {
    "id": "52a1feca5ec9c508d10006f8",
    "name": "Fluent Calculator",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Metaprogramming",
      "Programming Paradigms",
      "Advanced Language Features",
      "Arithmetic"
    ]
  },
  {
    "id": "53b2ff49b82af296ce001139",
    "name": "Array.prototype.reverse()",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Prototypes",
      "Methods",
      "Functions",
      "Object-oriented Programming",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Programming Paradigms"
    ]
  },
  {
    "id": "555b1890a75b930e63000023",
    "name": "Find all possible number combos that sum to a number",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Mathematics",
      "Logic",
      "Numbers",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "5682e545fb263ecf7b000069",
    "name": "PatternCraft - Decorator",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Design Patterns",
      "Design Principles"
    ]
  },
  {
    "id": "57bf599f102a39bb1e000ae5",
    "name": "Fibonacci's FizzBuzz",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "586669a8442e3fc307000048",
    "name": "Sortable Shapes",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Sorting",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Design Patterns",
      "Design Principles",
      "Objects",
      "Data Types"
    ]
  },
  {
    "id": "5890579a34a7d44f3b00009e",
    "name": "Number Manipulation I (Easy)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "58ad388555bf4c80e800001e",
    "name": "Simple Fun #160: Cut The Ropes",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59128363e5bc24091a00006f",
    "name": "Simple Fun #265: The Janitor And His Mop",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5a05fe8a06d5b6208e00010b",
    "name": "Sequence to 1",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a9a70cf5084d74ff90000f7",
    "name": "Not prime numbers",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Performance"
    ]
  },
  {
    "id": "530045e3c7c0f4d3420001af",
    "name": "Conway's Look and Say - Generalized",
    "approved": true,
    "tags": [
      "Algorithms",
      "Encoding",
      "Logic",
      "Numbers",
      "Data Types",
      "Integers",
      "Rules",
      "Sequences",
      "Arrays"
    ]
  },
  {
    "id": "5491689aff74b9b292000334",
    "name": "Repeated  Substring",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "558445a88826e1376b000011",
    "name": "Calculate Julie's Age",
    "approved": true,
    "tags": [
      "Algorithms",
      "Algebra",
      "Mathematics",
      "Logic"
    ]
  },
  {
    "id": "57dd79bff6df9b103b00010f",
    "name": "Fun with trees: is perfect",
    "approved": true,
    "tags": [
      "Algorithms",
      "Trees",
      "Data Structures",
      "Recursion",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science",
      "Binary Search Trees",
      "Binary"
    ]
  },
  {
    "id": "57e35f1bc763b8ccce000038",
    "name": "Strong password?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "587f1e1f39d444cee6000ad4",
    "name": "Thinkful - Object Drills: Vectors",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Objects",
      "Data Types"
    ]
  },
  {
    "id": "5896616336c4bad1c50000d7",
    "name": "Area of an annulus",
    "approved": true,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "59321f29a010d5aa80000066",
    "name": "Help  Mrs Jefferson",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Arrays",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Control Flow",
      "Basic Language Features",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "52ecde1244751a799b00018a",
    "name": "Sqrt approximation",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "544047f0cf362503e000036e",
    "name": "Find heavy ball - level: novice",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Logic"
    ]
  },
  {
    "id": "54582f970a80d2ca46000f25",
    "name": "greetings with First Name AND Last Name",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56f54d45af5b1fec4b000cce",
    "name": "Valid HK Phone Number",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "56f5594a575d7d3c0e000ea0",
    "name": "Conference Traveller",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Basic Language Features",
      "Arrays",
      "Data Types",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "588425ee4e8efb583d000088",
    "name": "Simple Fun #4: Phone Call",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58846d50f54f021d90000012",
    "name": "Simple Fun #17: Rounders",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5921c0bc6b8f072e840000c0",
    "name": "Sequence classifier",
    "approved": true,
    "tags": [
      "Algorithms",
      "Sequences",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5a6b24d4e626c59d5b000066",
    "name": "Square sums (simple)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5bed96b9a68c19d394000b1d",
    "name": "Vowel Recognition",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Performance"
    ]
  },
  {
    "id": "5fefee21b64cc2000dbfa875",
    "name": "Smallest Permutation",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5264f5685fda8ed370000265",
    "name": "Metric Units - 1",
    "approved": true,
    "tags": [
      "Algorithms",
      "String Formatting",
      "Formatting",
      "Logic",
      "Strings"
    ]
  },
  {
    "id": "52672d961283975bd70002b0",
    "name": "The Prediction",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "542a823c909c97da4500055e",
    "name": "Polybius square cipher - encode",
    "approved": true,
    "tags": [
      "Algorithms",
      "Cryptography",
      "Security",
      "Ciphers",
      "Logic",
      "Encoding"
    ]
  },
  {
    "id": "5579e6a5256bac65e4000060",
    "name": "Complete The Pattern #9 - Diamond",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "55c0c452de0056d7d800004d",
    "name": "Church Numbers - Add, Multiply, Exponents",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "56b0f5f84de0afafce00004e",
    "name": "Relatively Prime Numbers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals"
    ]
  },
  {
    "id": "56ff1667cc08cacf4b00171b",
    "name": "Help Suzuki count his vegetables....",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "581c867a33b9fe732e000076",
    "name": "Fun with lists: lastIndexOf",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "584d88622609c8bda30000cf",
    "name": "Strange Strings Parser!",
    "approved": true,
    "tags": [
      "Algorithms",
      "Parsing",
      "Logic",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5937ae46377144bb2f000029",
    "name": "Print a Rectangle Using Asterisks",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Shape Modeling",
      "Graphics",
      "ASCII",
      "Character Encodings",
      "Formats"
    ]
  },
  {
    "id": "5a66ea69e6be38219f000110",
    "name": "Single character palindromes II",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5a86073fb17101e453000258",
    "name": "Emotional Sort ( ︶︿︶)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5b662d286d0db722bd000013",
    "name": "Redacted!",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5c46ea433dd41b19af1ca3b3",
    "name": "Hex Word Sum",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "52250aca906b0c28f80003a1",
    "name": "uniq -c (UNIX style)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Utilities"
    ]
  },
  {
    "id": "52437f32636a67edb00002f7",
    "name": "Honey to the Bee",
    "approved": true,
    "tags": [
      "Bugs"
    ]
  },
  {
    "id": "529962509ce9545c76000afa",
    "name": "Connect Four: Who Won?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Games",
      "Arrays",
      "Data Types",
      "Graphs",
      "Data Structures",
      "Game Boards"
    ]
  },
  {
    "id": "545ac54161aa4c339a0010dd",
    "name": "Enumerable Magic #16 - Sort that List!",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "545ac6fe85166a42c8000f37",
    "name": "Enumerable Magic #17 - Sort that List by Value!",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "545afa7461aa4c1b90001387",
    "name": "Enumerable Magic #24 - Array Rejection!",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56e6a330715e7221d9000a3b",
    "name": "Do something \"n.times\" (Simplifying \"for\" loops)",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5710443187a36a9cee0005a1",
    "name": "Coding 3min : Planting Trees",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "59901cd68fc658ab6c000025",
    "name": "Distributing Candies Fairly",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arithmetic",
      "Mathematics",
      "Logic",
      "Numbers",
      "Puzzles",
      "Games",
      "Fundamentals"
    ]
  },
  {
    "id": "5a9996fa8e503f2b4a002e7a",
    "name": "Odd Not Prime",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5edc8c53d7cede0032eb6029",
    "name": "Simple square numbers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "52fefe6cb0091856db00030e",
    "name": "Mongodb ObjectID",
    "approved": true,
    "tags": [
      "Fundamentals",
      "MongoDB",
      "NoSQL",
      "Databases",
      "Information Systems",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Validation",
      "Algorithms",
      "Logic",
      "Data Types"
    ]
  },
  {
    "id": "54c27ef1fb7da0118600046a",
    "name": "Born to be chained",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "55ee3ebff71e82a30000006a",
    "name": "Excel sheet column numbers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals"
    ]
  },
  {
    "id": "56e67d6166d442121800074c",
    "name": "■□ Pattern □■ : Wave",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57308546bd9f0987c2000d07",
    "name": "Training JS #28: methods of arrayObject---every() and some()",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5882b052bdeafec15e0000e6",
    "name": "Thinkful - Object Drills: Quarks",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "59c7e477dcc40500f50005c7",
    "name": "Odd-heavy Array",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "59d2fc6c23dacca182000068",
    "name": "Chords",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "52ebe4608567ade7d700044a",
    "name": "Poker cards encoder/decoder",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Encoding",
      "Decoding"
    ]
  },
  {
    "id": "53cf7e37e9876c35a60002c9",
    "name": "Currying vs. Partial Application",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "53d3173cf4eb7605c10001a8",
    "name": "By the Power Set of Castle Grayskull",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "54b45c37041df0caf800020f",
    "name": "Greatest Common Divisor Bitcount",
    "approved": true,
    "tags": [
      "Algorithms",
      "Binary"
    ]
  },
  {
    "id": "56aaf25213edd3a88a000002",
    "name": "Zip it!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Prototype-based Programming",
      "Programming Paradigms",
      "Prototypes"
    ]
  },
  {
    "id": "5753b987aeb792508d0010e2",
    "name": "Every nth array element. (Basic)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "585d7b4685151614190001fd",
    "name": "How much will you spend?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Floats/Doubles",
      "Data Types"
    ]
  },
  {
    "id": "592421cb7312c23a990000cf",
    "name": "Look and say sequence generator",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Sequences",
      "Arrays",
      "Data Types",
      "Constructors",
      "Basic Language Features",
      "Strings",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Numbers"
    ]
  },
  {
    "id": "59547688d8e005759e000092",
    "name": "Simple Fun #334: Two Beggars And Gold",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a3267b2ee1aaead3d000037",
    "name": "1-800-CODE-WAR",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5cd12646cf44af0020c727dd",
    "name": "Square Pi's",
    "approved": true,
    "tags": [
      "Algorithms",
      "Sequences",
      "Arrays",
      "Data Types",
      "Logic"
    ]
  },
  {
    "id": "525d8c20915a399b5600087b",
    "name": "Word Finder",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Filtering",
      "Logic"
    ]
  },
  {
    "id": "527bbf9f8699010bf40006ee",
    "name": "Functional Lists",
    "approved": true,
    "tags": [
      "Algorithms",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "545ab34061aa4c00eb000e66",
    "name": "Enumerable Magic #10 - Find the Maximum Value",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "551186edce486caa61000f5c",
    "name": "Feynman's square question",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "55147ff29cd40b43c600058b",
    "name": "Character Concatenation",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "582d7d22081ed3342d0000a7",
    "name": "Bash Basics - Check for File Existence ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Basic Language Features"
    ]
  },
  {
    "id": "58df8b4d010a9456140000c7",
    "name": "Numerical Palindrome #4",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59d7c910f703c460a2000034",
    "name": "Solomon's Quest for the Temporal Crystal",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59ff4709ba2a14501500003a",
    "name": "Order of weight",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "5b817c2a0ce070ace8002be0",
    "name": "Tic-Tac-Toe-like table Generator",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Tables",
      "Data Structures",
      "Games"
    ]
  },
  {
    "id": "5e2733f0e7432a000fb5ecc4",
    "name": "How many urinals are free?",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "544034f426bc6adda200000e",
    "name": "Find heavy ball - level: master",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Logic"
    ]
  },
  {
    "id": "54eea36b7f914221eb000e2f",
    "name": "Alphabetize a list by the nth character ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures",
      "Strings",
      "Data Types",
      "Sorting",
      "Algorithms",
      "Logic",
      "Arrays"
    ]
  },
  {
    "id": "55e9529cbdc3b29d8c000016",
    "name": "char_to_ascii",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Hashes",
      "Data Structures",
      "ASCII",
      "Character Encodings",
      "Formats",
      "Chars",
      "Parsing",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "56426b4e971f01fd2f00005b",
    "name": "Find the Square Root",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5642bf07a586135a6f000004",
    "name": "Green Glass Door",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57d27a0a26427672b900046f",
    "name": "Duck Shoot - Easy Version",
    "approved": true,
    "tags": [
      "Puzzles",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "57d28215264276ea010002cf",
    "name": "Codewars Leaderboard Climber",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Numbers",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "584daf7215ac503d5a0001ae",
    "name": "Symbolic differentiation of prefix expressions",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "593e2077edf0d3e2d500002d",
    "name": "Alphabet wars - reinforces massacre",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5a005f4fba2a14897f000086",
    "name": "Sum Array with different bases",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Binary",
      "Numbers",
      "Data Types",
      "Arrays",
      "Lists",
      "Data Structures",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5a99a1418e503ffb8300384c",
    "name": "[ Code Golf ] Add 2 values for each",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5bc73331797b005d18000255",
    "name": "Curing Arachnophobia",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Basic Language Features"
    ]
  },
  {
    "id": "52af1f150fcae8d33d0009bc",
    "name": "Ho Ho Ho with Functions!",
    "approved": true,
    "tags": [
      "Algorithms",
      "Hacking Holidays",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "52dda52d4a88b5708f000024",
    "name": "Ordinal Numbers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Strings",
      "Formatting",
      "Logic"
    ]
  },
  {
    "id": "555de49a04b7d1c13c00000e",
    "name": "Decreasing  Inputs",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5682e646d5eddc1e21000017",
    "name": "PatternCraft - Visitor",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Design Patterns",
      "Design Principles"
    ]
  },
  {
    "id": "568338ea371e86728c000002",
    "name": "Regexp basics - parsing time",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "56a115cadb39a2faa000001e",
    "name": "Add commas to a number",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "572bbd7c72a38bd878000a73",
    "name": "Fractions class",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "57f037927b45ef77b3000260",
    "name": "Return location",
    "approved": true,
    "tags": [
      "Bugs",
      "Fundamentals"
    ]
  },
  {
    "id": "588431bb76933b84520000d3",
    "name": "Simple Fun #6: Is Infinite Process?",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "589d33e4e0bbce5d6300061c",
    "name": "The Modulo-3 Sequence",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Sequences",
      "Arrays",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Integers"
    ]
  },
  {
    "id": "595b9b85ff19c2bd35000013",
    "name": "React Fun #1: Component types  and nesting",
    "approved": true,
    "tags": [
      "Fundamentals",
      "React",
      "Babel",
      "Frameworks",
      "ES2015",
      "JSX",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Inheritance",
      "Polymorphism"
    ]
  },
  {
    "id": "5993fb6c4f5d9f770c0000f2",
    "name": "Sum a list but ignore any duplicates",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59a1ea8b70e25ef8e3002992",
    "name": "Describe the shape",
    "approved": true,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Games"
    ]
  },
  {
    "id": "60113ded99cef9000e309be3",
    "name": "Separate basic types",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "6066ae080168ff0032c4107a",
    "name": "Max sum between two negatives",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "525f0459fb9570f9ff00005d",
    "name": "Javascript filter - 3",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "52608f5345d4a19bed000b31",
    "name": "Chinese Numeral Encoder",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Utilities"
    ]
  },
  {
    "id": "52af0d380fcae83a560008af",
    "name": "Only One Gift Per Child",
    "approved": true,
    "tags": [
      "Algorithms",
      "Hacking Holidays",
      "Validation",
      "Logic"
    ]
  },
  {
    "id": "53f103c3ef9ad4014f00013b",
    "name": "Most Frequent Elements",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "56fb3cde26cc99c2fd000009",
    "name": "ROT13 variant cipher",
    "approved": true,
    "tags": [
      "Algorithms",
      "Cryptography",
      "Security",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5803ee0ed5438edcc9000087",
    "name": "Padovan numbers",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "58319f37aeb69a89a00000c7",
    "name": "Fun with lists: reduce",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Higher-order Functions",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "59971206e06bbf4407002382",
    "name": "Sum and Multiply",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Logic"
    ]
  },
  {
    "id": "599febdc3f64cd21d8000117",
    "name": "Numbers of Letters of Numbers",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5acd142a2ec8c48521000104",
    "name": "One line task: Square Every Digit",
    "approved": true,
    "tags": [
      "Refactoring",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5b40b666dfb4291ad9000049",
    "name": "The Walker",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "527176c487961e5900000106",
    "name": "Concatenating functions",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5285bf61f8fc1b181700024c",
    "name": "Normalizing Out of Range Array Indexes",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "545af19561aa4c27e5001310",
    "name": "Enumerable Magic #19 - Skip Array Elements While...",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55b080eabb080cd6f8000035",
    "name": "What will be the odd one out?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Arrays",
      "Performance"
    ]
  },
  {
    "id": "55ffb44050558fdb200000a4",
    "name": "Reach Me and Sum my Digits",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "572df796914b5ba27c000c90",
    "name": "Training JS #25: methods of arrayObject---reverse() and sort()",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57a83e447cb1f32de80000d5",
    "name": "Get length of the list recursively",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "57d60363a65454701d000e11",
    "name": "I guess this is a 7kyu kata #6: Fruit Ninja I",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5803753aab6c2099e600000e",
    "name": "Age in days",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "5a0366f12b651dbfa300000c",
    "name": "Bus mastering - Who is the most prioritary? ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Bits",
      "Binary"
    ]
  },
  {
    "id": "559f89598c0d6c9b31000125",
    "name": "Every archer has its arrows",
    "approved": true,
    "tags": [
      "Fundamentals",
      "ES2015",
      "Babel"
    ]
  },
  {
    "id": "5735956413c2054a680009ec",
    "name": "Training JS #36: methods of Math---kata author's lover:random()",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "573bca07dffc1aa693000139",
    "name": "Training JS #39: Regular Expression--\"?\", \"*\", \"+\" and \"{}\"",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "577c2d68311a24132a0002a5",
    "name": "Case Reversal of Consecutive Duplicates",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57882daf90b2f375280000ad",
    "name": "Sum squares of numbers in list that may contain more lists",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Recursion",
      "Algorithms",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "57fa9bc99610ce206f000330",
    "name": "Clay Pigeon Shooting",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Strings",
      "Objects"
    ]
  },
  {
    "id": "586988b82e8d9cdc520003ac",
    "name": "Spy games -  rebuild your decoder",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "586e1d458cb711f0a800033b",
    "name": "Thinkful - List and Loop Drills: Lists of lists",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58a08e622e7fb654a300000e",
    "name": "Sort the climbing grades",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures",
      "Sorting",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "58a369fa5b3daf464200006c",
    "name": "How many e-mails we sent today?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Logic",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Arithmetic"
    ]
  },
  {
    "id": "58a6841442fd72aeb4000080",
    "name": "Simple Fun #138: Similarity",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58e26b5d92d04c7a4f00020a",
    "name": "Numerical Palindrome #5 ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Booleans",
      "Data Types"
    ]
  },
  {
    "id": "5be350bcce5afad8020000d6",
    "name": "Word Segmentation: MaxMatch",
    "approved": true,
    "tags": [
      "Algorithms",
      "Parsing",
      "Logic",
      "Strings",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science",
      "Data Types",
      "Basic Language Features",
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Arrays"
    ]
  },
  {
    "id": "5dac87a0abe9f1001f39e36d",
    "name": "Analyzing the sales by product and date",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5f631ed489e0e101a70c70a0",
    "name": "Elimination Tournament ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "535d118ccdbf501816001101",
    "name": "[JS] Parse integers in array",
    "approved": true,
    "tags": [
      "Bugs",
      "Numbers",
      "Data Types",
      "Arrays",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Utilities"
    ]
  },
  {
    "id": "5662292ee7e2da24e900012f",
    "name": "80's Kids #3: Punky Brewster's Socks",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "568ff914fc7a40a18500005c",
    "name": "Distance from the average",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Lists",
      "Data Structures",
      "Statistics",
      "Algorithms",
      "Data",
      "Logic"
    ]
  },
  {
    "id": "58558673b6b0e5a16b000028",
    "name": "Boardgame Fight Resolve",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Games"
    ]
  },
  {
    "id": "58af4ed8673e88a719000116",
    "name": "Character limits: How long is your piece of string?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Basic Language Features",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "58e953ace87e856a97000046",
    "name": "Wise drunk man",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5a0178f66f793bc5b0001728",
    "name": "Longest palindrome",
    "approved": true,
    "tags": [
      "Algorithms",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "5a95947f4a6b342636000173",
    "name": "Easter egg list in ReactJS",
    "approved": true,
    "tags": [
      "Fundamentals",
      "React",
      "Babel",
      "Frameworks",
      "ES2015",
      "JSX",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "54fdfe14762e2edf4a000a33",
    "name": "Grid blast!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5573f28798d3a46a4900007a",
    "name": "GET TO THE CHOPPA!",
    "approved": true,
    "tags": [
      "Algorithms",
      "Games",
      "Puzzles",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "55a5bef147d6be698b0000cd",
    "name": "Flatten Me",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55ddb0ea5a133623b6000043",
    "name": "Python's Dynamic Classes #1",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Classes",
      "Basic Language Features"
    ]
  },
  {
    "id": "56dbed3a13c2f61ae3000bcd",
    "name": "Noonerize Me",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "56ee0448588cbb60740013b9",
    "name": "Thinking & Testing : Retention and discard",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "573975d3ac3eec695b0013e0",
    "name": "Training JS #38: Regular Expression--\"^\",\"$\", \".\" and test()",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "58924f2ca8c628f21a0001a1",
    "name": "Brainfuck Translator",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Esoteric Languages",
      "Strings",
      "Data Types",
      "Optimization"
    ]
  },
  {
    "id": "58b1ae711fcffa34090000ea",
    "name": "Killer Garage Door",
    "approved": true,
    "tags": [
      "Fundamentals",
      "State Machines",
      "Computational Science",
      "Theoretical Computer Science",
      "Design Patterns"
    ]
  },
  {
    "id": "591e833267cd75cb02000007",
    "name": "One Line Task: Check Range",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "594323fde53209e94700012a",
    "name": "Subqueries master",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5981ff1daf72e8747d000091",
    "name": "Potion Class 101",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "59fab1f0c9fc0e7cd4000072",
    "name": "String reduction",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5f5daf1a209a64001183af9b",
    "name": "Pack Some Chocolates",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Conditional Statements",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "52605419be184942d400003d",
    "name": "Default Arguments",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Metaprogramming",
      "Advanced Language Features"
    ]
  },
  {
    "id": "52ad1db4b2651f744d000394",
    "name": "How Many Reindeers?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Hacking Holidays"
    ]
  },
  {
    "id": "5427db696f30afd74b0006a3",
    "name": "Bowling score calculator",
    "approved": true,
    "tags": [
      "Algorithms",
      "Games"
    ]
  },
  {
    "id": "545aba7085166a75c1000f69",
    "name": "Enumerable Magic #11 - Find the Maximum by Value!",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "545ac2ac61aa4cef9c0010c1",
    "name": "Enumerable Magic #15 - Flat-Map that Array!",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55d0c7ee7c0d30a12b000045",
    "name": "Linked Lists - Insert Sort",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Linked Lists",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "56bb9b7838dd34d7d8001b3c",
    "name": "Simple maze",
    "approved": true,
    "tags": [
      "Algorithms",
      "Queues",
      "Arrays",
      "Data Types",
      "Recursion",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "5700af83d1acef83fd000048",
    "name": "Coding 3min: Virus in Apple",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "578b4f9b7c77f535fc00002f",
    "name": "Constructing a car #1 - Engine and Fuel Tank",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Objects",
      "Data Types",
      "Logic",
      "Data Structures"
    ]
  },
  {
    "id": "57f14afa5f2f226d7d0000f4",
    "name": "Simple Encryption #4 - Qwerty",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Cryptography",
      "Security",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "581e50555f59405743001813",
    "name": "Fun with lists: anyMatch + allMatch",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Higher-order Functions",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5849169a6512c5964000016e",
    "name": "Greatest Common Factor of an Array",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Logic"
    ]
  },
  {
    "id": "592b7b16281da94068000107",
    "name": "GA-DE-RY-PO-LU-KI cypher vol 2",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Encryption",
      "Algorithms",
      "Cryptography",
      "Logic",
      "Security"
    ]
  },
  {
    "id": "5968bb83c307f0bb86000015",
    "name": "Basic Nico variation",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Ciphers",
      "Algorithms",
      "Cryptography",
      "Logic",
      "Security",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "59821d485a49f4d71f00000b",
    "name": "SQLonacci sequence",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "59cdb2b3a25c8c6d56000005",
    "name": "Algorithm Fun: Find The Unknown Number - Part I",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59d53c3039c23b404200007e",
    "name": "Happy Numbers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Recursion",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5af974846bf32304a2000e98",
    "name": "Find the majority",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5b1d1812b6989d61bd00004f",
    "name": "Find the nth occurrence of a word in a string!",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5b6ee22ac5cc71833f0010d7",
    "name": "Kaprekar Split",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays",
      "Basic Language Features"
    ]
  },
  {
    "id": "5df261342964c80028345a0a",
    "name": "Calculate Parity bit!",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5e28b3ff0acfbb001f348ccc",
    "name": "Sliding Puzzle Verification",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5239078120eeabe18f0000da",
    "name": "Image Processing",
    "approved": true,
    "tags": [
      "Algorithms",
      "Image Processing",
      "Graphics",
      "Logic",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "5255892719453db6d2000a23",
    "name": "Part 1: Evil Programming Government Restrictions",
    "approved": true,
    "tags": [
      "Puzzles",
      "Numbers",
      "Data Types",
      "Type Casting",
      "Fundamentals",
      "Type Conversion",
      "Algorithms",
      "Logic",
      "Language Quirks",
      "Pitfalls"
    ]
  },
  {
    "id": "5457ea88aed18536fc000a2c",
    "name": "Permutations and Dot Products",
    "approved": true,
    "tags": [
      "Algorithms",
      "Linear Algebra",
      "Algebra",
      "Mathematics",
      "Logic"
    ]
  },
  {
    "id": "545ab17461aa4c508b000fa9",
    "name": "Enumerable Magic #9 - Reduce that List!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Map/Reduce",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "545af88285166a44e700123a",
    "name": "Enumerable Magic #23 - Filter Array by Regex",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55a12bb8f0fac1ba340000aa",
    "name": "Find the anonymous function",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "563fb342f47611dae800003c",
    "name": "Trimming a string",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56fac4cfda8ca6ec0f001746",
    "name": "After(?)  Midnight",
    "approved": true,
    "tags": [
      "Algorithms",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "582041237df353e01d000084",
    "name": "Fun with lists: filter",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Higher-order Functions",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5840107b6fcbf56d2000010b",
    "name": "Palindromization",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Integers",
      "Numbers",
      "Puzzles",
      "Games",
      "Logic"
    ]
  },
  {
    "id": "5870db16056584eab0000006",
    "name": "Let's Play Darts!",
    "approved": true,
    "tags": [
      "Algorithms",
      "Games"
    ]
  },
  {
    "id": "58dea43ff98a7e2124000169",
    "name": "Divide integers as strings",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Numbers",
      "Fundamentals"
    ]
  },
  {
    "id": "59a9735a485a4d807f00008a",
    "name": "Esoteric Language: 'Poohbear' Interpreter",
    "approved": true,
    "tags": [
      "Algorithms",
      "Esoteric Languages",
      "Interpreters",
      "Logic"
    ]
  },
  {
    "id": "5b2e60742ae7543f9d00005d",
    "name": "Circular List",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "5c857bab20089d4fe65a7f5b",
    "name": "Remove Empty Items of Array",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5d7d05d070a6f60015c436d1",
    "name": "IntroToArt",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures",
      "Arrays",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "6022c97dac16b0001c0e7ccc",
    "name": "Penguin Olympics: Swimming Race Disaster",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "53c2502d1dfa43f6420001e6",
    "name": "Lazy evaluation",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "545b127c85166a9fe2001431",
    "name": "Enumerable Magic #28 - The Least and the Greatest, part 2",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "54f2f335cb9d99e8530008d7",
    "name": "The Span Function",
    "approved": true,
    "tags": [
      "Algorithms",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "562846dd1f77ab7c00000033",
    "name": "Word Patterns",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "56ba65c6a15703ac7e002075",
    "name": "Find the smallest  power higher than a given a value",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Optimization"
    ]
  },
  {
    "id": "573d11c48b97c0ad970002d4",
    "name": "Training JS #40: Regular Expression--\"|\", \"[]\" and \"()\"",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5751aa92f2dac7695d000fb0",
    "name": "Mythical Heads and Tails",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "57a883cfbb9944a97c000088",
    "name": "Reverse list recursively",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57aa3927e298a757820000a8",
    "name": "Number encrypting: cypher",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Encryption",
      "Algorithms",
      "Cryptography",
      "Logic",
      "Security"
    ]
  },
  {
    "id": "57fb04649610ce369a0006b8",
    "name": "Exclamation marks series #10: Remove some exclamation marks to keep the same number of exclamation marks at the beginning and end of each word",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58241d05e7a162c5b100010f",
    "name": "Count Weekdays",
    "approved": true,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "5845e6a7ae92e294f4000315",
    "name": "Sum of nested numbers",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "587319230e9cf305bb000098",
    "name": "Soundex",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5889177bf148eddd150002cc",
    "name": "TIY-FizzBuzz",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58f625e20290fb29c3000056",
    "name": "Alternate Logic",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5f885fa9f130ea00207c7dc8",
    "name": "Loneliest character",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "56a6ce697c05fb4667000029",
    "name": "Next Palindromic Number.",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Algorithms",
      "Logic",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Optimization",
      "Declarative Programming",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "56aed5db9d5cb55de000001c",
    "name": "How many twos?",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "57d4e99bec16701a67000033",
    "name": "Hëävÿ Mëtäl Ümläüts",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "57f7f71a7b992e699400013f",
    "name": "Sort the columns of a csv-file",
    "approved": true,
    "tags": [
      "Algorithms",
      "Basic Language Features",
      "Fundamentals",
      "Mathematics",
      "Logic",
      "Numbers",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "584c702256c98fc0a0000043",
    "name": "Fizz Buzz - Without ifs",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58ab2ed1acbab2eacc00010e",
    "name": "Scraping: Get the Year a CodeWarrior Joined",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5934d648d95386bc8200010b",
    "name": "Ka Ka Ka cypher - words only vol 1",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Encryption",
      "Algorithms",
      "Cryptography",
      "Logic",
      "Security"
    ]
  },
  {
    "id": "595249fc10b69f4f7a000003",
    "name": "Do you know how to make Query String?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Data Structures",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5966a52ab4f24db1800000cc",
    "name": "A + B == 123",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5ace2d9f307eb29430000092",
    "name": "Multiply Word in String",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Algorithms",
      "Logic",
      "Arrays"
    ]
  },
  {
    "id": "5b0c0ec907756ffcff00006e",
    "name": "Floating-point Approximation (III)",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5b7bd90ef643c4df7400015d",
    "name": "Create palindrome",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5c745b30f6216a301dc4dda5",
    "name": "Moving Average",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Lists",
      "Data Structures",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "53c7da8baf72924af8000405",
    "name": "new with apply",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Prototype-based Programming",
      "Programming Paradigms",
      "Prototypes"
    ]
  },
  {
    "id": "54c14c1b86b33df1ff000026",
    "name": "Base -2",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Binary"
    ]
  },
  {
    "id": "560a4962c0cc5c2a16000068",
    "name": "Numbers Which Sum of Powers of Its Digits Is The Same Number",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Data Structures",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5630c850ed4343c1d0000083",
    "name": "A (no more) bugs trilogy: Episode 3 - Make a  Player",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Objects",
      "Data Types"
    ]
  },
  {
    "id": "5695995cc26a1e90fe00004d",
    "name": "The learning game - Machine Learning #1",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Machine Learning",
      "Algorithms",
      "Applied Computer Science",
      "Logic",
      "Numbers",
      "Data Types",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5727868888095bdf5c001d3d",
    "name": "String to list of integers.",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Integers",
      "Numbers"
    ]
  },
  {
    "id": "574be65a974b95eaf40008da",
    "name": "T.T.T.#2: Equal to 24",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5797d1a9c38ec2de1f00017b",
    "name": "String Pyramid",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Basic Language Features",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "590942d4efde93886900185a",
    "name": "Simple Fun #238: Tennis Game Points",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a830fa2373c2ec8eb00019d",
    "name": "United State of React",
    "approved": true,
    "tags": [
      "Fundamentals",
      "React",
      "Babel",
      "Frameworks"
    ]
  },
  {
    "id": "5241de3d8d333fefe30006a1",
    "name": "(Don't) Make Me Repeat Myself",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Prototype-based Programming",
      "Programming Paradigms",
      "Prototypes"
    ]
  },
  {
    "id": "534a0c100d03ad9772000539",
    "name": "Prime factorization",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "55171d87236c880cea0004c6",
    "name": "Hard Sudoku Solver",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Games",
      "Puzzles"
    ]
  },
  {
    "id": "5578a806350dae5b05000021",
    "name": "Fluent Calculator",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Metaprogramming",
      "Programming Paradigms",
      "Advanced Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "55f5efd21ad2b48895000040",
    "name": "How Many Numbers? II",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Data Structures",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "58417e9ab9c25c774500001f",
    "name": "Missing Angle",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Geometry",
      "Algebra"
    ]
  },
  {
    "id": "58b3c2bd917a5caec0000017",
    "name": "Simple Fun #170: Sum Groups",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58b57f984f353b3dc9000030",
    "name": "One Line Task: Palindrome String",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "594b898169c1d644f900002e",
    "name": "RoboScript #4 - RS3 Patterns to the Rescue",
    "approved": true,
    "tags": [
      "Algorithms",
      "Interpreters",
      "Logic",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "596c55fc7bd5476bf60000d5",
    "name": "FIXME: Static electrickery",
    "approved": true,
    "tags": [
      "Bugs"
    ]
  },
  {
    "id": "599688d0e2800dda4e0001b0",
    "name": "Unique digits sequence",
    "approved": true,
    "tags": [
      "Algorithms",
      "Sequences",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5a20eeccee1aae3cbc000090",
    "name": "Sliding Puzzle Solver",
    "approved": true,
    "tags": [
      "Algorithms",
      "Puzzles",
      "Games",
      "Genetic Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5ae840b8783bb4ef79000094",
    "name": "Dictionary Merge",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Dictionary",
      "Data Structures"
    ]
  },
  {
    "id": "5b049d57de4c7f6a6c0001d7",
    "name": "Apparently-Modifying Strings",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "If-then-else Statements",
      "Conditional Statements"
    ]
  },
  {
    "id": "536c6f2349aa8b16520002e0",
    "name": "Array#second",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "545aa9cf85166a9d8e000df6",
    "name": "Enumerable Magic #6 - Count Items",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "545abdbe61aa4cd6d5001003",
    "name": "Enumerable Magic #13 - Find the Minimum Item by Value!",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "550aea365951383698000727",
    "name": "Split an array",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "555a03f259e2d1788c000077",
    "name": "RNA to Protein Sequence Translation",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Hashes",
      "Data Structures"
    ]
  },
  {
    "id": "5581a7651185fe13190000ee",
    "name": "Complete The Pattern #10 - Parallelogram",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5588bd9f28dbb06f43000085",
    "name": "Hard Sudoku Solver",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Algorithms",
      "Logic",
      "Validation"
    ]
  },
  {
    "id": "56a14f18005af7002f00003f",
    "name": "Shorter Path",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56fe9a0c11086cd842000008",
    "name": "Coding 3min: Father and Son",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5782dd86202c0e43410001f6",
    "name": "Number , number ... wait LETTER !",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "57cec34272f983e17800001e",
    "name": "PopShift",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "580741302e14acaef900015a",
    "name": "Extract last names of people named Michael",
    "approved": true,
    "tags": [
      "Algorithms",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings",
      "Logic",
      "Data Structures",
      "Arrays",
      "Data Types",
      "Optimization"
    ]
  },
  {
    "id": "58429d526312ce1d940000ee",
    "name": "Balance the arrays",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5886f3713a111b620f0000dc",
    "name": "Simple Fun #28: Html End Tag By Start Tag",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58b8cc7e8e7121740700002d",
    "name": "Simple Fun #177: Rank Of Element",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "590ee3c979ae8923bf00095b",
    "name": "Convert Color image to greyscale",
    "approved": true,
    "tags": [
      "Algorithms",
      "Image Processing",
      "Graphics",
      "Logic"
    ]
  },
  {
    "id": "59ad13d5589d2a1d84000020",
    "name": "FizzBuzz Backwards",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59f34ec5a01431ab7600005a",
    "name": "Factorial length",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5a1a514effe75fd63b0000f2",
    "name": "String character frequency",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "52f5424d0531259cfc000d04",
    "name": "Construct a bit vector set",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "579775203467db17b500037b",
    "name": "Object-Oriented PHP #2 - Class Constructors and $this",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57d29627c98a52d1630009c0",
    "name": "PHP Functions - Pass By Reference",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "583df40bf30065fa9900010c",
    "name": "The mean of two means",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "585ba66ce08bae791b00011b",
    "name": "Find the index of the first occurrence of an item in a list (with a twist)",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5254620499cfe504bf0001c9",
    "name": "Robby, the robot",
    "approved": true,
    "tags": [
      "Algorithms",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "535742c7e727388cdc000297",
    "name": "A functional deck of cards....",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Higher-order Functions",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Iterators",
      "Object-oriented Programming"
    ]
  },
  {
    "id": "53c29a6abb5187180d000b65",
    "name": "ES5 Generators(i)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "546c7f89bed2e12fb300056f",
    "name": "String searching with wildcard",
    "approved": true,
    "tags": [
      "Algorithms",
      "Search",
      "Logic"
    ]
  },
  {
    "id": "559af787b4b8eac78b000022",
    "name": "Print count and  numbers",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55b54be931e9ce28bc0000d6",
    "name": "Sums of consecutive integers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "56459c0df289d97bd7000083",
    "name": "From-To-Step Sequence Generator",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "571965ccdf7fdb10a00000ea",
    "name": "Sum and Length",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5806c2f897dba05dd900004c",
    "name": "N-Dimensional Vector Magnitude",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Dynamic Arrays",
      "Arrays",
      "Functional Programming",
      "Data Types",
      "Declarative Programming",
      "Programming Paradigms",
      "Vectors"
    ]
  },
  {
    "id": "58f6e7e455d7597dcc000045",
    "name": "Get Password from grid",
    "approved": true,
    "tags": [
      "Bugs",
      "Logic",
      "Arrays",
      "Data Types",
      "Algorithms",
      "Data Structures"
    ]
  },
  {
    "id": "5ad29cd95e8240dd85000b54",
    "name": "Friends",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5b3d5ad43da310743c000056",
    "name": "Password Maker",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5b71af678adeae41df00008c",
    "name": "Bugs Life",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "553f01db29490a69ff000049",
    "name": "Simple Sequence Validator",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Numbers",
      "Sequences"
    ]
  },
  {
    "id": "563f960e3c73813942000015",
    "name": "Scrabble best word",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "571e9af407363dbf5700067c",
    "name": "Filling an array (part 2)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "574c51aa3e4ea6de22001363",
    "name": "Sir , showMe  yourID ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "57d147bcc98a521016000320",
    "name": "Pillow on the Fridge",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "587a75dbcaf9670c32000292",
    "name": "No yelling!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "58842a2b4e8efb92b7000080",
    "name": "Simple Fun #5: Knapsack Light",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5889ab4928c08c08da00009b",
    "name": "Simple Fun #61: Crossing Sum",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "59098c39d8d24d12b6000020",
    "name": "ASCII Fun #2: Funny Dots",
    "approved": true,
    "tags": [
      "Algorithms",
      "ASCII",
      "Character Encodings",
      "Formats"
    ]
  },
  {
    "id": "595877be60d17855980013d3",
    "name": "Euclidean distance in n dimensions",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Fundamentals"
    ]
  },
  {
    "id": "598980a41e55117d93000015",
    "name": "Message from Aliens",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "59b47ff18bcb77a4d1000076",
    "name": "Blaine is a pain",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59c03f175fb13337df00002e",
    "name": "Make A Window",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5b93f268563417c7ed0001bd",
    "name": "Simple eviternity numbers",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "545b326085166a843f0015ab",
    "name": "Enumerable Magic #29 - Grouping Elements Together",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "559e708e72d342b0c900007b",
    "name": "Even Odd Pattern #1",
    "approved": true,
    "tags": [
      "Puzzles",
      "Logic",
      "Arrays",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Numbers"
    ]
  },
  {
    "id": "56445cc2e5747d513c000033",
    "name": "UVB-76 Message Validator",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals"
    ]
  },
  {
    "id": "576400f2f716ca816d001614",
    "name": "Reduce My Fraction",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Recursion",
      "Algorithms",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "58b8db810f40ea7788000126",
    "name": "Simple Fun #179: Fraction",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58e18c5434a3022d270000f2",
    "name": "The Road-Kill Detective",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5915686ed2563aa6650000ab",
    "name": "Simple Fun #270: Evil Code Medal",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5965144da82d479517000001",
    "name": "They're good dogs. ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "525ca723b6aecee8c900033c",
    "name": "Complex CSV Parser",
    "approved": true,
    "tags": [
      "Algorithms",
      "Parsing",
      "Logic",
      "Strings",
      "Data Types",
      "Utilities"
    ]
  },
  {
    "id": "53f17f5b59c3fcd589000390",
    "name": "Only-Readable-Once list",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "56bdf9d50d0b6433df001074",
    "name": "Sum The Array",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "56d46b8fda159582e100001b",
    "name": "How far will I go?",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "586e0dc9b98de0064b000247",
    "name": "Thinkful - List and Loop Drills: Grade calculator",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "589422431a88082ea600002a",
    "name": "Simple Fun #75: Digit Degree",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "59cf8bed1a68b75ffb000026",
    "name": "Vowel-consonant lexicon",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "5bc9951026f1cdc77400011c",
    "name": "The Baby Years I - Baby Counting",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Numbers"
    ]
  },
  {
    "id": "52567c56cb6ac86b56000516",
    "name": "Sentences with Functions",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Function Composition",
      "Composition",
      "Functional Programming",
      "Design Principles",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "525b4164eb636fb2f90002a0",
    "name": "Numerology",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "52c32ef251f31ae8f50000ae",
    "name": "Differential Averaging",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Utilities",
      "Algebra"
    ]
  },
  {
    "id": "541103f0a0e736c8e40011d5",
    "name": "Disgruntled Employee",
    "approved": true,
    "tags": [
      "Puzzles",
      "Logic",
      "Mathematics",
      "Algorithms",
      "Numbers",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Sorting",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "558710234f02dcc4a8000005",
    "name": "Fix my method",
    "approved": true,
    "tags": [
      "Bugs",
      "Methods",
      "Functions",
      "Object-oriented Programming",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Programming Paradigms",
      "Objects",
      "Data Types",
      "Properties"
    ]
  },
  {
    "id": "57078c56924f34f763000b3f",
    "name": "Circular Objects #1 - Running around in circles",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57bc802c615f0ba1e3000029",
    "name": "Faro Shuffle Count",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures",
      "Iterators",
      "Control Flow",
      "Object-oriented Programming",
      "Basic Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "57da5365a82a1998440000a9",
    "name": "You are a Cube!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "581de9a5b7bad5d369000150",
    "name": "SCHEDULE YOUR DA(RRA)Y",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Logic",
      "Mathematics",
      "Numbers",
      "Declarative Programming",
      "Programming Paradigms",
      "Fundamentals"
    ]
  },
  {
    "id": "5889a6b653ad4a22710000d0",
    "name": "Simple Fun #59: Reverse On Diagonals",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5912701a89fc3d0a6a000169",
    "name": "Simple Fun #263: Even Numbers Before Fixed",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5ca24526b534ce0018a137b5",
    "name": "Texting with an old-school mobile phone",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "511ed4593ba69cba1a000002",
    "name": "Wrapped Function",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Prototype-based Programming",
      "Programming Paradigms",
      "Prototypes",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "51eead3461ccf7db04000017",
    "name": "UriBuilder",
    "approved": true,
    "tags": [
      "Algorithms",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Strings",
      "Data Types",
      "Parsing",
      "Logic"
    ]
  },
  {
    "id": "5470c635304c127cad000f0d",
    "name": "Regular expression parser",
    "approved": true,
    "tags": [
      "Algorithms",
      "Parsing",
      "Logic",
      "Strings",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "54b058ce56f22dc6fe0011df",
    "name": "Memoized Log Cutting",
    "approved": true,
    "tags": [
      "Refactoring",
      "Dynamic Programming",
      "Programming Paradigms",
      "Memoization",
      "Design Patterns",
      "Design Principles"
    ]
  },
  {
    "id": "5609fd5b44e602b2ff00003a",
    "name": "Operations With Sets",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "56cafdabc8cfcc3ad4000a2b",
    "name": "Binary scORe",
    "approved": true,
    "tags": [
      "Algorithms",
      "Binary"
    ]
  },
  {
    "id": "573c91c5eaffa3bd350000b0",
    "name": "Gematria for all",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "57b2e428d24156b312000114",
    "name": "Find the volume of a Cone.",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "57ea0ee4491a151fc5000acf",
    "name": "So Easy: Charge time calculation",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5be085e418bcfd260b000028",
    "name": "Keystroking",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5becace7063291bebf0001d5",
    "name": "Positive to negative binary numbers",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Binary",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "514b6c44a337752e67000077",
    "name": "Name Your Space",
    "approved": true,
    "tags": [
      "Algorithms",
      "Utilities",
      "Namespaces",
      "Basic Language Features",
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "52d4678038644497e900007c",
    "name": "Advanced Events",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Design Patterns",
      "Design Principles",
      "Event Handling"
    ]
  },
  {
    "id": "52f3eeb274c7e693a600288e",
    "name": "Inserting multiple strings into another string",
    "approved": true,
    "tags": [
      "Bugs",
      "Strings",
      "Data Types",
      "Formatting",
      "Algorithms",
      "Logic",
      "Pitfalls"
    ]
  },
  {
    "id": "532a69ee484b0e27120000b6",
    "name": "Vector Class",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Dynamic Arrays",
      "Arrays",
      "Functional Programming",
      "Data Types",
      "Declarative Programming",
      "Programming Paradigms",
      "Vectors",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming"
    ]
  },
  {
    "id": "533c46b140aafec05b000d31",
    "name": "Advanced Pig Latin",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "534fcca5edb124cfe6000f60",
    "name": "Singleton Pattern",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Singleton",
      "Design Patterns",
      "Design Principles",
      "Object-oriented Programming",
      "Prototypes",
      "Classes",
      "Basic Language Features",
      "Programming Paradigms",
      "Objects",
      "Data Types"
    ]
  },
  {
    "id": "541a354c39c5efa5fa001372",
    "name": "IP Address to Number",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Numbers",
      "Formatting",
      "Algorithms",
      "Logic",
      "Binary",
      "Networks",
      "Encoding",
      "Decoding",
      "Utilities"
    ]
  },
  {
    "id": "543bfbecdef6345f52000e4d",
    "name": "L3375p34k",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Strings",
      "Data Types",
      "Arrays",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features"
    ]
  },
  {
    "id": "55a7de09273f6652b200002e",
    "name": "Lucas numbers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Sequences",
      "Arrays"
    ]
  },
  {
    "id": "5665d30b3ea3d84a2c000025",
    "name": "Santa's Missing Gift List",
    "approved": true,
    "tags": [
      "Algorithms",
      "Binary"
    ]
  },
  {
    "id": "567af2c8b46252f78400004d",
    "name": "Magic The Gathering #1: Creatures",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Games"
    ]
  },
  {
    "id": "57e0206335e198f82b00001d",
    "name": "esrever esreveR!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Basic Language Features",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5884d46015a70f6cd7000035",
    "name": "Playing with Sets : Intersection",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Sets",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "58e3031ce265671f6a000542",
    "name": "Geometry Basics: Distance between circles in 2D",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "591a86bfe76dc98f24000030",
    "name": "Simple Fun #283: Censor The Forbidden Words",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "596b8a3fc4cb1de46b000001",
    "name": "\"Center yourself\", says the monk.",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5c2b4182ac111c05cf388858",
    "name": "Read the time",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5fd8aa5743b49e0012d43e50",
    "name": "Loop Array",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "52d2e2be94d26fc622000735",
    "name": "Vigenère Autokey Cipher Helper",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Ciphers",
      "Cryptography",
      "Security",
      "Objects",
      "Data Types",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Fundamentals",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "545a5dd961aa4c0987000980",
    "name": "Chain Evaluation",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "545b10c761aa4cdede001483",
    "name": "Enumerable Magic #27 - The Least and the Greatest",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "54a6d39a478d8e07e4000b69",
    "name": "Java Functional Programming (Part 3: Closured for Business)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lambdas",
      "Functional Programming",
      "Functions",
      "Declarative Programming",
      "Programming Paradigms",
      "Control Flow",
      "Basic Language Features",
      "Closures"
    ]
  },
  {
    "id": "55aa7acc42216b3dd6000022",
    "name": "The Owls Are Not What They Seem",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5660aa6fa60f03856c000045",
    "name": "Help your fellow warrior!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "56a24b309f3671608b00003a",
    "name": "Dad is Commatose",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "56b5dd1702a30326ce000b02",
    "name": "Basics 04: Rotate Matrix",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Arrays"
    ]
  },
  {
    "id": "56fa9cd6da8ca623f9001233",
    "name": "Elemental Words",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Logic",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science",
      "Arrays"
    ]
  },
  {
    "id": "57057a035eef1f7e790009ef",
    "name": "Chuck Norris II - One Punch",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Methods",
      "Functions",
      "Object-oriented Programming",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "57066708cb7293901a0013a1",
    "name": "Chuck Norris IV - Bearded Fist",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic",
      "Arrays",
      "Data Types",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58693136b98de0e4910001ab",
    "name": "Simple decrypt algo",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "58c218efd8d3cad11c0000ef",
    "name": "Simple Fun #194: Binary String",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58f6024e1e26ec376900004f",
    "name": "Find Factors Down to Limit",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "59c5d0b0a25c8c99ca000237",
    "name": "Line Safari - Is that a line?",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "59d582cafbdd0b7ef90000a0",
    "name": "Papers, Please",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Games",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Strings"
    ]
  },
  {
    "id": "59fb783bab11f89202001083",
    "name": "Recycle!",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5b2c2c95b6989da552000120",
    "name": "TV Remote (wrap)",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5b715fd11db5ce5912000019",
    "name": "Ball and Cups ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Basic Language Features"
    ]
  },
  {
    "id": "6210fb7aabf047000f3a3ad6",
    "name": "Assemble string",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "5302f383be2a91e4d70002c6",
    "name": "Zero fill... for the Queen!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Formatting",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5411c4205f3a7fd3f90009ea",
    "name": "Bracket Duplicates",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals"
    ]
  },
  {
    "id": "54404a06cf36258b08000364",
    "name": "Find heavy ball - level: conqueror",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Logic"
    ]
  },
  {
    "id": "558c04ecda7fb8f48b000075",
    "name": "Same Array?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "55c211cce1ef691d9b000061",
    "name": "Javascript Mathematician",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Closures",
      "Basic Language Features",
      "Arguments"
    ]
  },
  {
    "id": "55c3026406402936bc000026",
    "name": "Insert Dashes 2",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5603a9585480c94bd5000073",
    "name": "Sum and Rest the  Number with its Reversed and See What Happens",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Memoization",
      "Design Patterns",
      "Design Principles",
      "Dynamic Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "560b8d7106ede725dd0000e2",
    "name": "Surrounding Primes for a value",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5645b24e802c6326f7000049",
    "name": "Down Arrow With Numbers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5662b14e0a1fb8320a00005c",
    "name": "Naughty or Nice",
    "approved": true,
    "tags": [
      "Fundamentals",
      "JSON",
      "Formats",
      "Hashes",
      "Data Structures"
    ]
  },
  {
    "id": "5665a6a07b5afe0aba00003a",
    "name": "ATM money counter",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "57507369b0b6d1b5a60001b3",
    "name": "Decompose single strand DNA into 3 reading frames",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "586ed2dbaa0428f791000885",
    "name": "Traffic Count During Peak Hours",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5874657211d7d6176a00012f",
    "name": "Alien Accent",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "58de77a2c19f096a5a00013f",
    "name": "Find Added ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "59c132fb70a3b7efd3000024",
    "name": "Scott Encoding",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Types",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "59decdf40863c76ae3000080",
    "name": "Most Consecutive Zeros of a Binary Number",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5d0ae91acac0a50232e8a547",
    "name": "Traffic Lights - one car",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5ff22b6e833a9300180bb953",
    "name": "Consecutive Differences",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "567ed73340895395c100002e",
    "name": "Regexp Basics - is it a eight bit signed number?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Bits",
      "Binary",
      "Parsing",
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5769a78c6f2dea72b3000027",
    "name": "Bouncy Numbers",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Arithmetic"
    ]
  },
  {
    "id": "584dc1b7766c2bb158000226",
    "name": "Help Suzuki complete his chores!",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "59a151c53f64cdd94c00008f",
    "name": "Inertial Array",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5a48948e145c46820b00002f",
    "name": "Steps in k-primes",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "543e8390386034b63b001f31",
    "name": "Count and Group Character Occurrences in a String",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "545abc2d85166a08bd000f80",
    "name": "Enumerable Magic #12 - Find Minimum Value by Comparison",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "545aff1885166a1d9400120b",
    "name": "Enumerable Magic #26 - Grab Elements While...",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "54d3bb4dfc75996c1c000c6d",
    "name": "Midpoint Sum",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures",
      "Numbers",
      "Data Types",
      "Integers",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "55c098aa8468f3b9030000f1",
    "name": "Move Zeros",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5676f07029da352ba2000065",
    "name": "Largest prime number containing n digit",
    "approved": true,
    "tags": [
      "Puzzles",
      "Algorithms",
      "Logic",
      "Games",
      "Fundamentals",
      "Performance"
    ]
  },
  {
    "id": "56dd927e4c9055f8470013a5",
    "name": "Thinking & Testing : Sport Star",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57c15d314677bb2bd4000017",
    "name": "Doors in the school",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic"
    ]
  },
  {
    "id": "586a3270c66d18ad810001d4",
    "name": "Get array elements with specified keys",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Prototype-based Programming",
      "Programming Paradigms",
      "Prototypes"
    ]
  },
  {
    "id": "58845a92bd573378f4000035",
    "name": "Simple Fun #11: Swap Adjacent Bits",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58c8a41bedb423240a000007",
    "name": "Simple Fun #198: Cake Slice",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "599bb194b7a047b04d000077",
    "name": "8 inch pizza equivalence",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5a972f30ba1bb5a2590000a0",
    "name": "Matrix Square Up,  B!",
    "approved": true,
    "tags": [
      "Puzzles",
      "Graphs",
      "Data Structures",
      "Games",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5b190aa7803388ec97000054",
    "name": "Tram Capacity",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic"
    ]
  },
  {
    "id": "5b432bdf82417e3f39000195",
    "name": "Pong! [Basics]",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Games"
    ]
  },
  {
    "id": "5b8be3ae36332f341e00015e",
    "name": "Simple string division II",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5d68d05e7a60ba002b0053f6",
    "name": "Bonuses",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5fc7caa854783c002196f2cb",
    "name": "The Speed of Letters",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5263c5d011f4233c9d000561",
    "name": "The Look and Say sequence",
    "approved": true,
    "tags": [
      "Algorithms",
      "Sequences",
      "Arrays",
      "Data Types",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5376b901424ed4f8c20002b7",
    "name": "Closest pair of points in linearithmic time",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5463c8db865001c1710003b2",
    "name": "Ninety Nine Thousand Nine Hundred Ninety Nine",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Strings",
      "Integers",
      "Parsing",
      "Logic"
    ]
  },
  {
    "id": "56d58a16e8f2d6957100093f",
    "name": "Approaching enemies",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57d29ccda56edb4187000052",
    "name": "Rock Paper Scissors Lizard Spock",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57d7536d950d8474f6000a06",
    "name": "The Wrong-Way Cow",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "57fa92b25c9910e7bc0001df",
    "name": "Fac Recursion (Pest control  - find the bugs and fix them)",
    "approved": true,
    "tags": [
      "Bugs",
      "Recursion",
      "Algorithms",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "5805f0663f1f9c49be00011f",
    "name": "Birthday II - Presents",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Objects"
    ]
  },
  {
    "id": "582bbdbcc190132e3e0001f3",
    "name": "Even Binary Sorting",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Binary",
      "Sorting",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5848cd33c3689be0dc00175c",
    "name": "Noob Debug 1: Fix the string sum!",
    "approved": true,
    "tags": [
      "Bugs",
      "Strings",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "589a9792ea93aae1bf00001c",
    "name": "Simple Fun #106: Is Thue Morse?",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58df62fe95923f7a7f0000cc",
    "name": "Numerical Palindrome #3 ",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5904d222e1bfd3354e000026",
    "name": "Remove duplication ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "595d4823c31ba629d90000d2",
    "name": "The rarest pepe",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59e77930233243a7b7000026",
    "name": "Pirate Code",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games",
      "Numbers",
      "Data Types",
      "Arrays",
      "Basic Language Features"
    ]
  },
  {
    "id": "5a5c118380eba8a53d0000ce",
    "name": "Currency Conversion",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Algebra"
    ]
  },
  {
    "id": "5276c0f3f4bfbd5aae0001ad",
    "name": "Grab CSV Columns",
    "approved": true,
    "tags": [
      "Algorithms",
      "Utilities",
      "Formatting",
      "Logic",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "559e5b717dd758a3eb00005a",
    "name": "Dropcaps",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Strings",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "56326c13e63f90538d00004e",
    "name": "String basics",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "56419475931903e9d1000087",
    "name": "One down",
    "approved": true,
    "tags": [
      "Puzzles",
      "Strings",
      "Data Types",
      "Algorithms",
      "Logic",
      "Cryptography",
      "Security"
    ]
  },
  {
    "id": "57241cafef90082e270012d8",
    "name": "Assignment #3",
    "approved": true,
    "tags": [
      "Algorithms",
      "Cryptography",
      "Security",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5772ded6914da62b4b0000f8",
    "name": "Palindrome Pairs",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "57a4c85de298a795210002da",
    "name": "Countdown -  Longest Word",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays",
      "Parsing",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "57fb017d9610ce369a0006ac",
    "name": "Exclamation marks series #9: Remove or add a exclamation mark at the end of words of the sentence",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5840946ea3d4c78e90000068",
    "name": "Gryffindor vs Slytherin Quidditch Game",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "585db3e8eec141ce9a00008f",
    "name": "Reverse Vowels In A String",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "58dabca7ce77a12dbd00000f",
    "name": "Highest power of 2 that evenly divides a number",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5963314a51c68a26600000ae",
    "name": "I'm longer than you!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5d774cfde98179002a7cb3c8",
    "name": "Make Class",
    "approved": true,
    "tags": [
      "Algorithms",
      "Games",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "52b23340c65ea422b1000045",
    "name": "Will the present fit?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Hacking Holidays",
      "Arrays",
      "Data Types",
      "Utilities"
    ]
  },
  {
    "id": "5451712ea8a825a74f000863",
    "name": "Simple SQL Engine",
    "approved": true,
    "tags": [
      "Algorithms",
      "SQL",
      "Databases",
      "Information Systems",
      "Parsing",
      "Logic",
      "Strings",
      "Sets",
      "Arrays",
      "Data Types",
      "Expressions",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "545aabe485166abebb000e8f",
    "name": "Enumerable Magic #7 - Find a Matching Item",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55a14cd026f2a4b196000092",
    "name": "Super Class Extensions",
    "approved": true,
    "tags": [
      "Fundamentals",
      "ES2015",
      "Babel",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5694d22eb15d78fe8d00003a",
    "name": "Group in 10s",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "57785441311a24465e000025",
    "name": "Python Checkerboard",
    "approved": true,
    "tags": [
      "Bugs"
    ]
  },
  {
    "id": "582a4f4ab94351397d000006",
    "name": "Return a list of files filtered by file extension",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58635f1b2489549be50003f1",
    "name": "Thinkful - Number Drills: Quadratic formula",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5864e2c473bd9c67b70002ba",
    "name": "All Star Code Challenge #13 : Pig Latin Translator",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "586e6d4cb98de09e3800014f",
    "name": "Vending Machine",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Hashes",
      "Data Structures"
    ]
  },
  {
    "id": "586ed14c35396d912100049a",
    "name": "Swap two numbers",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "586f5808aa04285bc800009d",
    "name": "Thinkful - Dictionary Drills: Multiple Modes",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "587f0abdd8730aafd4000035",
    "name": "SHA-256 Cracker",
    "approved": true,
    "tags": [
      "Puzzles",
      "Security",
      "Algorithms",
      "Logic",
      "Hashes",
      "Data Structures",
      "Decryption",
      "Cryptography"
    ]
  },
  {
    "id": "588856a82ffea640c80000cc",
    "name": "Simple Fun #51: Array Previous Less",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5894986e2ddc8f6805000036",
    "name": "Simple ROT13.5 cypher",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Fundamentals"
    ]
  },
  {
    "id": "5897d94dd07028546c00009d",
    "name": "Simple Fun #91: Unique Digit Products",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58c8c723df10450b21000024",
    "name": "Centre of attention",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types",
      "Optimization",
      "Data"
    ]
  },
  {
    "id": "595f4df2e8f12961ab00007f",
    "name": "Haiku Wizard",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5962bbea6878a381ed000036",
    "name": "High score table",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Sorting",
      "Arrays",
      "Data Types",
      "Sequences",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "59b2883c5e2308b54d000013",
    "name": "Onion array",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a3f4eace1ce0eeda600003d",
    "name": "Swap two elements",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types",
      "Numbers",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "5a5f3034cadebf76db000023",
    "name": "Binary Representation of an Integer",
    "approved": true,
    "tags": [
      "Algorithms",
      "Dynamic Arrays",
      "Arrays",
      "Functional Programming",
      "Data Types",
      "Declarative Programming",
      "Programming Paradigms",
      "Vectors",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Integers",
      "Numbers",
      "Binary"
    ]
  },
  {
    "id": "5a959662373c2e761d000183",
    "name": "Ticker",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5c8bf3ec5048ca2c8e954bf3",
    "name": "Shortest Distance to a Character",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Chars",
      "Logic"
    ]
  },
  {
    "id": "5d95b7644a336600271f52ba",
    "name": "Robinson Crusoe",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5220b7f77e831a7e79000417",
    "name": "generateRules",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "52378b3ee72f21e1ea000045",
    "name": "True Min",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Utilities",
      "Defensive Programming",
      "Programming Principles"
    ]
  },
  {
    "id": "54d472e98776e4eb5b000215",
    "name": "Musical Pitch Classes",
    "approved": true,
    "tags": [
      "Algorithms",
      "Rules"
    ]
  },
  {
    "id": "55b4f9906ac454650900007d",
    "name": "String chunks",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5692a582cc22387ccf000017",
    "name": "Configure package json for a node application",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57061b6fcb7293901a000ac7",
    "name": "Chuck Norris III - Cage Match",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Logic"
    ]
  },
  {
    "id": "5720eb05e8d6c5b24a0014c5",
    "name": "#1 Matrices : Making  an Alternating Sum",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Algorithms",
      "Logic",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5760c1c7f2717b91e20001a4",
    "name": "Find the motif in DNA sequence.",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "57a31ce7cf1fa5a1e1000227",
    "name": "Update inventory  in your smartphone store",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Data Structures",
      "Arrays",
      "Data Types",
      "Optimization"
    ]
  },
  {
    "id": "581ee0db1bbdd04e010002fd",
    "name": "Floating-point Approximation (II)",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "588820169ab1e053240000e0",
    "name": "Simple Fun #42: Are Similar?",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58a3c1f12f949e21b300005c",
    "name": "Simple Fun #124: Lamps",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58e2708f9bd67fee17000080",
    "name": "Numerical Palindrome #3.5",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5a81b78d4a6b344638000183",
    "name": "Spanish Conjugator",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5cde4e3f52910d00130dc92c",
    "name": "Football - Yellow and Red Cards",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "5dfa33aacec189000f25e9a9",
    "name": "One is the loneliest number",
    "approved": true,
    "tags": [
      "Puzzles",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "52105fab0bd0ce9dd00000fe",
    "name": "Custom sort function",
    "approved": true,
    "tags": [
      "Algorithms",
      "Sorting",
      "Logic",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "524300d5add6f657e20008ff",
    "name": "Manipulate URL Parameters",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Parsing",
      "Algorithms",
      "Logic",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Utilities"
    ]
  },
  {
    "id": "52f4261c95d6bff39a003096",
    "name": "Maximum Contiguous Sum",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Ranges",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "53b7bc844db8fde50800020a",
    "name": "Points On A Line",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "54402d52cf3625b882000141",
    "name": "Super Secret Password Generator",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "55c9a8cda33889d69e00008b",
    "name": "Supernatural",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Games"
    ]
  },
  {
    "id": "568fca718404ad457c000033",
    "name": "Missing number in Unordered Arithmetic Progression",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Arithmetic",
      "Mathematics",
      "Numbers",
      "Performance"
    ]
  },
  {
    "id": "571af500196bb01cc70014fa",
    "name": "Mirroring cipher",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Cryptography",
      "Security"
    ]
  },
  {
    "id": "58af1bb7ac7e31b192000020",
    "name": "compute cube as sums",
    "approved": true,
    "tags": [
      "Puzzles",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "58e4377c46e371aee7001262",
    "name": "Geometry Basics: Triangle Area  in 2D",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "58fd91af13b0012e8e000010",
    "name": "Simple Fun #203: Strange Coach",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "592538b3071ba54511000219",
    "name": "Simple Fun #303: Prime Product",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a60d519400f93fc450032e5",
    "name": "Hop Across",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "52217066578afbcc260002d0",
    "name": "Sum of (Two) Squares",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "528a0762f51e7a4f1800072a",
    "name": "SKRZAT!!!",
    "approved": true,
    "tags": [
      "Algorithms",
      "Binary",
      "Logic"
    ]
  },
  {
    "id": "529f2d1c403a58f660000656",
    "name": "Basic JS - Building a calculator",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "54abfb827207c6355e00035b",
    "name": "Herding cats",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Sorting",
      "Algorithms",
      "Logic",
      "Advanced Language Features",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "55ec55323c89fc5fbd000019",
    "name": "Caesar Cipher Encryption - Variation",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Cryptography",
      "Security"
    ]
  },
  {
    "id": "571640812ad763313600132b",
    "name": "Upper <body> Strength",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Control Flow",
      "Basic Language Features",
      "Recursion",
      "Algorithms",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "574e890e296e412a0400149c",
    "name": "Fastest Code : Equal to 24",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "576fac714bc84c312c0000b7",
    "name": "Cryptography #1 - Viva Cesare",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Cryptography",
      "Security"
    ]
  },
  {
    "id": "5798bb604be912fb6700008c",
    "name": "Object-Oriented PHP #4 - People, people, people (Practice)",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57eead3b5f79f6d977001fb7",
    "name": "DigitAll",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "58409435258e102ae900030f",
    "name": "Parity bit - Error detecting code",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Binary",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "586214e1ef065414220000a8",
    "name": "Cut the cake",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5877786688976801ad000100",
    "name": "Creating a string for an array of objects from a set of words",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5888514674b58e929a000036",
    "name": "Simple Fun #49: Decipher",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5888a57cbf87c25c840000c6",
    "name": "It is written in the stars",
    "approved": true,
    "tags": [
      "Puzzles",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "5902ea9b378a92a990000016",
    "name": "Sum of Primes",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "59e61c577905df540000016b",
    "name": "Seven \"ate\" nine!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5a5db0f580eba84589000979",
    "name": "Plants and Zombies",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Games"
    ]
  },
  {
    "id": "5b2117eea454c89d4400005f",
    "name": "Leonardo numbers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "535a69fb36973f2aad000953",
    "name": "SMS Shortener",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Fundamentals",
      "Strings",
      "Data Types",
      "Utilities"
    ]
  },
  {
    "id": "5509609d1dbf20a324000714",
    "name": "Decimal to any Rational or Irrational Base Converter",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Fundamentals"
    ]
  },
  {
    "id": "55f1786c296de4952f000014",
    "name": "Length of the line segment",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Geometry",
      "Algebra"
    ]
  },
  {
    "id": "55f3facb78a9fd5b26000036",
    "name": "Always perfect",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "String Formatting",
      "Formatting",
      "Algorithms",
      "Logic",
      "Arrays",
      "Mathematics",
      "Numbers",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "55f91a98db47502cfc00001b",
    "name": "Where's Wally",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "5650f1a6075b3284120000c0",
    "name": "Checkered Board",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "566c3f5b9de85fdd0e000026",
    "name": "Walk-up Stairs ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "567ed5db4089538eea000010",
    "name": "Nuclear Missile Manager",
    "approved": true,
    "tags": [
      "Bugs",
      "Scopes",
      "Basic Language Features",
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Closures",
      "Asynchronous"
    ]
  },
  {
    "id": "56919e637b2b971492000036",
    "name": "PatternCraft  - Adapter",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Design Patterns",
      "Design Principles"
    ]
  },
  {
    "id": "57339a5226196a7f90001bcf",
    "name": "N-Point Crossover",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "573acc8cffc3d13f61000533",
    "name": "Rigged Dice",
    "approved": true,
    "tags": [
      "Refactoring"
    ]
  },
  {
    "id": "57fe864854685b1c420002e0",
    "name": "Sorting Arrays",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5829c6fe7da141bbf000021b",
    "name": "Compare section numbers",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Iterators",
      "Control Flow",
      "Object-oriented Programming",
      "Basic Language Features"
    ]
  },
  {
    "id": "58c8a6daa7f31a623200016a",
    "name": "Simple Fun #199: Pass The Bill",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "591144f42e6009675300001f",
    "name": "The Hunger Games - Foxes and Chickens",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "597ef546ee48603f7a000057",
    "name": "Most profit from stock quotes",
    "approved": true,
    "tags": [
      "Puzzles",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "59b72376460387017e000062",
    "name": "Hollow array",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5be7f613f59e0355ee00000f",
    "name": "Extended weekends",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "60dda5a66c4cf90026256b75",
    "name": "Some (but not all)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures",
      "Sequences",
      "Arrays",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "535c1c80cdbf5011e600030f",
    "name": "Keyword Cipher Helper",
    "approved": true,
    "tags": [
      "Refactoring",
      "Ciphers",
      "Algorithms",
      "Cryptography",
      "Logic",
      "Security",
      "Objects",
      "Data Types",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Fundamentals",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "54750ed320c64c64e20002e2",
    "name": "Singletons",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Dynamic Arrays",
      "Arrays",
      "Functional Programming",
      "Data Types",
      "Declarative Programming",
      "Programming Paradigms",
      "Vectors"
    ]
  },
  {
    "id": "5476f4ca03810c0fc0000098",
    "name": "Calculate the function f(x) for a simple linear sequence (Easy)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Sequences",
      "Arrays",
      "Data Types",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "54784a99b5339e1eaf000807",
    "name": "Calculate the function f(x) for a simple linear sequence (Medium)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Sequences",
      "Arrays",
      "Data Types",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "55208f16ecb433c5c90001d2",
    "name": "Matrix Trace",
    "approved": true,
    "tags": [
      "Algorithms",
      "Linear Algebra",
      "Algebra",
      "Mathematics",
      "Logic",
      "Numbers",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "55df87b23ed27f40b90001e5",
    "name": "N-Parasitic Numbers Ending in N",
    "approved": true,
    "tags": [
      "Puzzles",
      "Numbers",
      "Data Types",
      "Algorithms",
      "Logic",
      "Mathematics"
    ]
  },
  {
    "id": "56a1c63f3bc6827e13000006",
    "name": "How many are smaller than me II?",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "576b072359b1161a7b000a17",
    "name": "Pascal's Diagonals",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5779f894ec8832493f00002d",
    "name": " Calculate Fibonacci  return count of digit occurrences",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "586305e8916e244b66001a93",
    "name": "Mirror object - tcejbo rorriM",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Strings",
      "Objects"
    ]
  },
  {
    "id": "588534713472944a9e000029",
    "name": "Binary search tree validation",
    "approved": true,
    "tags": [
      "Algorithms",
      "Trees",
      "Data Structures",
      "Recursion",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "58a672d6426bf38be4000057",
    "name": "Find the in-between point",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "58bee820e9f98b215200007c",
    "name": "Selective memory",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58dceee2c9613aacb40000b9",
    "name": "Geometry Basics: Distance between points in 3D",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5976c5a5cd933a7bbd000029",
    "name": "Faberge easter eggs crush test [linear]",
    "approved": true,
    "tags": [
      "Algorithms",
      "Performance",
      "Logic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "59f8750ac374cba8f0000033",
    "name": "Life without primes",
    "approved": true,
    "tags": [
      "Algorithms",
      "Sequences",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5ab52526379d20736b00000e",
    "name": "Help the Elite Squad of Brazilian forces BOPE",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5b1e2c04553292dacd00009e",
    "name": "Prime Word",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5bc027fccd4ec86c840000b7",
    "name": "Simple sum of pairs",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5f70c55c40b1c90032847588",
    "name": "Generala - Dice Game",
    "approved": true,
    "tags": [
      "Algorithms",
      "Games"
    ]
  },
  {
    "id": "52654ea8e218b83553000666",
    "name": "Binary string",
    "approved": true,
    "tags": [
      "Algorithms",
      "Bits",
      "Binary"
    ]
  },
  {
    "id": "543e926d38603441590021dd",
    "name": "Get All Possible Anagrams from a Hash",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "544bdc2ec29fb3456e00064a",
    "name": "Ping-Pong service problem",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "54b8204dcd7f514bf2000348",
    "name": "Simplexer",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Numbers",
      "Expressions",
      "Basic Language Features",
      "Logic",
      "Parsing"
    ]
  },
  {
    "id": "55c0ee3b9951adceaa00005f",
    "name": "Extract Values and Units",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Parsing",
      "Algorithms",
      "Logic",
      "Strings"
    ]
  },
  {
    "id": "566859a83557837d9700001a",
    "name": "Divisible Ints",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Integers",
      "Arithmetic",
      "Mathematics",
      "Logic"
    ]
  },
  {
    "id": "5702e2f380b8c86df3000003",
    "name": "TDD Area Calculations",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "570bbf7b6731d44b36001fde",
    "name": "Shortest Code : Jumping Dutch act",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5816b76988ca9613cc00024f",
    "name": "Sort the number sequence",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5876e24130b45aaa0c00001d",
    "name": "Esolang: Ticker",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Interpreters",
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "588810c99fb63e49e1000606",
    "name": "Simple Fun #38:  House Of Cats",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58942f9175f2c78f4b000108",
    "name": "Simple Fun #78: Build Palindrome",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58e440d8acfd3edfb2000aee",
    "name": "Geometry Basics: Cross Product in  3D",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59759761e30a19cfe1000024",
    "name": "Percentage of amino acids",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59ab0ca4243eae9fec000088",
    "name": "Summation Of Primes",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Arithmetic"
    ]
  },
  {
    "id": "5a036ecb2b651d696f00007c",
    "name": "Drawing a Cross!",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Fundamentals",
      "Algorithms",
      "Logic",
      "ASCII",
      "Character Encodings",
      "Formats"
    ]
  },
  {
    "id": "5a16cab2c9fc0e09ce000097",
    "name": "Simple  array rotation",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5a21f943c5e284d4340000cb",
    "name": "Bug Squish!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Bugs",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5a39724945ddce2223000800",
    "name": "Visible Dots On a Die",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5a4331b18f27f2b31f000085",
    "name": "Replace letters",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Basic Language Features"
    ]
  },
  {
    "id": "5b883cdecc7c03c0fa00015a",
    "name": "IP address finder [Code-golf]",
    "approved": true,
    "tags": [
      "Puzzles",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "559d34cb2e65e765b90000f0",
    "name": "String Suffixes",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Logic",
      "Arrays"
    ]
  },
  {
    "id": "5636840bd87777688b00006c",
    "name": "Basics - Generators #1",
    "approved": true,
    "tags": [
      "Fundamentals",
      "ES2015",
      "Babel"
    ]
  },
  {
    "id": "563ce9b8b91d25a5750000b6",
    "name": "Another one down—the Survival of the Fittest!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures",
      "Arrays",
      "Data Types",
      "Iterators",
      "Control Flow",
      "Object-oriented Programming",
      "Basic Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "56b3b27cadd4ad275500000c",
    "name": "Count words",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "56c2578be8b139bd5c001bd8",
    "name": "Job Matching #2",
    "approved": true,
    "tags": [
      "Algorithms",
      "Objects",
      "Data Types",
      "Arrays",
      "Filtering",
      "Logic"
    ]
  },
  {
    "id": "5834a44e44ff289b5a000075",
    "name": "MTV Cribs",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Control Flow",
      "Basic Language Features",
      "Loops"
    ]
  },
  {
    "id": "5a434a9dc5e284724f000011",
    "name": "The most common letter",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays",
      "Basic Language Features"
    ]
  },
  {
    "id": "5aa99584fd5777ee9a0001f1",
    "name": "Fat Fingers",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5b096efeaf15bef812000010",
    "name": "nth Floyd line",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Optimization",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5e2aec959bce5c001f090c4d",
    "name": "Mighty Hero",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "5e882048999e6c0023412908",
    "name": "DefaultList",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "54162d1333c02486a700011d",
    "name": "Penultimate",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "5456812629ccbf311b000078",
    "name": "Cycle a list of values",
    "approved": true,
    "tags": [
      "Algorithms",
      "Monads",
      "Data Structures",
      "Functional Programming"
    ]
  },
  {
    "id": "55491e9e50f2fc92f3000074",
    "name": "Your Ride Is Here",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "55e1d2ba1a3229674d000037",
    "name": "Linked Lists - Front Back Split",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Linked Lists",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "5603a4dd3d96ef798f000068",
    "name": "Share prices",
    "approved": true,
    "tags": [
      "Algorithms",
      "Formatting",
      "Logic",
      "Arithmetic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "56dc4f570a10feaf0a000850",
    "name": "Alien Beer Morse Code",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "573e6831e3201f6a9b000971",
    "name": "Training JS #41: Regular Expression--\"\\\"",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "580559b17ab3396c58000abb",
    "name": "How many points did the teams from Los Angeles score?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Data Structures",
      "Arrays",
      "Data Types",
      "Numbers",
      "Optimization",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings"
    ]
  },
  {
    "id": "58cfa5bd1c694fe474000146",
    "name": "Socialist distribution",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Lists",
      "Data Structures",
      "Statistics",
      "Data",
      "Logic"
    ]
  },
  {
    "id": "5b56e42805f04b1780000073",
    "name": "Farthest Distance",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5cb7baa989b1c50014a53333",
    "name": "Is Sator Square?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Data Structures",
      "Sequences"
    ]
  },
  {
    "id": "55486cb94c9d3251560000ff",
    "name": "Width-Height Ratio",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "55cc20eb943f1d8b11000045",
    "name": "X marks the spot!",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "56001790ac99763af400008c",
    "name": "Compute the Largest Sum of all Contiguous Subsequences",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Types",
      "Fundamentals"
    ]
  },
  {
    "id": "565b3542af398bfb50000003",
    "name": "Count strings in objects",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Objects",
      "Data Types",
      "Strings",
      "Arrays",
      "Loops"
    ]
  },
  {
    "id": "5716955a794d3013d00013f9",
    "name": "The unknown but known variables: Addition",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "573248f48e531896770001f9",
    "name": "Matrix Multiplier",
    "approved": true,
    "tags": [
      "Algorithms",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "57520361f2dac757360018ce",
    "name": "Professor Oak's Trouble - New Pokedex prototype",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Methods",
      "Functions",
      "Control Flow"
    ]
  },
  {
    "id": "5884ce61f36b6d738b000053",
    "name": "Playing with Sets : Union",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Sets",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5917fbed9f4056205a00001e",
    "name": "Bananas",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "59656c69253c365e58000046",
    "name": "maxPossibleScore",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Objects",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "59eb1e4a0863c7ff7e000008",
    "name": "The boolean order",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "60a54750138eac0031eb98e1",
    "name": "VIN Checker",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Logic",
      "Parsing"
    ]
  },
  {
    "id": "5253d3a24f16f061cd000228",
    "name": "Yield to the Block",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Blocks",
      "Object-oriented Programming",
      "Functions",
      "Programming Paradigms",
      "Control Flow",
      "Basic Language Features",
      "Functional Programming",
      "Declarative Programming",
      "Higher-order Functions"
    ]
  },
  {
    "id": "5443dd2d7fc4478154000ac6",
    "name": "Fix it",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55e2de13b668981d3300003d",
    "name": "Derivatives of type x^n",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings"
    ]
  },
  {
    "id": "567b21565ffbdb30e3000010",
    "name": "Genetic Algorithm Series - #5 Roulette wheel selection",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Genetic Algorithms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "56b4af8ac6167012ec00006f",
    "name": "Number Shortening Filter",
    "approved": true,
    "tags": [
      "Algorithms",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Angular"
    ]
  },
  {
    "id": "58311faba317216aad000168",
    "name": "Format to the 2nd",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "58885a7bf06a3d466e0000e3",
    "name": "Simple Fun #52: Pair Of Shoes",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58bccdf56f25ff6b6d00002f",
    "name": "Simple Fun #181: Rounding",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5923fbc72eafa9bcff00011a",
    "name": "Multiplying numbers as strings: Part II",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Strings",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5996eb39cdc8eb39f80000a0",
    "name": "Round and Round",
    "approved": true,
    "tags": [
      "Bugs",
      "Fundamentals"
    ]
  },
  {
    "id": "5a00a8b5ffe75f8888000080",
    "name": "Zeros and Ones",
    "approved": true,
    "tags": [
      "Algorithms",
      "Puzzles",
      "Games",
      "Logic"
    ]
  },
  {
    "id": "5ac739ed3fdf73d3f0000048",
    "name": "Church Booleans",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lambdas",
      "Functional Programming",
      "Functions",
      "Declarative Programming",
      "Programming Paradigms",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5b3077019212cbf803000057",
    "name": "TV Remote (symbols)",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5bb493932ce53339dc0000c2",
    "name": "Stacked Balls - 3D (square base)",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5e4eb72bb95d28002dbbecde",
    "name": "regex pattern to check if string has all characters",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "55143152820d22cdf00001bb",
    "name": "count '9's from 1 to n",
    "approved": true,
    "tags": [
      "Algorithms",
      "Puzzles",
      "Games",
      "Fundamentals",
      "Logic"
    ]
  },
  {
    "id": "552cd8624a414ec2b2000086",
    "name": "Deutschstunde",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Games"
    ]
  },
  {
    "id": "559656796d8fb52e17000003",
    "name": "Transpose of a Matrix",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Linear Algebra",
      "Algebra",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Graphs",
      "Data Structures",
      "Numbers",
      "Data Types",
      "Control Flow",
      "Basic Language Features",
      "Loops",
      "Arrays"
    ]
  },
  {
    "id": "55ddcef532f8678af1000006",
    "name": "Python's Dynamic Classes #2",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Classes",
      "Basic Language Features"
    ]
  },
  {
    "id": "56121f3312baa28c8500005b",
    "name": "I love big nums and I cannot lie",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Strings",
      "Arrays"
    ]
  },
  {
    "id": "56bcae6366a2ab99f10011ec",
    "name": "Digit Sum",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56ed5f13c4e5d6c5b3000745",
    "name": "Paperboy",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "56f2d43fe40b70a442000f26",
    "name": "Sorted Arrays",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Logic",
      "Performance"
    ]
  },
  {
    "id": "579a09787cb7a14d0b000057",
    "name": "Object-Oriented PHP #5 - Classical Inheritance",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57fd6c4fa5372ead1f0004aa",
    "name": "Would you believe... Talk like Siegfried",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "58bf97cde4a5edfd4f00008d",
    "name": "Simple Fun #189: Plant Doubling",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58fd96a59a9f65c2e900008d",
    "name": "Simple Fun #204: Smallest Integer",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5902f1839b8e720287000028",
    "name": "Simple Fun #223: Parameter Of Number",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "59bc0059bf10a498a6000025",
    "name": "Mutate My Strings",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Conditional Statements"
    ]
  },
  {
    "id": "5a996f3d5084d73a7100040c",
    "name": "Death Star Construction",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5e0f6a3a2964c800238ca87d",
    "name": "Return String As Sorted Blocks",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Basic Language Features"
    ]
  },
  {
    "id": "5f25f475420f1b002412bb1f",
    "name": "Car Number Plate Calculator",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Fundamentals"
    ]
  },
  {
    "id": "5483366098aa442def0009af",
    "name": "Hex class",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Parsing",
      "Strings",
      "Numbers",
      "Data Types",
      "Data Conversion",
      "Data",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "55e725b930957a038a000042",
    "name": "Linked Lists - Recursive Reverse",
    "approved": true,
    "tags": [
      "Algorithms",
      "Linked Lists",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "56e195d02bb22479e50016af",
    "name": "Pernicious Numbers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Binary",
      "Logic",
      "Sequences"
    ]
  },
  {
    "id": "5750699bcac40b3ed80001ca",
    "name": "Match My Husband",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5863f1c8b359c4dd4e000001",
    "name": "Bulk up!",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5917f22dd2563a36a200009c",
    "name": "Algebraic Isomorphism",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "59279aea8270cc30080000df",
    "name": "The Freeway Game",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "593c0ebf8b90525a62000221",
    "name": "Grocer Grouping",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5d0d1c14c843440026d7958e",
    "name": "Guarding the AlgoLandia",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Fundamentals",
      "Data Types"
    ]
  },
  {
    "id": "5298961d9ce954d77b0003a6",
    "name": "The range() function",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Ranges",
      "Basic Language Features",
      "Numbers",
      "Data Types",
      "Integers"
    ]
  },
  {
    "id": "52a0849a852a854d050005f4",
    "name": "Operator overload ?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Prototype-based Programming",
      "Programming Paradigms",
      "Prototypes"
    ]
  },
  {
    "id": "55035eb47451fb61c0000288",
    "name": "Ookkk, Ok, O?  Ook, Ok, Ooo!",
    "approved": true,
    "tags": [
      "Puzzles",
      "Strings",
      "Data Types",
      "Binary"
    ]
  },
  {
    "id": "55d8aa568dec9fb9e200004a",
    "name": "How Many Numbers?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Structures"
    ]
  },
  {
    "id": "55eee789637477c94200008e",
    "name": "Sequence generator",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Basic Language Features",
      "Numbers",
      "Data Types",
      "Sequences",
      "Arrays"
    ]
  },
  {
    "id": "563b8a23b554206f49000059",
    "name": "Dave's gamble.",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "56ce2f90aa4ac7a4770019fa",
    "name": "Help Mr. E",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Formatting",
      "Algorithms",
      "Logic",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "56d6b921c9ae3fd926000601",
    "name": "Strings, strings, strings (Easy)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Prototype-based Programming",
      "Prototypes"
    ]
  },
  {
    "id": "588805ca44c7e8c3a100013c",
    "name": "Simple Fun #35:  Different Squares",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58a8807c5336a3f613000157",
    "name": "Get the square of a number without ** or * or pow()",
    "approved": true,
    "tags": [
      "Puzzles",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59280c056d6c5a74ca000149",
    "name": "Simultaneous Equations - Three Variables",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "593e978a3bb47a8308000b8f",
    "name": "Matrix Rotation",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "5951b409aea9beff3f0000c6",
    "name": "Simple Fun #327: The Final Attack Value",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5977b6641e250a661a0000f0",
    "name": "Counting overlapping events",
    "approved": true,
    "tags": [
      "Algorithms",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "59923f1301726f5430000059",
    "name": "Simple Finite State Machine Compiler",
    "approved": true,
    "tags": [
      "Fundamentals",
      "State Machines",
      "Computational Science",
      "Theoretical Computer Science",
      "Design Patterns",
      "Interpreters",
      "Algorithms",
      "Logic",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Compiler Theory"
    ]
  },
  {
    "id": "59cf0ba5d751dffef300001f",
    "name": "Simple Fun #358: Vertical Histogram Of Letters",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5aa7a581fd8c06b552000177",
    "name": "The 5 Love Languages",
    "approved": true,
    "tags": [
      "Algorithms",
      "Machine Learning",
      "Applied Computer Science",
      "Logic"
    ]
  },
  {
    "id": "5b93636ba28ce032600000b7",
    "name": "Simple reversal game",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5f5bc8a04e485f002d85b303",
    "name": "Weird IPv6 hex string parsing",
    "approved": true,
    "tags": [
      "Algorithms",
      "Parsing",
      "Logic",
      "Strings",
      "Collections",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "53efc28911c36ff01e00012c",
    "name": "Counting inner calls in an unknown function.",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "53ffbba24e9e1408ee0008fd",
    "name": "Knapsack Part 1 - The Greedy Solution",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Sorting"
    ]
  },
  {
    "id": "5442e4fc7fc447653a0000d5",
    "name": "Greatest Position Distance Between Matching Array Values",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5508b1d298b3238397000a56",
    "name": "Return Specifics from an Object.",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "559ee79ab98119dd0100001d",
    "name": "Bob's reversing obfuscator",
    "approved": true,
    "tags": [
      "Puzzles",
      "Decoding",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "55e7d9d63bdc3caa2500007d",
    "name": "Satisfying numbers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "56d3e702fc231fdf72001779",
    "name": "Binary sXORe",
    "approved": true,
    "tags": [
      "Algorithms",
      "Binary",
      "Bitwise Operators",
      "Bits",
      "Operators",
      "Advanced Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "57a98e8172292d977b000079",
    "name": "LOTTO 6 aus 49 - 6 of 49",
    "approved": true,
    "tags": [
      "Algorithms",
      "Basic Language Features",
      "Fundamentals",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "57c178e16662d0d932000120",
    "name": "Bundesliga 1. Spieltag - First Match Day",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Basic Language Features",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "57e7d21f6603f6e31f00007c",
    "name": "The Crockford Invocation",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "580e67ae22e42d797000015e",
    "name": "Oh dear God! Is it bugged?",
    "approved": true,
    "tags": [
      "Bugs",
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "586423aa39c5abfcec0001e6",
    "name": "Sortable Poker Hands",
    "approved": true,
    "tags": [
      "Algorithms",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Games",
      "Fundamentals",
      "Sorting",
      "Logic",
      "Design Patterns",
      "Design Principles",
      "Objects",
      "Data Types"
    ]
  },
  {
    "id": "5873b2010565844b9100026d",
    "name": "Begin your day with a challenge, but an easy one.",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58bc8304b238c8e29b0000f6",
    "name": "Matrix Addition of Elements",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Graphs",
      "Data Structures",
      "Arrays",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "58fd52b59a9f65c398000096",
    "name": "Simple Fun #202: Min And Max",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5956d127a817c7c51b000026",
    "name": "These are not my grades! (Revamped !)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Bugs"
    ]
  },
  {
    "id": "5963caa2cb97be79630000c0",
    "name": "Are all elements equal?",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a5e4f5f118dd1b407000028",
    "name": "Cantor's Diagonals",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5af4119888214326b4000019",
    "name": "Amidakuji",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5d81d8571c6411001a40ba66",
    "name": "Dots and Boxes Validator",
    "approved": true,
    "tags": [
      "Algorithms",
      "Games"
    ]
  },
  {
    "id": "524c74f855025e2495000262",
    "name": "Texas Hold'em Hands",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "536e7c7fd38523be14000ca2",
    "name": "Simple Memory Manager",
    "approved": true,
    "tags": [
      "Algorithms",
      "Linked Lists",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "53d4eec01f1a9b3020000786",
    "name": "Anonymous Returns.",
    "approved": true,
    "tags": [
      "Bugs"
    ]
  },
  {
    "id": "546e416c8e3b6bf82f0002f2",
    "name": "Binding within the List Monad",
    "approved": true,
    "tags": [
      "Algorithms",
      "Monads",
      "Data Structures",
      "Functional Programming",
      "Lists"
    ]
  },
  {
    "id": "556f4a5baa4ea7afa1000046",
    "name": "Largest Numeric Palindrome",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Performance"
    ]
  },
  {
    "id": "55e1990978c60e5052000011",
    "name": "Merge in 2048",
    "approved": true,
    "tags": [
      "Algorithms",
      "Games",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "55f91566e0d2317066000057",
    "name": "YACK (Yet  Another  Currying Kata)",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56b3b9c7a6df24cf8c00000e",
    "name": "Nested List Depth",
    "approved": true,
    "tags": [
      "Algorithms",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "56b7526481290c2ff1000c75",
    "name": "Triple Shiftian Numbers",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Sequences",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "570e5d0b93214b1a950015b1",
    "name": "Coding 3min : Special factor",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "579ba41ce298a73aaa000255",
    "name": "Name That Number!",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "580be55ca671827cfd000043",
    "name": "Word Challenges at School",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Control Flow",
      "Basic Language Features",
      "Logic",
      "Strings",
      "Data Types",
      "Data Structures",
      "Algorithms",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5888445107a0d57711000032",
    "name": "Simple Fun #45: New Numeral System",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5933af2db328fbc731000010",
    "name": "Get Smallest Common Factor",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "596925532f709fccf3000077",
    "name": "FizzBuzz++",
    "approved": true,
    "tags": [
      "Algorithms",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "59b0492f7d3c9d7d4a0000bd",
    "name": "Madhav array",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "59ddeeb2fc3c49186f00009c",
    "name": "Symbols counted ",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a622f5f85bef7a9e90009e2",
    "name": "Reverse FizzBuzz",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "60a94f1443f8730025d1744b",
    "name": "Alphabetical Grid",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "61044b64704a9e0036162a1f",
    "name": "Pile of towels",
    "approved": true,
    "tags": [
      "Algorithms",
      "Sorting",
      "Logic",
      "Numbers",
      "Data Types",
      "Integers"
    ]
  },
  {
    "id": "5227129b316b56d50d0003b7",
    "name": "Two levels arrays",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Utilities"
    ]
  },
  {
    "id": "55e86e212fce2aae75000060",
    "name": "Integers: Recreation Two",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5705c699cb729350870003b7",
    "name": "What Color is Your Name?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Puzzles",
      "Games",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "57066ad6cb72934c8400149e",
    "name": "Chuck Norris V - Body Count",
    "approved": true,
    "tags": [
      "Algorithms",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings"
    ]
  },
  {
    "id": "57af26297f75b57d1f000225",
    "name": "Truncate a string!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "57c75baffa9fc534f7001475",
    "name": "Mind the Gap",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "587854330594a6fb7e000057",
    "name": "Math engine",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "588468f3b3d02cf67b0005cd",
    "name": "Simple Fun #15: Addition without Carrying",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5886faac54a7111c21000072",
    "name": "Simple Fun #29:  Is MAC48 Address?",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "592e2446dc403b132d0000be",
    "name": "Simple Fun #312: Maximum Product",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "594a7ea087a7c6cbe60000d6",
    "name": "Oh come on! Hello world! once again?",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "59a2af923203e8220b00008f",
    "name": "Micro Optimization: Digit Sum",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Optimization"
    ]
  },
  {
    "id": "5a5cdb07fd56cbdd3c00005b",
    "name": "Unknown amount of duplicates. One missing number.",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Declarative Programming",
      "Programming Paradigms",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Numbers",
      "Data Types",
      "Sequences",
      "Arrays",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Sorting",
      "Performance"
    ]
  },
  {
    "id": "5a5f48f2880385daac00006c",
    "name": "Arrays of cats and dogs",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "619f200fd0ff91000eaf4a08",
    "name": "Odd or Even? Determine that!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "51f9d3a6e5a42591ae0001eb",
    "name": "Object extend",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Objects",
      "Utilities"
    ]
  },
  {
    "id": "550cb646b9e7b565d600048a",
    "name": "Scheduling (Round-Robin)",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "556206664efbe6376700005c",
    "name": "Polydivisible Numbers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arithmetic",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5603002927a683441f0000cb",
    "name": "Are you available?",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "562b384167350ac93b00010c",
    "name": "Weird prime generator",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "565f448e6e0190b0a40000cc",
    "name": "Food combinations",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "570ac43a1618ef634000087f",
    "name": "nova polynomial  1. add",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "571bff6082661c8a11000823",
    "name": "Number of permutations without repetitions",
    "approved": true,
    "tags": [
      "Algorithms",
      "Permutations",
      "Logic"
    ]
  },
  {
    "id": "5872637c2eefcb1216000081",
    "name": "String destroyer (plus extra credit)",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58ce88427e6c3f41c2000087",
    "name": "Am I safe to drive?",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58e3ffb01f878507e00005b0",
    "name": "Empty that array!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Data"
    ]
  },
  {
    "id": "598e045b8c13926d8c0000e8",
    "name": "Break the Caesar!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Ciphers",
      "Algorithms",
      "Cryptography",
      "Logic",
      "Security",
      "Encryption",
      "Decryption"
    ]
  },
  {
    "id": "59c68ea2aeb2843e18000109",
    "name": "Financing a purchase",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "59ce11ea9f0cbc8a390000ed",
    "name": "Dominant primes",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "53ea3ad17b5dfe1946000278",
    "name": "Sierpinski's Gasket",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "54120de842dff35232000195",
    "name": "NIM the game",
    "approved": true,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Games",
      "Bitwise Operators",
      "Bits",
      "Operators",
      "Advanced Language Features",
      "Binary",
      "Fundamentals"
    ]
  },
  {
    "id": "54729e48e1d2a369e00000d3",
    "name": "Rotation Cipher Cracker",
    "approved": true,
    "tags": [
      "Puzzles",
      "Ciphers",
      "Algorithms",
      "Cryptography",
      "Logic",
      "Security"
    ]
  },
  {
    "id": "5483930b98aa44a34d000e54",
    "name": "Price VAT Calculator",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "556025c8710009fc2d000011",
    "name": "(L33T + Grεεκ) Case",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Objects",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "55953e906851cf2441000032",
    "name": "Typoglycemia Generator",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55fb6537544ae06ccc0000dc",
    "name": "Summarize ranges",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "57102bbfd860a3369300089c",
    "name": "AD2070: Help Lorimar troubleshoot his robots-  ultrasonic distance analysis",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Statistics",
      "Data"
    ]
  },
  {
    "id": "5846174c5955406d02000b59",
    "name": "The Four Seasons",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5864cdc483f7e6df980001c8",
    "name": "Thinkful - Logic Drills: Red and bumpy",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Conditional Statements",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5865a407b359c45982000036",
    "name": "All Star Code Challenge #19",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Permutations",
      "Algorithms",
      "Logic",
      "Arrays"
    ]
  },
  {
    "id": "58870402c81516bbdb000088",
    "name": "Simple Fun #30:  Strings  Construction",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58bfa1ea43fadb41840000b4",
    "name": "Simple Fun #190: Folding Paper",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "592bdf59912f2209710000e9",
    "name": "GA-DE-RY-PO-LU-KI cypher vol 3 - Missing key",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Encryption",
      "Algorithms",
      "Cryptography",
      "Logic",
      "Security"
    ]
  },
  {
    "id": "5970f479e75b6c00ce000043",
    "name": "How can I throw an error here?",
    "approved": true,
    "tags": [
      "Puzzles",
      "Advanced Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "59aa6567485a4d03ff0000ca",
    "name": "Prime reduction",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5b61d6ef07a266d40b000097",
    "name": "A Promise is a Promise",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "527c1fc78699012e43000cc8",
    "name": "Functional Binary Trees",
    "approved": true,
    "tags": [
      "Algorithms",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Binary Search Trees",
      "Trees",
      "Binary",
      "Data Structures"
    ]
  },
  {
    "id": "52ae2db783f47875d0000064",
    "name": "#Hashtag",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals"
    ]
  },
  {
    "id": "53b406e67040e51e17000c0a",
    "name": "LRU Cache",
    "approved": true,
    "tags": [
      "Algorithms",
      "Data Structures",
      "Metaprogramming",
      "Programming Paradigms",
      "Advanced Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "53c2c3e78d298dddda000460",
    "name": "Implementing Array.prototype.groupBy method",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Prototypes",
      "Iterators",
      "Control Flow",
      "Object-oriented Programming",
      "Basic Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "53d045892578b1be8b0001c4",
    "name": "Tail recursion with trampoline",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Recursion",
      "Algorithms",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "53dc08fa8a0c93229400023b",
    "name": "Checkerboard Generation",
    "approved": true,
    "tags": [
      "Algorithms",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Conditional Statements"
    ]
  },
  {
    "id": "5505552bd181b990d9000caf",
    "name": "Deletion in an array",
    "approved": true,
    "tags": [
      "Bugs",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5515395b9cd40b2c3e00116c",
    "name": "Linear Regression of Y on X",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Statistics",
      "Algorithms",
      "Data",
      "Logic",
      "Geometry",
      "Algebra",
      "Mathematics"
    ]
  },
  {
    "id": "55186c0f4149dd08a7000006",
    "name": "Overflowing with joy",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "558aa460dcfb4a94c40001d7",
    "name": "Fuel economy converter (mpg  <-> L/100 km)",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "559fed8454b12433ff0000a2",
    "name": "sum2total",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Logic",
      "Mathematics",
      "Algorithms",
      "Numbers",
      "Arrays",
      "Data Types",
      "Lists",
      "Data Structures",
      "Arithmetic"
    ]
  },
  {
    "id": "55fd4919ce2a1d7c0d0000f3",
    "name": "Two cube sums",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "56fcc1ee45040039ab0016da",
    "name": "Fun with ES6 Classes #4 - Cubes and Setters",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "573fb9223f9793e485000453",
    "name": "Training JS #42: Regular Expression--( ?: ), ( ?= ) and ( ?! )",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "582c2dffd82a1ff03000000a",
    "name": "[BF] Hello World!",
    "approved": true,
    "tags": [
      "Algorithms",
      "Esoteric Languages"
    ]
  },
  {
    "id": "5865dd726b56998ec4000185",
    "name": "All Star Code Challenge #23",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58694d1c2e8d9c6d9b000296",
    "name": "Get all array elements except those with specified indexes",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Arrays",
      "Data Types",
      "Logic",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "588d54c2ce8a3532a500001b",
    "name": "Day of The Week",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "5898761a9c700939ee000011",
    "name": "Corner circle",
    "approved": true,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "59f897ecc374cb9ed90000c2",
    "name": "Monkey Talk",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Conditional Statements",
      "Control Flow",
      "Basic Language Features",
      "Loops",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5ac95cb05624bac42e000005",
    "name": "Frequency Analysis With Buckets",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Integers",
      "Arrays",
      "Sorting",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5acfab8d23c81836c90000eb",
    "name": "Converting Measures",
    "approved": true,
    "tags": [
      "Algorithms",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings"
    ]
  },
  {
    "id": "513e7e1aee7d36073e00000d",
    "name": "Custom each() Array method",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Prototypes"
    ]
  },
  {
    "id": "52a224d9e6d7a078200007b2",
    "name": "The Desperate Rocket Scientist",
    "approved": true,
    "tags": [
      "Puzzles",
      "Arrays",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Bugs",
      "Games"
    ]
  },
  {
    "id": "54808e45ab03a2c8330009fb",
    "name": "Secret Message",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "54bebed0d5b56c5b2600027f",
    "name": "Debugger",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Metaprogramming",
      "Programming Paradigms",
      "Advanced Language Features",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming"
    ]
  },
  {
    "id": "54d3eae3525c153b21000e3b",
    "name": "String Integer Greater-than",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Integers",
      "Strings"
    ]
  },
  {
    "id": "55905b7597175ffc1a00005a",
    "name": "Paginating a huge book",
    "approved": true,
    "tags": [
      "Refactoring",
      "Performance"
    ]
  },
  {
    "id": "55e5253dcd20f821c400008e",
    "name": "Linked Lists - Shuffle Merge",
    "approved": true,
    "tags": [
      "Algorithms",
      "Linked Lists",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "5697a0d35f754d1592000018",
    "name": "Are they square 2?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "56b18992240660a97c00000a",
    "name": "Permutation Average",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "56b71b1dbd06e6d88100092a",
    "name": "Understanding closures - the basics",
    "approved": true,
    "tags": [
      "Bugs",
      "Closures",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "56c9f47b0844d85f81000fc2",
    "name": "Take a picture !",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "5723b111101f5f905f0000a5",
    "name": "Parallel resistors",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Basic Language Features"
    ]
  },
  {
    "id": "57efa1a2108d3f73f60000e9",
    "name": "Shaving the Beard",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5aaae0f5fd8c069e8c00016e",
    "name": "Find the Word Pair!",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Performance"
    ]
  },
  {
    "id": "5ab84aa4206a29ce21000047",
    "name": "One Line Task: Area Or Perimeter",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5c79c07b4ba1e100097f4e1a",
    "name": "Yoga Class",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Fundamentals"
    ]
  },
  {
    "id": "5e7e4b7cd889f7001728fd4a",
    "name": "Array to HTML table",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5143cc9694a24abcd2000001",
    "name": "Does array x contain all values within array  y?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "524ada2bdc2121b521000353",
    "name": "The Captain's Distance Request",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "52aaf51822e82a808100066b",
    "name": "replaceAll(input, find, replace)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals"
    ]
  },
  {
    "id": "53ad7224454985e4e8000eaa",
    "name": "Dragon's Curve",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "5411e3e95f3a7f6a7a0000e3",
    "name": "Array#reduce",
    "approved": true,
    "tags": [
      "Algorithms",
      "Map/Reduce",
      "Logic",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Higher-order Functions",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Methods",
      "Object-oriented Programming"
    ]
  },
  {
    "id": "5419cf8939c5ef0d50000ef2",
    "name": "Same Birthday Probability",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "541db50c259d9c55c00007b9",
    "name": "Node.js Intro",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Basic Language Features",
      "Encoding",
      "Algorithms",
      "Logic",
      "Decoding"
    ]
  },
  {
    "id": "5682e1082cc7862db5000039",
    "name": "Regexp basics - parsing integers",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "56f282ec9cf0284f5e0005f2",
    "name": "Incorrect array_remove method",
    "approved": true,
    "tags": [
      "Bugs"
    ]
  },
  {
    "id": "57be6a612eaf7cc3af000178",
    "name": "Magic Square Validator",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57d4ecb8164a67b97c00003c",
    "name": "Help Suzuki purchase his Tofu!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Data Structures"
    ]
  },
  {
    "id": "57f7e7617a28db2a2200021a",
    "name": "Multiply list by integer (with restrictions)",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Lists",
      "Data Structures",
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "58143221f9588e340e00009f",
    "name": "Linux history and  `!` command. Series#1  The `!!` command",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Parsing",
      "Logic",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals"
    ]
  },
  {
    "id": "5838a66eaed8c259df000003",
    "name": "Palindromes Here and There",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "584dee06fe9c9aef810001e8",
    "name": "Last digits of N^2 == N",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "584e93a70f60247eb8000132",
    "name": "Perfect Square.",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "588ac50727eb94c87700001f",
    "name": "ONE ONe One one",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Performance"
    ]
  },
  {
    "id": "59e72bdcfc3c4974190000d9",
    "name": "Cogs 2",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59e8afdd0863c7bcb300013a",
    "name": "Give me the k first digits. Odd digits.",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Basic Language Features",
      "Arithmetic"
    ]
  },
  {
    "id": "5aa1031a7c7a532be30000e5",
    "name": "The queen on the chessboard",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5b40a38f6be5d82775000003",
    "name": "Jewel Thief",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5b6b67a5ecd0979e5b00000e",
    "name": "Range of Integers in an Unsorted String",
    "approved": true,
    "tags": [
      "Puzzles",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5589ad588ee1db3f5e00005a",
    "name": "Complete The Pattern #11 - Plus",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "561f9d37e4786544e0000035",
    "name": "You look like a classy instance! Show me what you've got! - Part 1",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Basic Language Features",
      "Classes",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Strings",
      "Data Types",
      "Lists"
    ]
  },
  {
    "id": "56fe17fcc25bf3e19a000292",
    "name": "Disguised sequences (II)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "570564e838428f2eca001d73",
    "name": "Chuck Norris I - Push Ups",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Binary",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "5705ca6a41e5be67720012c0",
    "name": "Perfect squares,  perfect fun",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "575690ee34a34efb37001796",
    "name": "Split string by multiple delimiters",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic",
      "Arrays",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "579893057cb7a1be7900030d",
    "name": "Object-Oriented PHP #3 - Class Constants and Static Methods",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57acc8c3e298a7ae4e0007e3",
    "name": "Integer with the longest Collatz sequence",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Arithmetic",
      "Mathematics",
      "Numbers",
      "Sequences",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "583a02740b0a9fdf5900007c",
    "name": "[Minecraft Series #2] Minimum amount of fuel needed to get some iron ingots",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59146f7b4670ba520900000a",
    "name": "Real Password Cracker",
    "approved": true,
    "tags": [
      "Algorithms",
      "Security",
      "Hashes",
      "Data Structures",
      "Cryptography"
    ]
  },
  {
    "id": "591aa1752afcb02fa300002a",
    "name": "Thue-Morse Sequence",
    "approved": true,
    "tags": [
      "Algorithms",
      "Sequences",
      "Arrays",
      "Data Types",
      "Strings",
      "Binary"
    ]
  },
  {
    "id": "5964d7e633b908e172000046",
    "name": "Digit Recovery",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59b0a6da44a4b7080300008a",
    "name": "Converting 12-hour time to 24-hour time",
    "approved": true,
    "tags": [
      "Algorithms",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "59cd39a7a25c8c117d00020c",
    "name": "Cartesian neighbors distance",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "59cf6087aeb284909d00009c",
    "name": "C Puzzle: Pointer Monster",
    "approved": true,
    "tags": [
      "Puzzles",
      "Advanced Language Features",
      "Fundamentals",
      "Data Types"
    ]
  },
  {
    "id": "5a1a144f8ba914bbe800003f",
    "name": "Decipher Student Messages",
    "approved": true,
    "tags": [
      "Puzzles",
      "Strings",
      "Data Types",
      "Ciphers",
      "Algorithms",
      "Cryptography",
      "Logic",
      "Security"
    ]
  },
  {
    "id": "5a4a391ad8e145cdee0000c4",
    "name": "String subpattern recognition II",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5bbad1082ce5333f8b000006",
    "name": "Stacked Balls - 3D (triangle base)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "601c18c1d92283000ec86f2b",
    "name": "Status Arrays",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Logic"
    ]
  },
  {
    "id": "5313b713bb244a0eb20001fe",
    "name": "Number-like counter",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Basic Language Features",
      "Type Conversion",
      "Algorithms",
      "Logic",
      "Data Types",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "53fe3578d5679bf04900093f",
    "name": "Rotate a square matrix in place",
    "approved": true,
    "tags": [
      "Algorithms",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "54cefc8c975ca613d4000d7f",
    "name": "Greed",
    "approved": true,
    "tags": [
      "Bugs",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings"
    ]
  },
  {
    "id": "5602e85d255e3240c2000024",
    "name": "Figure Out the Notes",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "564f3d49a06556d27c000077",
    "name": "Upturn Numeral Triangle",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "56b5ebaa26fd54188b000018",
    "name": "The Most Amicable of Numbers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Logic",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "57e402969cb1193746000744",
    "name": "Personalising Spammy Marketing Emails",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Hashes",
      "Data Structures",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "57fe5b7108d102fede00137a",
    "name": "Hungarian Vowel Harmony (harder)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5818d00a559ff57a2f000082",
    "name": "Pell Numbers",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "583601518d3b9b8d3b0000c9",
    "name": "Text align right",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types",
      "Formatting"
    ]
  },
  {
    "id": "58846b46f4456a8919000025",
    "name": "Simple Fun #16: Apple Boxes",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58b665c891e710a3ec00003f",
    "name": "Challenge Fun #17: Merge Arrays",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5959b637030042889500001d",
    "name": "Simple Fun #337: The Original Number",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59766edb9bfe7cd5b000006e",
    "name": "Bad Apples",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "59f33b86a01431d5ae000032",
    "name": "Half Life",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5a353a478f27f244a1000076",
    "name": "Jokes you've been 'awaiting' for ... promise",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Promises",
      "Design Patterns",
      "Design Principles",
      "Asynchronous",
      "ES2015",
      "Babel"
    ]
  },
  {
    "id": "5a3bedd38f27f246c200005f",
    "name": "Simple parenthesis removal",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Logic"
    ]
  },
  {
    "id": "5b3e609cd58499284100007a",
    "name": "Array Product (Sans n)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5d1e1560c193ae0015b601a2",
    "name": "Make Equal",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5daf515c3affec002b2fb921",
    "name": "Present JSON data the SQL way",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "6076d4edc7bf5d0041b31dcf",
    "name": "Sort the Bytes",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "52ffcf5eaff455b3c200074b",
    "name": "Mirror,  Mirror",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Inheritance",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Polymorphism",
      "Basic Language Features"
    ]
  },
  {
    "id": "556021360863a1708900007b",
    "name": "Turkish National Identity Number",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Validation",
      "Numbers",
      "Data Types",
      "Utilities"
    ]
  },
  {
    "id": "557226cd3554219bdf00019b",
    "name": "Fast Fibonacci",
    "approved": true,
    "tags": [
      "Algorithms",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "55ba95a17970ff3e80000064",
    "name": "Ore Numbers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Fundamentals"
    ]
  },
  {
    "id": "568eeb1ce6f9e820c800000b",
    "name": "80's Kids #10: Captain Planet",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "569651a2d6a620b72e000059",
    "name": "Rock, Paper, Scissor, Lizard, Spock Game",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Games"
    ]
  },
  {
    "id": "56ae72854d005c7447000023",
    "name": "Simple template",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "String Formatting",
      "Formatting",
      "Algorithms",
      "Logic",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "57b4dd38d2a31c75f7000299",
    "name": "Make the small words big!",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57d5fed61a6282bf6f002a5f",
    "name": "Magic Index",
    "approved": true,
    "tags": [
      "Algorithms",
      "Dynamic Programming",
      "Programming Paradigms",
      "Recursion",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5819ba1e73b986d4160004f7",
    "name": "Authenticate a list of usernames",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Arrays",
      "Data Structures"
    ]
  },
  {
    "id": "5883b79101b769456e000003",
    "name": "Split all even numbers to odd ones in different ways",
    "approved": true,
    "tags": [
      "Algorithms",
      "Basic Language Features",
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Logic",
      "Control Flow"
    ]
  },
  {
    "id": "597ccf7613d879c4cb00000f",
    "name": "Expression Transpiler",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Parsing",
      "Algorithms",
      "Logic",
      "Strings",
      "Compiler Theory"
    ]
  },
  {
    "id": "5a0aae48ba2a14cfa600016d",
    "name": "Smoking Timmy",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Integers"
    ]
  },
  {
    "id": "5a40f5b01f7f70ed7600001e",
    "name": "Racing #1: Simplified Drag Race",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Games",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Basic Language Features"
    ]
  },
  {
    "id": "5a8897d4ba1bb5f266000057",
    "name": "2D list by the sequential integers",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5cba04533e6dce000eaf6126",
    "name": "Blood Moon",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Geometry",
      "Algebra"
    ]
  },
  {
    "id": "61a8c3a9e5a7b9004a48ccc2",
    "name": "Turn with a Compass",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "61ce25e92ca4fb000f689fb0",
    "name": "Convert ISBN-10 to ISBN-13",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "523fba59cb9aaaef4f000135",
    "name": "bit \"Wise\" #2: SHIFT-iness",
    "approved": true,
    "tags": [
      "Algorithms",
      "Bitwise Operators",
      "Bits",
      "Operators",
      "Advanced Language Features",
      "Binary",
      "Fundamentals"
    ]
  },
  {
    "id": "52f3a8e1f85fadcdf7001e31",
    "name": "Factorial division",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Arithmetic",
      "Data Types",
      "Integers"
    ]
  },
  {
    "id": "5357edc90d9c5df39a0013bc",
    "name": "Masquerade Waiting Line",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "53c235e4d5cd9c397200021d",
    "name": "Deep comparison of objects",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "546dbd81018e956b51000077",
    "name": "Church numbers",
    "approved": true,
    "tags": [
      "Puzzles",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "55e5d31bf7ca1e44980000a7",
    "name": "Linked Lists - Sorted Merge",
    "approved": true,
    "tags": [
      "Algorithms",
      "Linked Lists",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "55e785dfcb59864f200000d9",
    "name": "Special Multiples",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Control Flow",
      "Basic Language Features",
      "Data Types"
    ]
  },
  {
    "id": "561bbcb0fbbfb0f5010000ee",
    "name": "Radio DJ helper function",
    "approved": true,
    "tags": [
      "Algorithms",
      "Sorting",
      "Logic",
      "Filtering"
    ]
  },
  {
    "id": "56d082c24f60457198000e77",
    "name": "Get the Excel column title!",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "571d2e9eeed4a150d30011e7",
    "name": "Competitive eating scoreboard",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "577e694af5db624cf30002d0",
    "name": "Closest Sum",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57f548337763f20e02000114",
    "name": "String Evaluation",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "581351c40d8f13bc450008b8",
    "name": "Extending JavaScript Objects: Get First & Last Array Element",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Objects",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "5884731139a9b4b7a8000002",
    "name": "Simple Fun #18: Candles",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5a751a31373c2e645b000096",
    "name": "5 without alphanums!!!",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5aefd0a686d075d5f3000091",
    "name": "How long should you cook this for?",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5ba178be875de960a6000187",
    "name": "Multiples By Permutations II",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Strings",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Algebra",
      "Sorting"
    ]
  },
  {
    "id": "5e5ccbda30e9d0001ec77bb6",
    "name": "Unary Messages",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Decoding",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "52859abdf8fc1b12e0000141",
    "name": "Flatten a Nested Map",
    "approved": true,
    "tags": [
      "Algorithms",
      "Maps",
      "Data Structures",
      "Map/Reduce",
      "Logic",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "543abbc35f0461d28f000c11",
    "name": "House of cards",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5495bfa82eced2146100002f",
    "name": "Union of Intervals",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Aggregations",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "551af235ac044763f2000448",
    "name": "Overflowing with longing",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55e0a2af50adf50699000126",
    "name": "Pure odd digits primes",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Structures"
    ]
  },
  {
    "id": "55f1614853ddee8bd4000014",
    "name": "Find Numbers with Same Amount of Divisors",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Structures",
      "Data Types",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "56143efa9d32b3aa65000016",
    "name": "Some Circles",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Arguments",
      "Basic Language Features",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5632e12703e2037fa7000061",
    "name": "Base64 Numeric Translator",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "56a628758f8d06b59800000f",
    "name": "Self-Descriptive Numbers",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Puzzles",
      "Games",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Arithmetic"
    ]
  },
  {
    "id": "56c19316e8b139dff60006da",
    "name": "Capitalize first letter of a string",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Prototype-based Programming",
      "Prototypes",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Strings"
    ]
  },
  {
    "id": "56e6705b715e72fef0000647",
    "name": "■□ Pattern □■ : Zoom",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5779b0f0ec883247b2000117",
    "name": "Peano numbers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Data Structures"
    ]
  },
  {
    "id": "57ab606e53ba3339da0000a2",
    "name": "sum function",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Closures",
      "Basic Language Features"
    ]
  },
  {
    "id": "58298e19c983caf4ba000c8d",
    "name": "A Man and his Umbrellas",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Logic",
      "Arrays",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "584acbee7d22f84dc80000e2",
    "name": "Convert Improper Fraction to Mixed Number",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Numbers",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "588809279ab1e0e17700002e",
    "name": "Simple Fun #36:  Most Frequent Digit Sum",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "595ddfe2fc339d8a7d000089",
    "name": "Hamster me",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Encryption",
      "Algorithms",
      "Cryptography",
      "Logic",
      "Security",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "59bb02f5623654a0dc000119",
    "name": "Baby Magpies",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "59d9707c2a7acce03900001b",
    "name": "Filter the array into unique values in 38 chars",
    "approved": true,
    "tags": [
      "Fundamentals",
      "ES2015",
      "Babel",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5aba0a08379d20026e0000be",
    "name": "Simple Jeringonza",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5b162ed4c8c47ea2f5000023",
    "name": "Simple max digit sum",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5d26721d48430e0016914faa",
    "name": "The PaperFold sequence",
    "approved": true,
    "tags": [
      "Algorithms",
      "Sequences",
      "Arrays",
      "Data Types",
      "Numbers"
    ]
  },
  {
    "id": "60cc93db4ab0ae0026761232",
    "name": "Back and forth then Reverse!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Data Structures",
      "Performance",
      "Esoteric Languages"
    ]
  },
  {
    "id": "525a5b2185a9a4f5670006c1",
    "name": "How new Works",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Prototype-based Programming",
      "Programming Paradigms",
      "Prototypes"
    ]
  },
  {
    "id": "5443b8857fc4473cb90008e4",
    "name": "UN-usual Sort",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Sorting",
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "54c91b5228ec4c3b5900036e",
    "name": "Center of the Matrix",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55bf6b640e7ec0138e000071",
    "name": "Null-Conditional Operator (C# 6.0)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Basic Language Features"
    ]
  },
  {
    "id": "55f8ba3be8d585b81e000080",
    "name": "Mobile operator detector",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Logic",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "562dbaf65d4ab6685c0000ed",
    "name": "Lorraine Wants to Win the TV Contest",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Data Structures",
      "Hashes"
    ]
  },
  {
    "id": "568d1ee43ee6afb3ad00001d",
    "name": "Modulus 11 - Check Digit",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5713b0253b510cd97f001148",
    "name": "Coding 3min : toLoverCase()",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5720a81309e1f9b232001c5b",
    "name": "RegExp Fun #1 - When I miss few days of gym",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "5722aeda785220c84900109b",
    "name": "Anchorize me! ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Data Types",
      "Parsing",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "57aae4facf1fa57b3300005d",
    "name": "T.T.T.27: Four piles of apples",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5822b65bb81f702016000026",
    "name": "Unix command line `ls -l`  extract the file type. ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "583ed487ee36e2a8d20000e8",
    "name": "Recursive Ninja",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "58528e9e22555d8d33000163",
    "name": "Minutes to Midnight",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "5864af6739c5ab26e80000bf",
    "name": "Thinkful - Logic Drills: Hacking p-hackers",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Conditional Statements",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "588854201361435f5e0000bd",
    "name": "Simple Fun #50: Array Conversion",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58a2d1fdd7f6c7e51b000076",
    "name": "Convert month name to number",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "596185fe9c3097a345000a18",
    "name": "What's the pattern?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Sequences",
      "Arrays",
      "Data Types",
      "Arithmetic"
    ]
  },
  {
    "id": "59db393bc1596bd2b700007f",
    "name": "A+B=B+A? Prove it!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5a9b4d104a6b341b42000070",
    "name": "Sat Nav directions",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5b011461de4c7f8d78000052",
    "name": "Offspring Traits",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures",
      "Strings",
      "Data Types",
      "If-then-else Statements",
      "Conditional Statements",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5f656199132bf60027275739",
    "name": "Generating Markdowns",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "534d80775371ece88d0010b5",
    "name": "isAN(value)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Utilities"
    ]
  },
  {
    "id": "53f9a36864b19d8be7000609",
    "name": "Slices of a Series of Digits",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Data Structures"
    ]
  },
  {
    "id": "546d1328bed2e1e07a000f89",
    "name": "Everyone has his little secrets",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "555a77eb65dd419534000016",
    "name": "Sometimes",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Closures",
      "Basic Language Features"
    ]
  },
  {
    "id": "55ae997d1c40a199e6000018",
    "name": "Complete The Pattern #16",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "568ade64cfd7a55d9300003e",
    "name": "Tube strike options calculator",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "56b2333e2542c2aadb000079",
    "name": "Circular Primes",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "582afcadac2d9baa0900054c",
    "name": "Pokerhand, straight or not?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "5845b080a87f768aaa00027c",
    "name": "Travelling on a Grid",
    "approved": true,
    "tags": [
      "Algorithms",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5866f10311ceec6ac10001e8",
    "name": "All Star Code Challenge #31",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "587c37897f7dc251a0000001",
    "name": "Write your own map function.",
    "approved": true,
    "tags": [
      "Algorithms",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "58aa8698ae929e1c830001c7",
    "name": "Simple Fun #147: Find The Missing Tree",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "592b1e4c96cc12de1e0000b1",
    "name": "Challenge: Transpose two-dimensional arrays",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "5936256f2e2a27edc9000047",
    "name": "Simple Fun #318: Sort String",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59922d2ab14298db2b00003a",
    "name": "The Three Amigos",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "59b6652370a3b7e4c3000034",
    "name": "JS Golfing #1: undefined",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "59d902f627ee004281000160",
    "name": "Largest Number Arrangement",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Permutations",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5a296b571f7f70b0b3000100",
    "name": "Arrays of Lists of Sets ",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "5da1df6d8b0f6c0026e6d58d",
    "name": "Sections",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5fee4559135609002c1a1841",
    "name": "URL shortener",
    "approved": true,
    "tags": [
      "Algorithms",
      "Databases",
      "Information Systems",
      "Data",
      "Logic"
    ]
  },
  {
    "id": "53270633b7320eeb0500031d",
    "name": "The Power of Exponents",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "547aadd5b84a1fd66800041e",
    "name": "More than one way to call a function, or skin a cat. ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "56f8a648ba792a778a0000b9",
    "name": "Shortest code: Bug in Apple",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57c6aa7340e302ac46000265",
    "name": "Object-Oriented PHP #7 - The \"Final\" Keyword",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Inheritance",
      "Polymorphism"
    ]
  },
  {
    "id": "57d93978950d8486a3000def",
    "name": "These aren't the numbers you're looking for! (Find a number by approximation)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Basic Language Features",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "57db78d3b43dfab59c001abe",
    "name": "Death by Coffee",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "587b6a5e8726476f9b0000e7",
    "name": "Rotational energy levels",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5884658d02accbd0a7000039",
    "name": "Simple Fun #14: Line Up",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "588e10c5f051b147ff00004b",
    "name": "Temperature analysis II",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5944f3f8d7b6a5748d000233",
    "name": "Distance Between 2 Points on a Cartesian Plane",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Algebra"
    ]
  },
  {
    "id": "596549c7743cf369b900021b",
    "name": "The search for Primes! Twin Primes!",
    "approved": true,
    "tags": [
      "Puzzles",
      "Fundamentals",
      "Games"
    ]
  },
  {
    "id": "59b24a2158ef58966e00005e",
    "name": "Nut Farm  2",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "59dc8288fc3c49cc3f000039",
    "name": "Sort with a sorting array",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5a088d8e80171fcd8800006b",
    "name": "Daily Calorie Requirement ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Objects",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5a479247e6be385a41000064",
    "name": "5x5 Nonogram Solver",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Validation",
      "Games",
      "Numbers",
      "Data Types",
      "Multi-Dimensional Arrays",
      "Arrays",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5fb856190d5230001d48d721",
    "name": "Centered pentagonal number: ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Performance",
      "Puzzles",
      "Games",
      "Logic"
    ]
  },
  {
    "id": "5262fa26875ed24a3e000029",
    "name": "Javascript filter - 2",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "52e84c460d83dd96e50000dd",
    "name": "Counting DNA Nucleotides",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arithmetic",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "52fe629e48970ad2bd0007e6",
    "name": "Efficient Power Modulo n",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Types",
      "Performance"
    ]
  },
  {
    "id": "53f211b159c3fcec3d000efa",
    "name": "Left$   and   Right$",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "553133a9685e7a34aa00001c",
    "name": "Format number as currency using extension method",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Strings",
      "Basic Language Features",
      "Formatting",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "55e8beb4e8fc5b7697000036",
    "name": "Terminal Game #2",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Prototype-based Programming",
      "Programming Paradigms",
      "Prototypes"
    ]
  },
  {
    "id": "563cc8c1a3895d7d30000049",
    "name": "Reimplement Multiplication Part 1",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "56b8b0ae1d36bb86b2000eaa",
    "name": "Time Converter: hours, minutes, seconds and milliseconds",
    "approved": true,
    "tags": [
      "Refactoring",
      "Dates/Time",
      "Data Types",
      "Parsing",
      "Algorithms",
      "Logic",
      "Strings"
    ]
  },
  {
    "id": "56ef9790740d30a7ff000199",
    "name": "Tree to list",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Trees",
      "Data Structures"
    ]
  },
  {
    "id": "5705aeb041e5befba20010ba",
    "name": "Coding 3min : Symmetric Sort",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57212c55b6fa235edc0002a2",
    "name": "Dinner Plans",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "5782a87d9fb2a5e623000158",
    "name": "Time Degrees",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57b3bf0ad241568f2b0000b7",
    "name": "Object-Oriented PHP #6 - Visibility",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "57d15a03264276aaf000007f",
    "name": "Roof Replacement",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "5819a6fdc929bae4f5000a33",
    "name": "Identify Case",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "581bb3c1c221fb8e790001ef",
    "name": "Remove a Specific Element of an Array",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Algorithms",
      "Logic",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Declarative Programming",
      "Programming Paradigms",
      "Optimization"
    ]
  },
  {
    "id": "5829994cd04efd4373000468",
    "name": "Naming Files",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58342f14fa17ad4285000307",
    "name": "How long will it take the train to reach its final destination?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "586d79182e8d9cfaba0000f1",
    "name": "Is it an isogram?",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "588e68aed4cff457d300002e",
    "name": "Turn the Mars rover to take pictures",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "58a9cff7ae929e4ad1000050",
    "name": "Get a User's Honor",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "58e2835b5e2ad23be1000044",
    "name": "One Line Task: Integer Average",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58fd9f6213b00172ce0000c9",
    "name": "Simple Fun #205: Split Exp",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "590818ddffa0da26ad00009b",
    "name": "Simple Fun #235: Construct Submatrix",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "593550e26d07549c5100004a",
    "name": "Multi Line Task: Fizz Buzz",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "525a4cab1650d76b8000084d",
    "name": "Array.isArray",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "52b2cf1386b31630870005d4",
    "name": "Readability is King",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "543d218022e0f307fb000173",
    "name": "foldMap all the things!",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "54e4aa695c8a4c4cee0004d4",
    "name": "The once rollable dice",
    "approved": true,
    "tags": [
      "Bugs",
      "Objects",
      "Data Types",
      "Games"
    ]
  },
  {
    "id": "552ec968fcd1975e8100005a",
    "name": "N00bify - English to n00b Translator",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "556d120c7c58dacb9100008b",
    "name": "IPv4 Parser",
    "approved": true,
    "tags": [
      "Algorithms",
      "Networks",
      "Logic",
      "Binary",
      "Bits",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "55f347cfb44b879e1e00000d",
    "name": "Highest number with two prime factors",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "56644a421b7c94c622000056",
    "name": "Most Likely",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Type Conversion",
      "Algorithms",
      "Logic",
      "Data Types"
    ]
  },
  {
    "id": "56b12e3ad2387de332000041",
    "name": "Greatest Difference",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Types",
      "Numbers",
      "Strings"
    ]
  },
  {
    "id": "5747a9bbe2fab9a0c400012f",
    "name": "DNA GC-content",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "58bcfe1e23fee9fd95000007",
    "name": "Simple Fun #185: Revamp",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59122604e5bc240817000016",
    "name": "Prime Streaming (NC-17)",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "59a3e2897ac7fd05f800005f",
    "name": "SMS Lottery Bet Validator",
    "approved": true,
    "tags": [
      "Algorithms",
      "Validation",
      "Logic"
    ]
  },
  {
    "id": "5ac49156376b11767f00060c",
    "name": "Alternating sort",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Logic",
      "Arrays"
    ]
  },
  {
    "id": "5ae43ed6252e666a6b0000a4",
    "name": "String -> N iterations -> String",
    "approved": true,
    "tags": [
      "Algorithms",
      "Games",
      "Strings",
      "Data Types",
      "Logic",
      "Puzzles",
      "Optimization"
    ]
  },
  {
    "id": "5b1cce03777ab73442000134",
    "name": "Exponential Comparison",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Types",
      "Arithmetic"
    ]
  },
  {
    "id": "60a82776de1604000e29eb50",
    "name": "[Code Golf] Optional Walrus?",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "53fe2171d5679bff300007d9",
    "name": "The Non-Discriminate Factorial",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5453af58e6c920858d000823",
    "name": "The most imperative functional language?",
    "approved": true,
    "tags": [
      "Puzzles",
      "Imperative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "54c1bf903f0696f04600068b",
    "name": "Stack Arithmetic Machine",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "54f1fdb7f29358dd1f00015d",
    "name": "Writing applicative parsers from scratch",
    "approved": true,
    "tags": [
      "Algorithms",
      "Data Structures",
      "Parsing",
      "Logic",
      "Strings",
      "Data Types",
      "Expressions",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "56f84d093b164c2e490013cb",
    "name": "Timer Decorator",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Design Patterns",
      "Design Principles",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "578dec07deaed9b17d0001b8",
    "name": "Goldbach’s Conjecture",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "57d307fb9d84633c5100007a",
    "name": "Range Parser",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Parsing",
      "Strings",
      "Ranges",
      "Basic Language Features",
      "Data Types"
    ]
  },
  {
    "id": "584fa5ae25dd087e6b000070",
    "name": "Is my string repeating the same character over and over ?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games",
      "Logic"
    ]
  },
  {
    "id": "58817056e7a31c2ceb000052",
    "name": "Esolang: InfiniTick",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Interpreters",
      "Algorithms",
      "Logic",
      "Esoteric Languages",
      "Strings",
      "Data Types",
      "Arrays",
      "Turing Machines",
      "Computational Science",
      "Theoretical Computer Science",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "589d237fdfdef0239a00002e",
    "name": "Simple Fun #114: \"abacaba\"",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58ac1abdff4e78738f000805",
    "name": "What The Biggest Search Keys?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Basic Language Features"
    ]
  },
  {
    "id": "58e6996019af2cff71000081",
    "name": "Langton's ant",
    "approved": true,
    "tags": [
      "Algorithms",
      "Recursion",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science",
      "Turing Machines",
      "Computational Science"
    ]
  },
  {
    "id": "59669eba1b229e32a300001a",
    "name": "Stargate SG-1: Cute and Fuzzy (Improved version)",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Algorithms",
      "Logic",
      "Data Structures",
      "Dynamic Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "59eb64cba954273cd4000099",
    "name": "Sub-array division",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5a06238a80171f824300003c",
    "name": "Picture Contest - Extract the message",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5a0b33888ba914a5e40000b7",
    "name": "Trim method",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Methods",
      "Functions",
      "Object-oriented Programming",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5a376259b6cfd77ca000006b",
    "name": "Get Zodiac Sign",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Basic Language Features"
    ]
  },
  {
    "id": "5d2659626c7aec0022cb8006",
    "name": "The Baum-Sweet sequence",
    "approved": true,
    "tags": [
      "Algorithms",
      "Sequences",
      "Arrays",
      "Data Types",
      "Numbers"
    ]
  },
  {
    "id": "53b2f6934a240823f4000abc",
    "name": "uniquePush - No Dupes!",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55aac03755b0264947000138",
    "name": "Creating Elements with React",
    "approved": true,
    "tags": [
      "Fundamentals",
      "React",
      "Babel"
    ]
  },
  {
    "id": "55d3b1f2c1b2f0d3470000a9",
    "name": "Algorithmic predicament- Bug Fixing #9",
    "approved": true,
    "tags": [
      "Algorithms",
      "Bugs",
      "Data"
    ]
  },
  {
    "id": "55da49c166949c319200003e",
    "name": "Basic method",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Methods",
      "Functions",
      "Object-oriented Programming",
      "Control Flow",
      "Basic Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "55dcdd2c5a73bdddcb000044",
    "name": "Total area covered by rectangles",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Geometry",
      "Algebra",
      "Mathematics"
    ]
  },
  {
    "id": "55e00266d494ce5155000032",
    "name": "Get your steppin' on son",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "56314d3c326bbcf386000007",
    "name": "Tax Calculator",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "564871e795df155582000013",
    "name": "Fill in the gaps in my timesheet.",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "56bdaa2cbe8f29257c000085",
    "name": "Bug Fix - Quick Sort",
    "approved": true,
    "tags": [
      "Bugs",
      "Sorting",
      "Algorithms",
      "Logic",
      "Fundamentals"
    ]
  },
  {
    "id": "5706be574f2c297a7b00060d",
    "name": "Chuck Norris VI - Shopping with Chuck",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5751fef5dcc1079ac5001cff",
    "name": "Please help Bob ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Declarative Programming",
      "Programming Paradigms",
      "Advanced Language Features"
    ]
  },
  {
    "id": "5777fe3f355edbf0a5000d11",
    "name": "'x' marks the spot.",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "585c284d06512958820001a6",
    "name": "Emily's Eccentric Encoding",
    "approved": true,
    "tags": [
      "Fundamentals",
      "ASCII",
      "Character Encodings",
      "Formats",
      "Encoding",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "58dd98fe8d29b0f30d0002bd",
    "name": "Check your arguments",
    "approved": true,
    "tags": [
      "Bugs",
      "Basic Language Features",
      "Fundamentals",
      "Functions",
      "Control Flow"
    ]
  },
  {
    "id": "590300eb378a9282ba000095",
    "name": "Hungry Hippos",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Games",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "590bdaa251ab8267b800005b",
    "name": "Simple Fun #246: Array Center",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59de9f8ff703c4891900005c",
    "name": "Game of Go",
    "approved": true,
    "tags": [
      "Algorithms",
      "Games",
      "Performance"
    ]
  },
  {
    "id": "5a24a35a837545ab04001614",
    "name": "Interlaced Spiral Cipher",
    "approved": true,
    "tags": [
      "Algorithms",
      "Ciphers",
      "Cryptography",
      "Logic",
      "Security",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5a2a597a8882f392020005e5",
    "name": "Bloxorz Solver",
    "approved": true,
    "tags": [
      "Algorithms",
      "Games",
      "Puzzles"
    ]
  },
  {
    "id": "5cc1e284ece231001ccf7014",
    "name": "Upside-Down Pyramid Addition...REVERSED!",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5e28ae347036fa001a504bbe",
    "name": "Is the King in check ?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Games",
      "Arrays",
      "Data Types",
      "Strings",
      "Game Boards"
    ]
  },
  {
    "id": "5e5acfe31b1c240012717a78",
    "name": "Data Type Scramble",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Types",
      "Parsing",
      "Algorithms",
      "Logic",
      "Strings",
      "Structs",
      "Data Structures",
      "Numbers",
      "Integers",
      "Booleans"
    ]
  },
  {
    "id": "52a4e42ce950ed50da000748",
    "name": "Array intersect all",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Arguments",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "52e5e86b2ff32887280002e4",
    "name": "Cylon Evolution",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Objects",
      "Data Types",
      "Prototype-based Programming",
      "Programming Paradigms",
      "Prototypes",
      "Inheritance",
      "Object-oriented Programming",
      "Polymorphism"
    ]
  },
  {
    "id": "576d209bed916d2ea30000f7",
    "name": "Vault experience (1): Enough water for how many days?",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57c7906858a06b7746000a48",
    "name": "Object-Oriented PHP #8 - Interfaces [Advanced]",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Interfaces",
      "Basic Language Features"
    ]
  },
  {
    "id": "57f285c069e09ca1aa000b04",
    "name": "Pointer Swap",
    "approved": true,
    "tags": [
      "Bugs",
      "Fundamentals"
    ]
  },
  {
    "id": "58162692c2a518f03a000189",
    "name": "Upstream/Downstream",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58334362c5637ad0bb0001c2",
    "name": "Filter valid romans",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "58397ee871df657929000209",
    "name": "Acronym Buster",
    "approved": true,
    "tags": [
      "Algorithms",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings",
      "Parsing",
      "Logic",
      "Data Types"
    ]
  },
  {
    "id": "58638bd2210be9a9690001f7",
    "name": "Array.prototype.size()",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Basic Language Features",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5866e6992e8d9cdbcd00040a",
    "name": "All Star Code Challenge #28",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5893f43b779ce54da4000124",
    "name": "Simple Fun #67: Array Change",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58b635903e78b34958000056",
    "name": "Simple Fun #172: Count Number",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Tables",
      "Data Structures",
      "Arithmetic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "58de08d376f875dbb40000f1",
    "name": "New season, new league",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5914c6ee51f1d39b5600001c",
    "name": "Learning TypeScript. Basic Types",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "593a061b942a27ac940000a7",
    "name": "Getting MAD",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "59bcde54590b86479e000d71",
    "name": "One Line: Even Check",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5a1cae0832b8b99e2900000c",
    "name": "Check by Queen",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a6855c2e6be38cdbf000026",
    "name": "Shorten Me: Mad Mathematician's Algorithm I (Addition)",
    "approved": true,
    "tags": [
      "Puzzles",
      "Fundamentals",
      "Games"
    ]
  },
  {
    "id": "5d62961d18198b000e2f22b3",
    "name": "Squad number generator",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5d6a11ab2a1ef8001dd1e817",
    "name": "Connect the Dots",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "522498c9906b0cfcb40001fc",
    "name": "Fibonacci Generator",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5264603df227072e6500006d",
    "name": "The Fruit Juice",
    "approved": true,
    "tags": [
      "Algorithms",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Classes",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "5441310626bc6a1e61000f2c",
    "name": "Colorful Number",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Logic"
    ]
  },
  {
    "id": "545cdb4f61778e52810003a2",
    "name": "Levenshtein Distance",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Information Theory"
    ]
  },
  {
    "id": "5498505a43e0fd83620010a9",
    "name": "Vector Affinity",
    "approved": true,
    "tags": [
      "Algorithms",
      "Data Structures",
      "Dynamic Arrays",
      "Arrays",
      "Functional Programming",
      "Data Types",
      "Declarative Programming",
      "Programming Paradigms",
      "Vectors"
    ]
  },
  {
    "id": "54cb61619b30e88e44001048",
    "name": "Run your String",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Objects"
    ]
  },
  {
    "id": "54ce9497975ca65e1a0008c6",
    "name": "Temperature converter",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Data Structures",
      "Strings",
      "Data Types",
      "Numbers",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "54f4b6e7576d7af70900092b",
    "name": "Diff That Poly!",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "559f35bde66a7250f60000c9",
    "name": "Sum with Arrows",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55af0d33f9b829d0a800008d",
    "name": "Decode Diagonal",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "55e72695870aae78c4000026",
    "name": "Linked Lists - Iterative Reverse",
    "approved": true,
    "tags": [
      "Algorithms",
      "Linked Lists",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "55f95dbb350b7b1239000030",
    "name": "Required Data I",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Data Structures",
      "Control Flow",
      "Basic Language Features",
      "Exception Handling",
      "Sorting"
    ]
  },
  {
    "id": "560fbc2d636966b21e00009e",
    "name": "Map function  issue",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5657d8bdafec0a27c800000f",
    "name": "Compute a convex hull",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Geometry",
      "Algebra",
      "Mathematics"
    ]
  },
  {
    "id": "571d0c80eed4a1c850000ef2",
    "name": "Pete's inappropriate speech",
    "approved": true,
    "tags": [
      "Algorithms",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "582933a3c983ca0cef0003de",
    "name": "Children and candies",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "582c01ad3fd1cc5736000348",
    "name": "Complete the matrix pattern",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "584911a20d8b8f5b70000149",
    "name": "Fizz Buzz (with restrictions)",
    "approved": true,
    "tags": [
      "Puzzles",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "587f0871f297a6df780000cd",
    "name": "Thinkful - Object Drills: Puzzlebox",
    "approved": true,
    "tags": [
      "Puzzles",
      "Objects",
      "Data Types",
      "Games",
      "Fundamentals"
    ]
  },
  {
    "id": "58884e352ffea6d2f8000082",
    "name": "Simple Fun #48: Higher Version",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58b2c5de4cf8b90723000051",
    "name": "Guess Who?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Games"
    ]
  },
  {
    "id": "58d3cf477a4ea9bb2f000103",
    "name": "Rotate a square matrix like a vortex",
    "approved": true,
    "tags": [
      "Algorithms",
      "Basic Language Features",
      "Fundamentals",
      "Logic",
      "Arrays",
      "Data Types",
      "Numbers"
    ]
  },
  {
    "id": "59f70440bee845599c000085",
    "name": "Find  Cracker.",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "59fee4e680171f01f200008a",
    "name": "Lua is easy: Lesson 1 - The basics",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5a0573c446d8435b8e00009f",
    "name": "Path Finder #4: where are you?",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5a667236145c462103000091",
    "name": "Square sums",
    "approved": true,
    "tags": [
      "Bugs",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5a941f3a4a6b34edf900006f",
    "name": "Simple missing sum",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5abeaf0fee5c575ff20000e4",
    "name": "Find the cheapest path",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Performance"
    ]
  },
  {
    "id": "5b2e5a02a454c82fb9000048",
    "name": "2D Cellular Neighbourhood",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Data Structures",
      "Arrays",
      "Data Types",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "525988ee6021e918e6000dce",
    "name": "None shall pass",
    "approved": true,
    "tags": [
      "Puzzles",
      "Security"
    ]
  },
  {
    "id": "53988ee02c2414dbad000baa",
    "name": "Pretty date",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "545c4f7682e55d3c6e0011a1",
    "name": "Find heavy ball - level: ubermaster",
    "approved": true,
    "tags": [
      "Puzzles",
      "Algorithms",
      "Logic",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "54834b3559e638b39d0009a2",
    "name": "\"this\" is an other solution",
    "approved": true,
    "tags": [
      "Bugs",
      "Objects",
      "Data Types",
      "Properties",
      "Basic Language Features",
      "Object-oriented Programming",
      "Fundamentals",
      "Programming Paradigms"
    ]
  },
  {
    "id": "554c8a93e466e794fe000001",
    "name": "[Geometry A-1]  Locate point - to the right, to the left or on the vector?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Logic",
      "Dynamic Arrays",
      "Arrays",
      "Functional Programming",
      "Data Types",
      "Declarative Programming",
      "Programming Paradigms",
      "Vectors"
    ]
  },
  {
    "id": "55e67e44bf97fa66900000a0",
    "name": "Linked Lists - Sorted Intersect",
    "approved": true,
    "tags": [
      "Algorithms",
      "Linked Lists",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "55ffd58d186cc9394f0000cc",
    "name": "String Calculator",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Integers",
      "Numbers"
    ]
  },
  {
    "id": "56431c04ed1454a35d00003b",
    "name": "Evening up a workload",
    "approved": true,
    "tags": [
      "Algorithms",
      "Collections",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "56a13035eb55c8436a000041",
    "name": "Volume of a cup",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "56be4affc5dc03b84b001d2d",
    "name": "HTML Complementary Color",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56dc695b2a4504b95000004e",
    "name": "Caeser Encryption",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "56e9ac87c3e7d512bc001363",
    "name": "ASCII Shift Encryption/Decryption",
    "approved": true,
    "tags": [
      "Algorithms",
      "ASCII",
      "Character Encodings",
      "Formats",
      "Logic"
    ]
  },
  {
    "id": "571ec81d7e8954ce1400014f",
    "name": "Battleship field validator II",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Puzzles",
      "Games",
      "Validation"
    ]
  },
  {
    "id": "572caa2672a38ba648001dcd",
    "name": "Transformation of a Number Through Prime Factorization",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Control Flow",
      "Basic Language Features",
      "Optimization"
    ]
  },
  {
    "id": "57475353facb0e7431000651",
    "name": "noobCode 04: HOT SINGLES...compare two arrays, return the unpaired items !",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "58097ae96037b88f57000105",
    "name": "From..To..Series #7: from sentence to camelCase. Can you convert it?",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5814bf3f3db1ffc0180000d3",
    "name": "Linux history and  `!` command. Series#2  The `!n` command",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Parsing",
      "Logic",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals"
    ]
  },
  {
    "id": "5872bb7faa04282110000124",
    "name": "Help Kiyo きよ solve her problems LCM Fun!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Data Structures",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "58855acc9e1de22dff0000ef",
    "name": "Esolang: Stick",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Types",
      "Esoteric Languages",
      "Stacks",
      "Arrays",
      "Numbers"
    ]
  },
  {
    "id": "5887099cc815166a960000c6",
    "name": "Simple Fun #32:  Create Anagram",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58af9f7320a9ecedb30000f1",
    "name": "Simple Fun #161: Replace Dashes As One",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59474c656ff02b21e20000fc",
    "name": "Ciphers #2 - The reversed Cipher",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5968fb556875980bd900000f",
    "name": "Traverse array elements diagonally",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Logic"
    ]
  },
  {
    "id": "596b041e224071ece200002e",
    "name": "FIXME:  Hours to Seconds",
    "approved": true,
    "tags": [
      "Bugs"
    ]
  },
  {
    "id": "5a4a2973d8e14586c700000a",
    "name": "String subpattern recognition III",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5a51717fa7ca4d133f001fdf",
    "name": "Packing your backpack",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Dynamic Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5a57d101cadebf03d40000b9",
    "name": "Codewars Leaderboard",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a8319f257c562ede8000037",
    "name": "Managing Events in React JS",
    "approved": true,
    "tags": [
      "Fundamentals",
      "React",
      "Babel",
      "Frameworks",
      "ES2015",
      "Event Handling"
    ]
  },
  {
    "id": "5a9ecd89fd5777e0790001ea",
    "name": "Santa wish list form in ReactJS",
    "approved": true,
    "tags": [
      "Fundamentals",
      "React",
      "Babel",
      "Frameworks",
      "Event Handling"
    ]
  },
  {
    "id": "5ad6e5bdb0e8d46b4500201a",
    "name": "XOR string reduction",
    "approved": true,
    "tags": [
      "Puzzles",
      "Strings",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Games"
    ]
  },
  {
    "id": "5db5ff03d10bfa001da9cf2e",
    "name": "First and last IP in a network",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5e4e8f5a72d9550032953717",
    "name": "List of all Rationals",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Lists",
      "Data Structures",
      "Data Types"
    ]
  },
  {
    "id": "5244ab738978478c1800002e",
    "name": "GPS Navigation",
    "approved": true,
    "tags": [
      "Algorithms",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "530e259c7bc88a4ab9000754",
    "name": "A tetrahedron of cannonballs",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "537ba77315ddd92659000fec",
    "name": "Goldbach's Conjecture",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Arithmetic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "53d2c97d7152a59b64001033",
    "name": "I Liked the SQL Better...",
    "approved": true,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems"
    ]
  },
  {
    "id": "54258ffb430ca2e4b5000239",
    "name": "Lensmaker",
    "approved": true,
    "tags": [
      "Puzzles",
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "55a5a70c81e8541d990000bd",
    "name": "Validate Hexadecimal",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "57f4ccf0ab9a91c3d5000054",
    "name": "chmod calculator in octal.",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5838e2978bbc04b7cd000008",
    "name": "Ten Green Bottles",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "598638d7f3a2c489b2000030",
    "name": "Get root property name",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Logic",
      "Data Structures"
    ]
  },
  {
    "id": "59aa2cccd0a5ffdfa000005b",
    "name": "Global estimates",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a0d6d8c6975982b5b000383",
    "name": "TGI Friday!!",
    "approved": true,
    "tags": [
      "Algorithms",
      "Dates/Time",
      "Data Types",
      "Logic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "5a19701d80171fd71d000029",
    "name": "Cipher",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Ciphers",
      "Cryptography",
      "Security",
      "Encryption",
      "Decryption",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5a438bc1e1ce0e129100005a",
    "name": "Unusual Lex Order",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Fundamentals"
    ]
  },
  {
    "id": "5ae7e1522c5061beb7000051",
    "name": "Jumping  Kangaroos",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5b559899f7e38620ef000803",
    "name": "Unknown Amount of Missing Numbers  in an Unordered Array.  (Hardcore version)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Performance",
      "Numbers",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "5b7bae02402fb702ce000159",
    "name": "Fix array sequence",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5bdc1558ab6bc57f47000b8e",
    "name": "Minimum Ticket Cost",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5cc80fbe701f0d001136e5eb",
    "name": "Stem-and-leaf plot",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "5d8365b570a6f6001519ecc8",
    "name": "Balance the parentheses ",
    "approved": true,
    "tags": [
      "Refactoring"
    ]
  },
  {
    "id": "5dd82b7cd3d6c100109cb4ed",
    "name": "Find the safest places in town",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Optimization"
    ]
  },
  {
    "id": "5e4d8a53b499e20016b018a0",
    "name": "Exponential-Golomb Decoder",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "60e4dfc1dc28e70049e2cb9d",
    "name": "Maximum Depth of Nested Brackets",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Performance"
    ]
  },
  {
    "id": "52210226578afb73bd0000f1",
    "name": "Game - Electrons around the cores",
    "approved": true,
    "tags": [
      "Puzzles",
      "Reverse Engineering",
      "Security",
      "Games"
    ]
  },
  {
    "id": "524c6a2e55025e3fba00020f",
    "name": "Javascript Namespacing",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Namespaces",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Classes",
      "Prototypes"
    ]
  },
  {
    "id": "52f29bab392fb83e0d000656",
    "name": "splicing",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "543da2dd23ccbd1fb600048e",
    "name": "Sign in/Sign out but sign it",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5452113c699b538c18000b01",
    "name": "Guess the number!",
    "approved": true,
    "tags": [
      "Puzzles",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "557e508a47c7e9adf9000062",
    "name": "JS Prototypes Module #1 - Object Prototypes",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Prototype-based Programming",
      "Programming Paradigms",
      "Prototypes",
      "Objects",
      "Data Types",
      "Basic Language Features"
    ]
  },
  {
    "id": "559c7b6e3c38b1d1b900006f",
    "name": "Format Text",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Formatting",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "55fc061cc4f485a39900001f",
    "name": "Strange principal",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "564e1d90c41a8423230000bc",
    "name": "Knight vs King",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56648a2e2c464b8c030000bf",
    "name": "80's Kids #4: Legends of the Hidden Temple",
    "approved": true,
    "tags": [
      "Algorithms",
      "Games"
    ]
  },
  {
    "id": "568f2d5762282da21d000011",
    "name": "Great Total Additions of All Possible Arrays from a List.",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Functions",
      "Permutations"
    ]
  },
  {
    "id": "56ce75f63ae564179200211c",
    "name": "Array of all primes up to number N",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Logic"
    ]
  },
  {
    "id": "574e4175ff5b0a554a00000b",
    "name": "Convert Improper Fraction to Mixed Numeral",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Arithmetic"
    ]
  },
  {
    "id": "57f032307b45ef9c8f0001dd",
    "name": "The real size of a multi-dimensional array",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Recursion",
      "Algorithms",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "588c0a38b7cd14085300003f",
    "name": "Find Number With Maximum Number Of Divisors",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "58bcdc65f6d3b11fce000045",
    "name": "Simple Fun #184: LCM from m to n",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58e4fbd63258cefa4100002c",
    "name": "Frugal Pizza",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58fa5e33a6d84c1324000207",
    "name": "Simple Prime Number Generator",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "596266482f9add20f70001fc",
    "name": "Shopping List",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types",
      "Objects"
    ]
  },
  {
    "id": "5970fce80ed776b94000008b",
    "name": "Sentence Calculator",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59aac7a9485a4dd82e00003e",
    "name": "Cockroach Bug Scatter",
    "approved": true,
    "tags": [
      "Algorithms",
      "Bugs"
    ]
  },
  {
    "id": "5a9d8cfb5084d79178000150",
    "name": "One line task: Square a number Without *, + or Math.pow()",
    "approved": true,
    "tags": [
      "Puzzles",
      "Refactoring",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Games"
    ]
  },
  {
    "id": "5b5736abf1d553f844000050",
    "name": "Knight position",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5eb9a92898f59000184c8e34",
    "name": "Sum of all numbers with the same digits (performance edition)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Performance",
      "Numbers",
      "Data Types",
      "Permutations",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5fc2a4b9bb2de30012c49609",
    "name": "Find the Order Breaker",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "52a0f488852a85c723000aca",
    "name": "Palindromic Numbers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "53689951c8a5ca91ac000566",
    "name": "Command line parameters",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "54f5c1b000ecc46de6000e4c",
    "name": "Something 's fishy...",
    "approved": true,
    "tags": [
      "Bugs",
      "Fundamentals",
      "Scopes",
      "Basic Language Features"
    ]
  },
  {
    "id": "55a9c0994cb7e284d500005e",
    "name": "Implementing a Queue",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Queues",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "56808724e7784d220c00003f",
    "name": "RuplesJS #3: String EachChar",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5714041e8807940ff3001140",
    "name": "nova polynomial  3. subtract",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "57b5907920b104772c00002a",
    "name": "Cats in hats",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57bec3bc5640aa5f3f00003e",
    "name": "Currency Matrix Generator",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "582dcda401f9ccb4f0000025",
    "name": "Primes with Even Digits",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Control Flow",
      "Basic Language Features",
      "Logic",
      "Strings",
      "Data Types",
      "Data Structures",
      "Algorithms",
      "Declarative Programming",
      "Programming Paradigms",
      "Mathematics",
      "Numbers",
      "Arithmetic"
    ]
  },
  {
    "id": "586640f739c5ab4f4c00022f",
    "name": "Fun with trees: lists edition",
    "approved": true,
    "tags": [
      "Algorithms",
      "Trees",
      "Data Structures",
      "Lists",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Higher-order Functions",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Binary Search Trees",
      "Binary"
    ]
  },
  {
    "id": "586d12f0aa042830910001d1",
    "name": "Remove Unnecessary Characters from Items in List",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Lists",
      "Data Structures",
      "Data Types"
    ]
  },
  {
    "id": "589ace5eeef39faf49000061",
    "name": "Simple Fun #111: Reverse Brackets",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58a651ff27f95429f80000d0",
    "name": "Simple Fun #131: Learn Charitable Game",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58de42bab4b74c214d0000e2",
    "name": "A Simple Music Decoder",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "58f4cc4e43251b1be6000082",
    "name": "ASCII Games: Warning: Ice!",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "ASCII",
      "Character Encodings",
      "Formats"
    ]
  },
  {
    "id": "596f7d99f468ae8daa00000b",
    "name": "BF basics #0: Hello World",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "59fd6d2332b8b9955200005f",
    "name": "Integer reduction",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5a12755832b8b956a9000133",
    "name": "RoboScript #5 - The Final Obstacle (Implement RSU)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Compiler Theory",
      "Logic",
      "Interpreters"
    ]
  },
  {
    "id": "5a4b798fb3bfa83de10000ad",
    "name": "Sum of the odd digits of a number (recursion)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Recursion",
      "Algorithms",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "5b62f8a5b17883e037000136",
    "name": "Quidditch Scoreboard",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5b65c47cbedf7b69ab00066e",
    "name": "Build a Trie",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures"
    ]
  },
  {
    "id": "6129095b201d6b000e5a33f0",
    "name": "Boxlines",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "52094b0673c32d3fc5000065",
    "name": "Imperfect Network #2 (out-of-order messages)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Networks",
      "Logic"
    ]
  },
  {
    "id": "5241060ff2471a5d7600025a",
    "name": "Custom Setters and Getters",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "52657e805fda8ea5590007e5",
    "name": "Simple digit code breaker",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "54808fc8ab03a23e82000a1f",
    "name": "Data Types à la Carte",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "56a127b14d9687bba200004d",
    "name": "Paths in the Grid",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "56f3ed90de254a2ca7000e20",
    "name": "Find the discounted prices",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "5708e3f53f100874b60015ff",
    "name": "Pairing brackets",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Parsing",
      "Logic"
    ]
  },
  {
    "id": "5779624bae28070489000146",
    "name": "Logistic Map",
    "approved": true,
    "tags": [
      "Algorithms",
      "Graphs",
      "Data Structures",
      "Arrays",
      "Data Types",
      "Lists"
    ]
  },
  {
    "id": "57c1f22d8fbb9fd88700009b",
    "name": "Three sticks",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Conditional Statements",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "57caa74240e302f5b3000458",
    "name": "Object-Oriented PHP #9 - Abstract Classes [Advanced]",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Abstract Classes",
      "Classes",
      "Basic Language Features"
    ]
  },
  {
    "id": "581270cb4927602fc800005a",
    "name": "Extending JavaScript Objects: Reverse String",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "58311536e77f7d08de000085",
    "name": "How many cows do you have?",
    "approved": true,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "583c592928a0c0449d000099",
    "name": "The maximum and minimum difference -- Challenge version",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "583d171f28a0c04b7c00009c",
    "name": "The maximum sum value of ranges -- Challenge version",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "585b373ce08bae41b800006e",
    "name": "Create a funnel",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5872d6eba44cfcd500000153",
    "name": "Strings to numbers",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Numbers"
    ]
  },
  {
    "id": "58899594b832f80348000122",
    "name": "Simple Fun #55: Cyclic String",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5897cdc26551af891c000124",
    "name": "Hofstadter Q",
    "approved": true,
    "tags": [
      "Algorithms",
      "Recursion",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "58a6742c14b042a042000038",
    "name": "Simple Fun #137: S2N",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58b6c403a38abaaf6c00006b",
    "name": "Simple Fun #175: Same Encryption",
    "approved": true,
    "tags": [
      "Algorithms",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "59b166f0a35510270800018d",
    "name": "Find an area",
    "approved": true,
    "tags": [
      "Algorithms",
      "Graphs",
      "Data Structures",
      "Logic"
    ]
  },
  {
    "id": "59b68710cb7fb425b10000ac",
    "name": "JS Golfing #2: Math.floor",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "59cd0535328801336e000649",
    "name": "Simple Interest and Compound Interest",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a147735ffe75f1c75000199",
    "name": "Stop the loop after n seconds",
    "approved": true,
    "tags": [
      "Bugs",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "5ab7ee556a176b1043000047",
    "name": "Sweet Dreams are Made of Cheese",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "526bd612696e23c43a00032e",
    "name": "Halloween Sweets",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5286a298f8fc1b7667000c1c",
    "name": "Word, char and line count",
    "approved": true,
    "tags": [
      "Algorithms",
      "Chars",
      "Data Types",
      "Parsing",
      "Logic",
      "Strings",
      "Utilities"
    ]
  },
  {
    "id": "52d56d9c6b02b2fa9a0006d9",
    "name": "Write JavaScript's 'call' function using apply.",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Prototype-based Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "54f6e7a62e2c167e29000112",
    "name": "Don't rely on luck HARDCORE",
    "approved": true,
    "tags": [
      "Refactoring",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Prototypes",
      "Security"
    ]
  },
  {
    "id": "55dec8f72ead8624e5000028",
    "name": "Python's Dynamic Classes #3",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Classes",
      "Basic Language Features"
    ]
  },
  {
    "id": "55e5fa3501fd9c3f4d000050",
    "name": "Linked Lists - Merge Sort",
    "approved": true,
    "tags": [
      "Algorithms",
      "Linked Lists",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "5705cc3161944b10fd0004ba",
    "name": "Coding 3min : Are they symmetrical?",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "574a7d0dca4a8a0fbe000100",
    "name": "Reverse complement (DNA )",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "57fa537f8b0760c7da000407",
    "name": "Diamonds and Toads",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Numbers",
      "Control Flow",
      "Basic Language Features",
      "Hashes",
      "Data Structures"
    ]
  },
  {
    "id": "57fb0f3f9610ced69000023c",
    "name": "Exclamation marks series #12: Remove odd number continuous exclamation marks and question marks",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57fb3c839610ce39f7000023",
    "name": "Exclamation marks series #16: Find the longest successive exclamation marks and question marks combination in the string",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5816f2580e80c5e075000a4f",
    "name": "Adding Fractions",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5819f1c3c6ab1b2b28000624",
    "name": "Big Big Big Padovan Number ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Performance",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "58733d9b0e9cf3a824000050",
    "name": "Sum #1",
    "approved": true,
    "tags": [
      "Puzzles",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Games"
    ]
  },
  {
    "id": "5893eb36779ce5faab0000da",
    "name": "Simple Fun #65: Matrix Elements Sum",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "589b30ddcf7d024850000089",
    "name": "Jumble words",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "590c3173cd3b99c467000a26",
    "name": "Simple Fun #247: To And From",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5914e068f05d9a011e000054",
    "name": "Basic Compression",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "595c2988d946a13298000157",
    "name": "Truthy and Falsy",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "596f7ec359f9e9b017000006",
    "name": "BF basics #2: Repeat the input",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "596f80b5f468ae8daa000013",
    "name": "BF basics #1: All ascii characters",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Chars",
      "Data Types"
    ]
  },
  {
    "id": "5a043724ffe75fbab000009f",
    "name": "Slice the middle of a list backwards",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "5a1463678ba9145a670000f9",
    "name": "Berlin Clock",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Strings"
    ]
  },
  {
    "id": "5a430359e1ce0e35540000b1",
    "name": "The average length",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays",
      "Basic Language Features"
    ]
  },
  {
    "id": "5b2b4836b6989d207700005b",
    "name": "Execute me nTimes",
    "approved": true,
    "tags": [
      "Bugs",
      "Fundamentals"
    ]
  },
  {
    "id": "5b7d7ce57a0c9d86c700014b",
    "name": "Add All",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5be8852935da89c5c8000157",
    "name": "Simple Moon Rating",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5e07b5c55654a900230f0229",
    "name": "Reverse Inside Parentheses (Inside Parentheses)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Basic Language Features",
      "Recursion",
      "Algorithms",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science",
      "Parsing"
    ]
  },
  {
    "id": "5f849ab530b05d00145b9495",
    "name": "Gravity Flip (3D version)",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5fa6d9e9454977000fb0c1f8",
    "name": "Unpack delicious sausages!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures"
    ]
  },
  {
    "id": "5fc4e46867a010002b4b5f70",
    "name": "[Code Golf] Length of Month",
    "approved": true,
    "tags": [
      "Puzzles",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "605d25f4f24c030033da9afb",
    "name": "Convert Lambda To Def",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "52afd1fe8f7c52a0e1000304",
    "name": "Santa's Master Plan",
    "approved": true,
    "tags": [
      "Algorithms",
      "Hacking Holidays",
      "Arrays",
      "Data Types",
      "Filtering",
      "Logic"
    ]
  },
  {
    "id": "52ed80dfe7bf9ae61d000056",
    "name": "Deep Freeze",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Recursion",
      "Algorithms",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science",
      "Utilities",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Mutability",
      "Immutability"
    ]
  },
  {
    "id": "5536aba6e4609cc6a600003d",
    "name": "Pig Sursurunga",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5595c56aa6ca910f27000155",
    "name": "Escaping The Matrix",
    "approved": true,
    "tags": [
      "Puzzles",
      "Exception Handling",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "55b019265ff4eeef8c000039",
    "name": "Logical Disjunctions",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "55d38b959f9c33f3fb00007d",
    "name": "The Coins of Ter | Round to the Next N",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "56347fcfd086de8f11000014",
    "name": "Euler's method for a first-order ODE",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "564e48ebaaad20181e000024",
    "name": "Cambridge Word Scramble",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Parsing",
      "Algorithms",
      "Logic",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "566b51166f88d7560c00001a",
    "name": "Shuffle an Array",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "56ebcea1b9d927f9bf000544",
    "name": "Geometric Mean  I",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Algorithms",
      "Logic",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "56fbb2b8fca8b97e4d000a31",
    "name": "DNA Sequence Tester",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Basic Language Features",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "571a2e2df24bdfd4e20001f5",
    "name": "nova polynomial  4. derivative",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "57403b5ad67e87b5e7000d1d",
    "name": "Bubble Sort",
    "approved": true,
    "tags": [
      "Algorithms",
      "Sorting",
      "Logic",
      "Arrays",
      "Data Types",
      "Fundamentals"
    ]
  },
  {
    "id": "5768b775b8ed4a360f000b20",
    "name": "T.T.T. #7: Profit or loss",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5783ef69202c0ee4cb000265",
    "name": "IndexOf Array in Array",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Multi-Dimensional Arrays"
    ]
  },
  {
    "id": "5836ebe4f7e1c56e1a000033",
    "name": "Interlace an arbitrary Number of Strings",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arguments",
      "Basic Language Features"
    ]
  },
  {
    "id": "5838b5eb1adeb6b7220000f5",
    "name": "Identifying Top Users  and their Corresponding Purchases On a Website",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Algorithms",
      "Logic",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Optimization",
      "Declarative Programming",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "5886da134703f125a6000033",
    "name": "Simple Fun #24: Pages Numbering with Ink",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "589436311a8808bf560000f9",
    "name": "Simple Fun #81: Digits Product",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58ecc0a8342ee5e920000115",
    "name": "Triangle of Multiples (Easy One)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Control Flow",
      "Basic Language Features",
      "Data Structures",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "58f671ee5522a9c33800009b",
    "name": "Multiple implications",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5962ddfc2f9addd52200001d",
    "name": "Hexadecimal Keys",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "59778cb1b061e877c50000cc",
    "name": "Adding Arrays",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "599aed42b9712e1afe000014",
    "name": "One function, many arguments: Haskell style.",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Types",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Arguments"
    ]
  },
  {
    "id": "59b2ae6b1b5ca3ca240000c1",
    "name": "Prime Happy",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "59e5fe367905df7f5c000072",
    "name": "Representing complex numbers",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5bb50eb68f8bbdb4b300021d",
    "name": "Evenly distribute values in array",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Sorting",
      "Logic"
    ]
  },
  {
    "id": "5e9df3a0a758c80033cefca1",
    "name": "No Order of Operations",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "533f854e8fedc222fd000001",
    "name": "Find All Array Values That Fall Within a Given Difference",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "544e2c60908f2da03600022a",
    "name": "Convert between radians and degrees",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "55327e12f5363713200000e4",
    "name": "JoJo's Bizarre Kata",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5559e4e4bbb3925164000125",
    "name": "Fibonacci Rabbits",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "55de3f83e92c3e521a00002a",
    "name": "A for Apple",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55f2c3dde50947271200006a",
    "name": "Add a property to an object",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56523ec6fc8ac62677000005",
    "name": "Create sequence containing all allowed characters",
    "approved": true,
    "tags": [
      "Fundamentals",
      "ASCII",
      "Character Encodings",
      "Formats",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "5686004a2c7fade6b500002d",
    "name": "Regexp basics - parsing mana cost",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "56951add53eccacf44000030",
    "name": "Doggy Daycare",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Data Structures"
    ]
  },
  {
    "id": "570771871df89cf59b000742",
    "name": "Coding 3min : Max Value",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "570f3fc5b29c702c5500043e",
    "name": "Coding 3min : Find the murderer",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57a059d753ba33229500001a",
    "name": "MakeLowerCase",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57a72cb872292dc43100000c",
    "name": "Airport itinerary",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "581fc49b55c3d2d83c0000f8",
    "name": "Array.diff hero",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "582b0d73c190130d550000c6",
    "name": "Square and Cubic Factors",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58a0697ef636cac09c000014",
    "name": "Youtube URL",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Basic Language Features"
    ]
  },
  {
    "id": "58a12162784e0cfe4700000d",
    "name": "One Line Task: GCD Function",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58cbfe2516341cce1e000001",
    "name": "Jungerstein's Math Training Room: 1. How many zeros are at the end of n!! ? ",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5a0599908ba914a6cf000138",
    "name": "Pitches and Notes",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a0efbb7c374cb69970000cf",
    "name": "Reversed Message",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5a7e6bd576c0e2f27d00237a",
    "name": "Is there a sequence re-occuring in the list",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Lists",
      "Data Structures",
      "Performance"
    ]
  },
  {
    "id": "5a831574373c2e48cf00000d",
    "name": "Control the Beast (controlled components in ReactJS)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "React",
      "Babel",
      "Frameworks"
    ]
  },
  {
    "id": "5acc79efc6fde7838a0000a0",
    "name": "Binary Tree Search (not BST)",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5acf710f46b4cb00810001e2",
    "name": "The Deca Tree",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Objects",
      "Data Types"
    ]
  },
  {
    "id": "5b114e854de8651b6b000123",
    "name": "Heroes of Might & Magic II:  One-on-One",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Objects",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5b68983a975680155000005d",
    "name": "Scrabblemania",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Objects",
      "Data Types",
      "Games"
    ]
  },
  {
    "id": "617bfa617cdd1f001a5cadc9",
    "name": "Mountains of Hoiyama",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "52a64cf14009fd59c6000994",
    "name": "Holiday Shopping Priority Queue",
    "approved": true,
    "tags": [
      "Algorithms",
      "Hacking Holidays",
      "Queues",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "52ac7cad98d1981a840004fc",
    "name": "Anything to integer",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Integers",
      "Data Types",
      "Numbers",
      "Esoteric"
    ]
  },
  {
    "id": "52de9bd621c71b919c000592",
    "name": "Hyper Sphere",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Arrays",
      "Utilities"
    ]
  },
  {
    "id": "5379fdfad08fab63c6000a63",
    "name": "Simple CSS selector comparison",
    "approved": true,
    "tags": [
      "Algorithms",
      "Rules",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "55538e3de348a57f7e000076",
    "name": "Parsing Commandline Arguments",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Parsing",
      "Algorithms",
      "Logic",
      "Strings",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5567e7d0adb11174c50000a7",
    "name": "Node Mania",
    "approved": true,
    "tags": [
      "Algorithms",
      "Linked Lists",
      "Lists",
      "Data Structures",
      "Logic",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Fundamentals",
      "Programming Paradigms"
    ]
  },
  {
    "id": "557d9e4d155e2dbf050000aa",
    "name": "Anything",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5610a8eeb9a84d624b000005",
    "name": "The sortReloaded() method",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Prototypes",
      "Inheritance",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Polymorphism"
    ]
  },
  {
    "id": "56b012bbee8829c4ea00002c",
    "name": "Tracking pawns",
    "approved": true,
    "tags": [
      "Puzzles",
      "Strings",
      "Data Types",
      "Arrays",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "56cf0eb69e14db4897000b97",
    "name": "Goldbach's conjecture (Prime numbers)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "57f669477c9a2b1b9700022d",
    "name": "Identify the array's ordering",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Booleans",
      "Data Types",
      "Arrays",
      "Strings",
      "Numbers",
      "Puzzles",
      "Games",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "57f90a8d5cae44a9dc000091",
    "name": "JS is Weird: Return a",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5843f66613ee50e56c0000b9",
    "name": "Lucky Tickets",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "584cfd7e2609c8ab4d0000e3",
    "name": "Airport Arrivals/Departures - #2",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "58811e9cfd05cb5aed0000a4",
    "name": "Centroid I",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5893933e1a88084be10001a3",
    "name": "Domain name validator",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Data Types",
      "Validation",
      "Algorithms",
      "Logic",
      "Parsing"
    ]
  },
  {
    "id": "58fdcc51b4f81a0b1e00003e",
    "name": "Pigs in a Pen",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "594c6ad5d909ca19e200002f",
    "name": "Creating a Bitset, Part 1",
    "approved": true,
    "tags": [
      "Algorithms",
      "Sets",
      "Arrays",
      "Data Types",
      "Data Structures"
    ]
  },
  {
    "id": "59512d72944ca1feb000013d",
    "name": "Calculator (Addition and Spaces) [Part 1]",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Numbers"
    ]
  },
  {
    "id": "596f88f359f9e99030000012",
    "name": "BF basics #3: Plusing",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5aee96e22c5061ee90000024",
    "name": "Quadratic Enumerator ",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5b901127d0093853470001e7",
    "name": "Most consecutive 0's in a row [Code-golf]",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "61559bc4ead5b1004f1aba83",
    "name": "Count a Spiral",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "53c94a82689f84c2dd00007d",
    "name": "Integer to English",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Strings",
      "Integers"
    ]
  },
  {
    "id": "55a1528cca4a6d4c5a0000e3",
    "name": "Default + Rest + Spread",
    "approved": true,
    "tags": [
      "Refactoring",
      "ES2015",
      "Babel",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Fundamentals",
      "Programming Paradigms"
    ]
  },
  {
    "id": "55a4de202949dca9bd000088",
    "name": "A Simple Postfix Language",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "560b000f56b4d8be9e000018",
    "name": "Where am I?",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "56f6b23c9400f5387d000d48",
    "name": "Countdown to Christmas",
    "approved": true,
    "tags": [
      "Algorithms",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "577d5ce442a8d81e790002b2",
    "name": "Celebrity Baby Names",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Strings",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5885424265fc9c38100017ef",
    "name": "Playing with Sets : Sup/Sub",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Sets",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "589f8bb8423ac3576a00000b",
    "name": "A Letter from Your Niece",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "58c8b9b026d93acc23000140",
    "name": "One Line Task: Esperanza Pies",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5940ec284aafb87ef3000028",
    "name": "Number Decoding",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Decoding",
      "Algorithms",
      "Logic",
      "Parsing",
      "Strings",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "594cd799c08247a55a000004",
    "name": "Simple Fun #324: Is John Lying?",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5995ceb5d4280d07f6000822",
    "name": "Alpha to Numeric and Numeric to Alpha",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5a3ddf58e1ce0e6f8f000030",
    "name": "That unites us",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Strings",
      "Basic Language Features"
    ]
  },
  {
    "id": "5ac66185a1ad6f065b000046",
    "name": "Clean up your Gibberish!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types",
      "Arrays",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5cb5eb1f03c3ff4778402099",
    "name": "Four Letter Words ~ Mutations",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Arrays",
      "Games",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Loops",
      "Parsing",
      "Logic"
    ]
  },
  {
    "id": "5e81303e7bf0410025e01031",
    "name": "Possible side lengths of a triangle excluding right triangles.",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "52f6be83172a8ba0be000342",
    "name": "Reverse linked list",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Lists",
      "Data Structures",
      "Data Types"
    ]
  },
  {
    "id": "547a77a6b84a1fb8bf000211",
    "name": "Coroutines",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Continuations",
      "Control Flow",
      "Control States",
      "Basic Language Features"
    ]
  },
  {
    "id": "55dd54631827120dd800002b",
    "name": "Objectify all the strings",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "564b0f24c685f1befa000081",
    "name": "Peter takes an exam in school",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56832fb41676465e82000030",
    "name": "Hangman game",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Games",
      "ES2015",
      "Babel"
    ]
  },
  {
    "id": "56971747aa359bdbf800004d",
    "name": "Tricky Doubles",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57819b700a8eb2d6b00002ab",
    "name": "Hollow Triangle",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57d0fad6eca26073c3000023",
    "name": "PHP Functions - Default Arguments",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "57d6c3fb950d84fcfb0015c8",
    "name": "Compress/Encode a Message with RLE (Run Length Encoding)",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "57f3c59fab9a91db28000027",
    "name": "An 'orrible expression on 'is face",
    "approved": true,
    "tags": [
      "Bugs",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings"
    ]
  },
  {
    "id": "581f12491bbdd0ca45000070",
    "name": "Multiple of 11",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Types",
      "Arithmetic"
    ]
  },
  {
    "id": "5830e7feff1a3ce8d4000062",
    "name": "Area and perimeter of the ellipse",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "587e1ef6f1a2534bbe0001ef",
    "name": "Packet Delivery -- Enforcing Constraints",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Properties",
      "Exception Handling",
      "Control Flow"
    ]
  },
  {
    "id": "5888145122fe8620950000f0",
    "name": "Simple Fun #39:  Switch Lights",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5889ae4f7af7f99a9a000019",
    "name": "Simple Fun #62: Draw Rectangle",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5894045b8a8a230d0c000077",
    "name": "Simple Fun #70: Avoid Obstacles",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58ade79f3c97367977000274",
    "name": "DevOps legacy roasting ->  disco inferno -> burn baby burn",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5928da5f1fad49c34d00013a",
    "name": "Canvas Fun #1: Draw Lines",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "594979a364becbc1ab00003a",
    "name": "PRNG: Linear Congruential Generator",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5a03295680171ffd7b0000c7",
    "name": "Lombok Encapsulation",
    "approved": true,
    "tags": [
      "Refactoring",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5dcde0b9fcb0d100349cb5c0",
    "name": "Longest Palindromic Substring (Linear)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Performance",
      "Logic",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5244b0588978473f9500002b",
    "name": "Object Search and Replace",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5298ad7cd0f550269500051b",
    "name": "Ziiiiip!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Objects",
      "Hashes",
      "Data Structures",
      "Mapping",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "52f2f5ecc807c0ab1a00001a",
    "name": "Atbash Cipher Helper",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Ciphers",
      "Cryptography",
      "Security",
      "Objects",
      "Data Types",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Fundamentals",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "537400e773076324ab000262",
    "name": "Group Anagrams",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Data Structures"
    ]
  },
  {
    "id": "54149054c1f3a6675b0009c2",
    "name": "Type Checking",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Utilities",
      "Validation",
      "Algorithms",
      "Logic",
      "Control Flow",
      "Basic Language Features",
      "Strings",
      "Data Types",
      "Numbers",
      "Arrays",
      "Functions",
      "Objects"
    ]
  },
  {
    "id": "55b0fb65e1227b17d60000dc",
    "name": "JSON Class Decorator",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "55ea170313b76622b3000014",
    "name": "Numbers and its Reversal Having Same Prime Factors.",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5612ab201830eb000f0000c0",
    "name": "Find the First Number in Having a Certain Number of Divisors I",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Structures",
      "Control Flow",
      "Basic Language Features",
      "Dynamic Programming",
      "Programming Paradigms",
      "Memoization",
      "Design Patterns",
      "Design Principles"
    ]
  },
  {
    "id": "5736378e3f3dfd5a820000cb",
    "name": "Bus Timer",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Parsing",
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "57cebf1472f98327760003cd",
    "name": "Coloured Lattice Points Forming Coloured Triangles",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Algorithms",
      "Logic",
      "Control Flow",
      "Basic Language Features",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Optimization",
      "Declarative Programming",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "57d63b45ec1670518c000259",
    "name": "#8: Treasure Map",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "581d2647b2d02e33be000094",
    "name": "Getting to know LINQ",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5839cd780426f5d0ec00009a",
    "name": "[Minecraft Series #1] Steve wants to build a beacon pyramid",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "58439be66f5fc42e30000076",
    "name": "Crazed Templating",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "587593285448632b8d000143",
    "name": "Promises Made and Broken: The Misadventures of Bob the Highly Paid Consultant",
    "approved": true,
    "tags": [
      "Bugs",
      "Promises",
      "Design Patterns",
      "Design Principles"
    ]
  },
  {
    "id": "587fb57e12fc6eadf200009b",
    "name": "SHA-256",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Hashes",
      "Data Structures",
      "Cryptography",
      "Security"
    ]
  },
  {
    "id": "5884615cbd573356ab000050",
    "name": "Simple Fun #12: Count Sum of Two Representions",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58acf858154165363c00004e",
    "name": "Challenge Fun #14: Target Game",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "58b63cb2b7d86adb650000b7",
    "name": "Simple Fun #173: A Hero Go To The School",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58d54d0914286c23820001e6",
    "name": "Where is THB?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5931614bb2f657c18c0001c3",
    "name": "Cancer cells",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "59a9466f589d2af4c50001d8",
    "name": "Last digit symmetry",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5a906c895084d7ed740000c2",
    "name": "Simple number triangle",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5ae1dcde9c0e489ae00019fc",
    "name": "Determine the logarithm base",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5be1a950d2055d589500005b",
    "name": "Bulls and Cows",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Games",
      "Numbers",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "5d4c6809089c6e5031f189ed",
    "name": "Computer problem series #2: Torrent download",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5df0041acec189002d06101f",
    "name": "Pathfinder Ability Scores Calculator",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5ef9c85dc41b4e000f9a645f",
    "name": "Decode the QR-Code",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Decoding"
    ]
  },
  {
    "id": "6135e4f40cffda0007ce356b",
    "name": "Bishop Movement checker",
    "approved": true,
    "tags": [
      "Algorithms",
      "Games",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "521fd22c15fe6ad91d0001f0",
    "name": "No Modulo",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "549e70e994e517ed8b00043e",
    "name": "Threaded counting",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "550fac5249073256380002c0",
    "name": "Reverse fibonacci series",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "553a2461098c64ae53000041",
    "name": "Wordify an integer",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5594c4599934000e1e00002e",
    "name": "Find the Nth longest string in an Array",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "55bc0c54147a98798f00003e",
    "name": "Longest 2-character substring",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "55f1a53d9c77b0ed4100004e",
    "name": "Multiples by permutations ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Data Structures",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Permutations",
      "Mathematics",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "562c3b54746f50d28d000027",
    "name": "Decoded String by the Numbers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Decoding"
    ]
  },
  {
    "id": "563cb92e0996a4ac0b000042",
    "name": "Numbers' Plus Pattern",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5654d2428be803670a000030",
    "name": "Guess My Number",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56a28c30d7eb6acef700004d",
    "name": "Perfect Number Verifier",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "56d55dcdc87df58c81000605",
    "name": "Credit Card Checker",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals"
    ]
  },
  {
    "id": "57bff92049324c0fd00012fd",
    "name": "T.T.T.51: Four warriors and a lamp",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57cbb9e240e3024aae000b26",
    "name": "2 DNAs sequences, coding for same protein? ",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Logic",
      "Hashes",
      "Data Structures",
      "Arrays"
    ]
  },
  {
    "id": "57d3c6a043942a34d200015e",
    "name": "PHP Functions - Splat Operator",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "57e141ad8a8b8d4d150004f6",
    "name": "Cheat at rock paper scissors!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Basic Language Features"
    ]
  },
  {
    "id": "57fb1705f815ebd49e00024c",
    "name": "Exclamation marks series #14: Convert the exclamation marks and question marks to a prime number",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5821cd4770ca285b1f0001d5",
    "name": "Snakes & Ladders",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5856f3ecf37aec45e6000091",
    "name": "Count Connectivity Components",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Graphs",
      "Data Structures",
      "Logic"
    ]
  },
  {
    "id": "58870742c815166a960000af",
    "name": "Simple Fun #31:  Is Substitution Cipher?",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58a30be22d5b6ca8d9000012",
    "name": "GCD Matrix",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "596144f0ada6db581200004f",
    "name": "Fibonacci on roids",
    "approved": true,
    "tags": [
      "Algorithms",
      "Recursion",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science",
      "Optimization",
      "Iterators",
      "Control Flow",
      "Object-oriented Programming",
      "Basic Language Features",
      "Fundamentals",
      "Programming Paradigms",
      "Map/Reduce",
      "Lists",
      "Data Structures",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "59824f384df1741e05000913",
    "name": "Most common first",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59b33a4a8bcb77608e000103",
    "name": "Tricky Kotlin #1: invoke a string",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Tips & Tricks",
      "Advanced Language Features"
    ]
  },
  {
    "id": "59bfe5f15227ddf81900007b",
    "name": "Return the latest modified file",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a685705b3bfa870f6000024",
    "name": "Shorten Me: Mad Mathematician's Algorithm II (Subtraction)",
    "approved": true,
    "tags": [
      "Puzzles",
      "Fundamentals",
      "Games"
    ]
  },
  {
    "id": "5b06c990908b7eea73000069",
    "name": "Experimenting with a sequence of complex numbers",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5b6fcd9668cb2e282d00000f",
    "name": "Photocopy decay",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5c15dd0fb48e91d81b0000c6",
    "name": "I'm already Tracer",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Games",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5cd48cffaae6e30018943175",
    "name": "Decrypt this school cipher",
    "approved": true,
    "tags": [
      "Algorithms",
      "Cryptography",
      "Security",
      "Fundamentals",
      "Strings",
      "Data Types",
      "Parsing",
      "Logic"
    ]
  },
  {
    "id": "5d82344d687f21002c71296e",
    "name": "Sheffer stroke",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5e5b7f55c2e8ae0016f42339",
    "name": "Evaluating prefix Polish notation",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Parsing",
      "Algorithms",
      "Logic",
      "Strings",
      "Mathematics",
      "Numbers",
      "Lists",
      "Data Structures",
      "Data Types"
    ]
  },
  {
    "id": "535e88e608035176670014b8",
    "name": "Name That Integer",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lambdas",
      "Functional Programming",
      "Functions",
      "Declarative Programming",
      "Programming Paradigms",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5376343a003bf6e034000c56",
    "name": "Closest pair of points",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "53db4acb1f1a7dd68700040a",
    "name": "Monads: The list monad",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5402724fd39b43c075000116",
    "name": " xD-Arrays  for dimmies",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5434d8487abffa2f64000db6",
    "name": "Who let the dogs out?",
    "approved": true,
    "tags": [
      "Bugs",
      "Logic"
    ]
  },
  {
    "id": "546b22225874d24fbd00005b",
    "name": "2 Arrays 1 Sort",
    "approved": true,
    "tags": [
      "Algorithms",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "547336f44481cf5ecc000dde",
    "name": "Next birth-day of the week finder",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types",
      "Utilities"
    ]
  },
  {
    "id": "55a5085c1a3d379fbb000062",
    "name": "Slamming Lockers",
    "approved": true,
    "tags": [
      "Puzzles",
      "Algorithms",
      "Logic",
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "564717d6e94d5d6b21000066",
    "name": "Format of a ticket number",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "56bac4c34537cf1e270005a1",
    "name": "Sorting Arrays ... wait, what?!",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "57353de879ccaeb9f8000564",
    "name": "Training JS #35: methods of Math---log() and its family",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57452748976d65946d000599",
    "name": "Decipher the Message",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "57d0329442e44e65e8000bb5",
    "name": "Simple Encryption #3 - Turn The Bits Around",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Cryptography",
      "Security",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "580535462e7b330bd300003d",
    "name": "Rock Paper Scissors Oracle",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "581dc1852d68e751180000c6",
    "name": "Insert value into an array",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "588502f87987a27f690001f7",
    "name": "Playing with Sets : Equal or Not ?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Sets",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "58878393fc23972533001434",
    "name": "Check if number is prime without loops",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Logic"
    ]
  },
  {
    "id": "58aa7f18821a769a7d000190",
    "name": "Simple Fun #145: Table Game",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "58ab002d68ee07c57b000118",
    "name": "Represent array of numbers as ranges",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "58f290d0b48966547f00014c",
    "name": "Spelling Bee II",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58fdc60ed94f25a863000092",
    "name": "Array of twins",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types",
      "Numbers"
    ]
  },
  {
    "id": "597f334f1fe82a950500004b",
    "name": "Common directory path",
    "approved": true,
    "tags": [
      "Puzzles",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "599385ae6ca73b71b8000038",
    "name": "Ant Bridge",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "59b7cae170a3b77d0000004b",
    "name": "JS Golfing #5: A Million Times",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "59f22b3cf0a83ff3e3003d8c",
    "name": "Distribute server workload",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "5a6a02adcadebf618400002b",
    "name": "Make Your Own Hashmap",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Hashes",
      "Data Structures",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5abab55b20746bc32e000008",
    "name": "Blobservation",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Games",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Fundamentals",
      "Programming Paradigms",
      "Performance"
    ]
  },
  {
    "id": "5bf6bd7a3efceeda4700011f",
    "name": "Regex for a decimal number divisible by 4",
    "approved": true,
    "tags": [
      "Puzzles",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings",
      "Games"
    ]
  },
  {
    "id": "5d9fe0ace0aad7001290acb7",
    "name": "Significant Figures",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "605150ba96ff8c000b6e3df8",
    "name": "The Great Digital Conflict",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "521660e064dc2ccdd900008d",
    "name": "Calculate age in years",
    "approved": true,
    "tags": [
      "Algorithms",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "541a077539c5ef3fd8001133",
    "name": "Typer.js",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Types",
      "Basic Language Features",
      "Modules",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Functions",
      "Control Flow",
      "Utilities"
    ]
  },
  {
    "id": "541a9774204d12252f00045d",
    "name": "Float or Integer verifier",
    "approved": true,
    "tags": [
      "Puzzles",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings"
    ]
  },
  {
    "id": "541b5694204d12573700101c",
    "name": "Combinator Flip",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Arguments",
      "Basic Language Features",
      "Functions",
      "Control Flow"
    ]
  },
  {
    "id": "543e308b23ccbda148001526",
    "name": "Playing with types",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Dynamic Typing",
      "Language Semantics",
      "Basic Language Features"
    ]
  },
  {
    "id": "549cb9c0c36a02ce2e000156",
    "name": "RPG dice roller",
    "approved": true,
    "tags": [
      "Algorithms",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "557810cf791bbfd5ff00008f",
    "name": "Integer Primitive Data Types",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Integers",
      "Data Types",
      "Numbers"
    ]
  },
  {
    "id": "56abc5e63c91630882000057",
    "name": "Next Featured Number Higher than a Given Value",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56dbb6603e5dd6543c00098d",
    "name": "Tracking Sums in a Process",
    "approved": true,
    "tags": [
      "Puzzles",
      "Fundamentals",
      "Data Structures",
      "Algorithms",
      "Logic",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Optimization",
      "Declarative Programming",
      "Programming Paradigms",
      "Sorting",
      "Games"
    ]
  },
  {
    "id": "570e1271e5c9a0cf2f000d11",
    "name": "Kontti Language",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "57c18a16c82ce75f4b000020",
    "name": "Number of Digit d in m-based Number Converted to Base n",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "57e6bcbd684e570c6700021c",
    "name": "Help Green Lantern with his web site",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "57f21fcd69e09cb0d2000088",
    "name": "\"com\", \"gov\", \"org\" first",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5831c5f8ac6a11e3380002de",
    "name": "Min value of each n elements -- Simple version",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58475cce273e5560f40000fa",
    "name": "Square Roots: Approximation",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "584cfac5bd160694640000ae",
    "name": "Domino Reaction",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "586c7cd3b98de02ef60001ab",
    "name": "Unique Strings",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "58956f5ff780edf4a70000a2",
    "name": "Simple Fun #86: is Information Consistent?",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58985ffa8b43145ac900015a",
    "name": "Quest: Kill ten rats!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58ad29bc4b852b14a4000050",
    "name": "Simple Fun #157: Counting Triangles",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "58b65c5e8b98b2e4fa000034",
    "name": "Simple Fun #174: Unlucky Number",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58c2158ec7df54a39d00015c",
    "name": "Simple Fun #193: Moment Of Time In Space",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58cfe6c9f9dffe0f5100017f",
    "name": "Simple Class Terminology",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5950a4bfc6bf4f433f000031",
    "name": "Simple Fun #326: The Shortest Time",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5954584610080b7252000003",
    "name": "Simple Fun #332: Catch Thief",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5966ffb962d030e11a00005a",
    "name": "Sum The Strings: ARRAY EDITION",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59b139d69c56e8939700009d",
    "name": "Largest integer exponent",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "59b46276afcda204ed000094",
    "name": "Prime reversion",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a04450c8ba914083700000a",
    "name": "Find Max Tree Node",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science",
      "Recursion Theory",
      "Mathematical Logic",
      "Mathematics",
      "Binary Search Trees",
      "Trees",
      "Binary",
      "Data Structures"
    ]
  },
  {
    "id": "5a48fab7bdb9b5b3690009b6",
    "name": "Reorder Array 2",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Integers",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Advanced Language Features",
      "numpy",
      "Python Packages"
    ]
  },
  {
    "id": "5a54c56cb6be5311850014df",
    "name": "Shorten Me: Array Declaration II (undefined)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5b64334ab1788374fb0000c8",
    "name": "First thing first.",
    "approved": true,
    "tags": [
      "Bugs",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "5c511d8877c0070e2c195faf",
    "name": "Password should not contain any part of your username.",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Validation",
      "Algorithms",
      "Logic",
      "Data Types"
    ]
  },
  {
    "id": "5f78635e51f6bc003362c7d9",
    "name": "Check that the situation is correct",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "60d20fe1820f1b004188ceed",
    "name": "[Code Golf] A Triangle?",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "53e248c9af0d91a45b000e71",
    "name": "mkdir -p",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5416f1834c24604c46000696",
    "name": "Cycle Detection: greedy algorithm",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "559f8d487fa8511c43000118",
    "name": "Is this working?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lambdas",
      "Functional Programming",
      "Functions",
      "Declarative Programming",
      "Programming Paradigms",
      "Control Flow",
      "Basic Language Features",
      "Constructors",
      "ES2015",
      "Babel"
    ]
  },
  {
    "id": "5666bd1011beb6f768000073",
    "name": "What day is it?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57dd3a06eb0537b899000a64",
    "name": "The 12 Days of Christmas",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Sorting",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "581534b8d5fae4428e00001e",
    "name": "Extending JavaScript Objects: Simple Math Methods",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Objects",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5815fd7441e062463d0000f8",
    "name": "Linux history and  `!` command. Series#3  The `!-n` command",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Parsing",
      "Logic",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals"
    ]
  },
  {
    "id": "58587905ed1b4dad6e0000c6",
    "name": "Smart Traffic Lights",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "588711735ea0b4649e000001",
    "name": "Simple Fun #34:  Numbers Grouping",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5893e7578afa367a61000036",
    "name": "Simple Fun #64: Almost Increasing Sequence",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58953a5a41c97914d7000070",
    "name": "Simple Fun #85: Polygon Perimeter",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58a5d9aaa49f6cd0f9000ad7",
    "name": "Fibonacci Generator Function",
    "approved": true,
    "tags": [
      "Refactoring",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "58c8af49fd407dea5f000042",
    "name": "Simple Fun #200: Luxurious House",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59000d6c13b00151720000d5",
    "name": "Simple Fun #215: Properly Closed Bracket Word",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "591f3a2a6368b6658800020e",
    "name": "Break the pieces (Evilized Edition)",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59952e17f902df0e5f000078",
    "name": "NFL Passer Ratings",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "59b7b43b4f98a81b2d00000a",
    "name": "Lazy Init  ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Metaprogramming",
      "Programming Paradigms",
      "Advanced Language Features"
    ]
  },
  {
    "id": "59e6aec2b2c32c9d8b000184",
    "name": "Letterss of natac: build or buy",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59f3178e3640cef6d90000d5",
    "name": "Sum of integer combinations",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5a08a64b7bbb9e237f000a0d",
    "name": "Kind Rem(a)inder",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5a0b72484bebaefe60001867",
    "name": "Distance between two points",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a224a15ee1aaef6e100005a",
    "name": "Invert The Triangle",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5a46179ce626c5ef8d000024",
    "name": "Check contained matrix",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Graphs",
      "Data Structures",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5a491f0be6be389dbb000117",
    "name": "Drinking Game",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5a70285ab17101627a000024",
    "name": "Gerrymander Solver",
    "approved": true,
    "tags": [
      "Algorithms",
      "Puzzles",
      "Games",
      "Logic"
    ]
  },
  {
    "id": "5adbc57f0774dbaa5600011b",
    "name": "Fizz Buzz Reloaded",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5af823451839f1768f00009d",
    "name": "NLP-Series #1 - Inverted Index",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Parsing",
      "Algorithms",
      "Logic",
      "Strings",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5b24bcecd74b5be066000054",
    "name": "Computer Science 101 - #1 Stacks",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Stacks",
      "Arrays",
      "Data Types",
      "Linked Lists",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "5bc5c0f8eba26e792400012a",
    "name": "Print number with character",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Formatting",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5ccfcfad7306d900269da53f",
    "name": "Last Digit to Appear in Sequence of Powers",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5e0baea9d772160032022e8c",
    "name": "Sports League Table Ranking",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic",
      "Arrays",
      "Data Types",
      "Sorting"
    ]
  },
  {
    "id": "6113c2dc3069b1001b8fdd05",
    "name": "Counting Duplicates  Across Multiple Lists",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "523878615b438c1c450003ba",
    "name": "bit \"Wise\" #1: XOR-cism",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "52a7099f8a4d9604bb000472",
    "name": "7-segment converter",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Binary",
      "Bits"
    ]
  },
  {
    "id": "543ddf69386034670d000c7d",
    "name": "Angle Between Clock Hands",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "549c7ae26d86c7c3ed000b87",
    "name": "Summing Large Amounts of Numbers",
    "approved": true,
    "tags": [
      "Puzzles",
      "Binary",
      "Games"
    ]
  },
  {
    "id": "55b6a3a3c776ce185c000021",
    "name": "Transposing a song",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic",
      "Strings",
      "Data Types",
      "Parsing",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "55f2a1c2cb3c95af75000045",
    "name": "When greatest is less than smallest",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "561e1e2e6b2e78407d000011",
    "name": "The Sum and The Rest of Certain Pairs of Numbers have to be Perfect Squares",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Control Flow",
      "Basic Language Features",
      "Hashes",
      "Data Structures"
    ]
  },
  {
    "id": "5645d1a4d907bd6009000052",
    "name": "Walter's miraculous FizzBuzz factory",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "56fd46bcc5957c83ea001023",
    "name": "Factory Functions #1 - Creating profile for people",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57b365f81fae8a0571000142",
    "name": "Measuring Average Speed",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Basic Language Features",
      "Numbers",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "57ba58d68dcd97e98c00012b",
    "name": "Prime Primes",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "57d6ae421a6282aa4f000b97",
    "name": "PHP Functions - Type Declarations",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "580f1220df91273ee90001e7",
    "name": "Fixed xor",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Algebra",
      "Binary",
      "Cryptography",
      "Security"
    ]
  },
  {
    "id": "58177df1e7f457b89d000327",
    "name": "Save for retirement",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5818c52e21a33314e00000cb",
    "name": "Sort two arrays",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "581b29b549b2c0daeb001454",
    "name": "Linux history and  `!` command. Series#5  The `!?string` command",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Parsing",
      "Logic",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals"
    ]
  },
  {
    "id": "5845e3f680a8cf0bad00017d",
    "name": "Minimum path in squares",
    "approved": true,
    "tags": [
      "Algorithms",
      "Dynamic Programming",
      "Programming Paradigms",
      "Logic"
    ]
  },
  {
    "id": "584857c5a7878e993b0005cc",
    "name": "Bash Basics - Find Number of files in a Directory",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Bash",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5859aaf04facfeb0d4002051",
    "name": "Best Parking Spot",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5867d76b36959fa4a400034e",
    "name": "Rithm Series: Frame a Phrase Simple",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58b20418e39e2ad9ae000150",
    "name": "Kushim the Accountant: Extract $ values from text",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "58b38f24c723bf6b660000d8",
    "name": "Simple Fun #167: Spreadsheet",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "58be35e9e36224a33f000023",
    "name": "Tom's Allergies",
    "approved": true,
    "tags": [
      "Puzzles",
      "Algorithms",
      "Logic",
      "Games",
      "Fundamentals"
    ]
  },
  {
    "id": "58f1419b03388b4d45000081",
    "name": "RegExp for validation string",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "590011f0d720bdc6ae000078",
    "name": "One Line Task: Largest Rectangle",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5916b952e76dc9cbcb000066",
    "name": "Learning TypeScript. Basic Types. Type Assertions",
    "approved": true,
    "tags": [
      "Bugs"
    ]
  },
  {
    "id": "595d54bddddd7cf91800008c",
    "name": "COFFEE!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5992e11d6ca73b38d50000f0",
    "name": "Clever split",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "59b0ab12cf3395ef68000081",
    "name": "Converting 24-hour time to 12-hour time",
    "approved": true,
    "tags": [
      "Algorithms",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "5a3141fe55519e04d90009d8",
    "name": "Card game",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Games",
      "Strings",
      "Data Types",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "5af0a5fc783bb49e9500007d",
    "name": "Price is right",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5b23d98da97f02a5f4000a4c",
    "name": "Dollar Value to Speech Conversion",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5b4dee5d05f04bba43000138",
    "name": "Warm Up for Speed.",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Performance",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Data Structures",
      "Arrays",
      "Sorting"
    ]
  },
  {
    "id": "5e4bb05b698ef0001e3344bc",
    "name": "Operations on sequences",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5e60cdcd01712200335bd676",
    "name": "Pandas Series 101: Rename Columns",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "pandas",
      "Python Packages"
    ]
  },
  {
    "id": "52b4d1be990d6a2dac0002ab",
    "name": "Longest sequence with zero sum",
    "approved": true,
    "tags": [
      "Algorithms",
      "Sequences",
      "Arrays",
      "Data Types",
      "Arithmetic",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "53c8b29750fe70e4a2000610",
    "name": "Haskell List  Dot Notation",
    "approved": true,
    "tags": [
      "Algorithms",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "542332c8c2cf7ccbbb000005",
    "name": "Common Bit Twiddles",
    "approved": true,
    "tags": [
      "Refactoring",
      "Utilities",
      "Advanced Language Features",
      "Fundamentals",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Binary",
      "Bits"
    ]
  },
  {
    "id": "5562ab5d6dca8009f7000050",
    "name": "riemann sums I (left side rule)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "557d18803802e873170000a0",
    "name": "String Shortener (shrink)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "558ecd6398ae4ed3350000c2",
    "name": "Parse the log",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Parsing",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "55b6dd6282cc7ceadb000131",
    "name": "React with JSX",
    "approved": true,
    "tags": [
      "Fundamentals",
      "React",
      "Babel"
    ]
  },
  {
    "id": "55c2a1ee7fe3ccfee5000058",
    "name": "Find the Combination",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "55caf9ff29c318407c00001f",
    "name": "Javascript Magic Function",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Duck Typing",
      "Dynamic Programming",
      "Dynamic Typing",
      "Weak Typing",
      "Programming Paradigms",
      "Language Semantics",
      "Basic Language Features"
    ]
  },
  {
    "id": "55f8b5b09ec923860200000f",
    "name": "Squeaky Window",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "56562b12044fa538b0000010",
    "name": "Image Files Only",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "56c30eaef85696bf35000ccf",
    "name": "Pattern 01: Merry Christmas (sometimes little bit out of time;-))",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Basic Language Features",
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "56e20642ddeb0f4fac000344",
    "name": "Array Mappings",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Prototype-based Programming",
      "Prototypes"
    ]
  },
  {
    "id": "570957fc20a35bd2df0004f9",
    "name": "The Sceptical Kid Generator",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "57555810be106b613c000115",
    "name": "Regex Ninja: Unique Digits",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "578fe7e2149935740f000525",
    "name": "Second largest in Array",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Numbers"
    ]
  },
  {
    "id": "57a492607cb1f315ec0000bb",
    "name": "Regular Expressions (groups): Splitting phone numbers into their separate parts.",
    "approved": true,
    "tags": [
      "Algorithms",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings",
      "Parsing",
      "Logic"
    ]
  },
  {
    "id": "57e8c68c97a05990b10000c3",
    "name": "Broken Collatz",
    "approved": true,
    "tags": [
      "Bugs",
      "Fundamentals",
      "Recursion",
      "Algorithms",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "57fb4b289610ce39f70000de",
    "name": "Exclamation marks series #18: a simple slot machine that only contains exclamation marks and question marks",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "580ec64394291d946b0002a1",
    "name": "Mysterious Pattern",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5813084c6858b6ba7b00006a",
    "name": "Fun with operators",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Booleans",
      "Data Types",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Objects"
    ]
  },
  {
    "id": "5818236ae7f457017b00022b",
    "name": "Linux history and  `!` command. Series#4  The `!string` command",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Parsing",
      "Logic",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals"
    ]
  },
  {
    "id": "5826f54cc60c7e5266000baf",
    "name": "Minimum Perimeter of a Rectangle",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5829c2c8ef8d4474300000fa",
    "name": "Triple Sorting - Sort & Stringify a list by 3 attributes",
    "approved": true,
    "tags": [
      "Algorithms",
      "Streams",
      "IO",
      "Strings",
      "Data Types",
      "Collections",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "586a514cc66d18807f0000a6",
    "name": "Implement brute force protection",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Logic",
      "Security",
      "Singleton",
      "Design Patterns",
      "Design Principles",
      "Object-oriented Programming"
    ]
  },
  {
    "id": "587ac5616d360f6bed000088",
    "name": "Plotting points on a grid.",
    "approved": true,
    "tags": [
      "Puzzles",
      "Strings",
      "Data Types",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Fundamentals",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5892c13cd9f2a384d6000100",
    "name": "Format With",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "589d2bf7dfdef0817e0001aa",
    "name": "Simple Fun #115: Factor Sum",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "589dcba5e708ec509f000164",
    "name": "Thinking & Testing: Sing a Song",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58b42c98f4cdd62f45000c6e",
    "name": "Running functions",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "59354ece32fb82522f000002",
    "name": "Multi Line Task: GCD Function",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59727e04f6a02d0cde00001a",
    "name": "\"Consonant Please\"",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59828f1954419acdff00002e",
    "name": "Find the Golden Ticket!",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59b8614a5227dd64dc000008",
    "name": "Min Factor Distance",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "59f81fe146d84322ed00001e",
    "name": "Fix the pipes - #2 - is it leaking?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "59f8dd1132b8b9af150001ea",
    "name": "Basic Bitmapping",
    "approved": true,
    "tags": [
      "Algorithms",
      "Bits",
      "Binary",
      "Bitmaps",
      "Maps",
      "Data Structures",
      "Dynamic Arrays",
      "Arrays",
      "Functional Programming",
      "Data Types",
      "Declarative Programming",
      "Programming Paradigms",
      "Vectors",
      "Integers",
      "Numbers",
      "Sets",
      "Lists",
      "Logic",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "5a1502db46d84395ab00008a",
    "name": "Stone bridge primes",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5a1a8b7ec374cbea92000086",
    "name": "Is Divisible By 6 Mk II",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Permutations",
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types",
      "Arithmetic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "5a5bef7a5c770d08cd0032fa",
    "name": "Stolen police records",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5aa417aa4a6b344e2200009d",
    "name": "N Linear",
    "approved": true,
    "tags": [
      "Refactoring",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Mathematics"
    ]
  },
  {
    "id": "5b6d065a1db5ce9b4c00003c",
    "name": "Dropzone",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5b84d6d6b2f82f34d00000d7",
    "name": "Ludicrous Coloured Triangles",
    "approved": true,
    "tags": [
      "Algorithms",
      "Puzzles",
      "Games",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5cd99b8af446b0000ed8e615",
    "name": "Lens Apprentice",
    "approved": true,
    "tags": [
      "Fundamentals",
      "lens",
      "Haskell Packages",
      "Higher-order Functions",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Immutability",
      "Mutability",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5d96030e4a3366001d24b3b7",
    "name": "Average Fuel Consumption",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5e602796017122002e5bc2ed",
    "name": "Partial Keys",
    "approved": true,
    "tags": [
      "Puzzles",
      "Objects",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings"
    ]
  },
  {
    "id": "600c18ec9f033b0008d55eec",
    "name": "Find the nth Reverse Number (Extreme)",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "521d8d1a123ebb5a8900008a",
    "name": "Remove Odd Hashes",
    "approved": true,
    "tags": [
      "Algorithms",
      "Hashes",
      "Data Structures",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "52fee0a131b8158492000120",
    "name": "Argument Mapper",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Reflection",
      "Metaprogramming",
      "Programming Paradigms",
      "Advanced Language Features"
    ]
  },
  {
    "id": "53629117f81a7f9b9e000d1e",
    "name": "Make a Palindrome",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "53a257d83cacabb1fd0007d3",
    "name": "Dangerous Dates",
    "approved": true,
    "tags": [
      "Bugs",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "53a9ee602f150d5d6b000307",
    "name": "Max Collatz Sequence Length ",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "53e20276af0d91c206000972",
    "name": "Steven's Password Decryption",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "54ba504e2804ced78a000170",
    "name": "Know your ABCs",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "550756a881b8bdba99000348",
    "name": "Recurrence relations",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Performance"
    ]
  },
  {
    "id": "55709dc15ebd283cc9000007",
    "name": "Jurassic Word",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "55ba24f1cb367c48ac0000a2",
    "name": "Curry me softly",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Higher-order Functions",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "55ec80d40d5de30631000025",
    "name": "Decompose a number",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "55f416b2019f552cb0000086",
    "name": "Color of the moment",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Numbers",
      "Integers"
    ]
  },
  {
    "id": "561abc8d324728b06e000102",
    "name": "Get the lost toString back",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Prototypes"
    ]
  },
  {
    "id": "567c63c365ee000c5f000007",
    "name": "RuplesJS #2: String Delete",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "56a313a0538696bcab000004",
    "name": "A Crazy Robot? Who's is behind the scenes to make that?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Algorithms",
      "Logic",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Declarative Programming",
      "Programming Paradigms",
      "Geometry",
      "Algebra"
    ]
  },
  {
    "id": "56d9c274c550b4a5c2000d92",
    "name": "Thinking & Testing : Math of Middle school",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "56de82fb9905a1c3e6000b52",
    "name": "Thinking & Testing : Mobile phone simulator",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "570ca6a520c69f39dd0016d4",
    "name": "Coding 3min : Reading a Book",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5749b2fc8bf8b6fbd3001ff3",
    "name": "Guess the secret integer (binary search)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "58263b5fe7fb3848f500006f",
    "name": "Snakes on a Plane - #1 Easy",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "582d4d98e302387481000ef1",
    "name": "[BF] Reverse input",
    "approved": true,
    "tags": [
      "Algorithms",
      "Esoteric Languages",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "58602cd3ef06546bb7000152",
    "name": "Tuple sum",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Metaprogramming",
      "Programming Paradigms",
      "Advanced Language Features",
      "Structs",
      "Data Structures"
    ]
  },
  {
    "id": "5884f4727987a2a561000147",
    "name": "Playing with Sets : Symmetric difference",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Sets",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "58c3fbe3ea65729f3800007d",
    "name": "Validate credit card expiry date",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "58f85bb1985886b1b5000b6f",
    "name": "One Line Task: Count Down I",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5922530af9c157651d0000aa",
    "name": "Peano and Church",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "594946120f7b28c70300008d",
    "name": "Its all backwards",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "59a20f283203e8bd8c000006",
    "name": "No adjacent integers sequence generator",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "59b68884afcda27c99000025",
    "name": "JS Golfing #3: Math.round",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "59b938e9cb7fb468200000af",
    "name": "JS Golfing #7: Join",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5a5072a6145c46568800004d",
    "name": "15x15 Nonogram Solver",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Performance"
    ]
  },
  {
    "id": "5b0737c724c0686bf8000172",
    "name": "Process Waterfowl Survey Data Results",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "5b33452ab6989d2407000100",
    "name": "Allergy to Palindromes.",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Performance",
      "Permutations"
    ]
  },
  {
    "id": "5ecc1d68c6029000017d8aaf",
    "name": "Hexagon Beam Max Sum",
    "approved": true,
    "tags": [
      "Algorithms",
      "Puzzles",
      "Games",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "52788a9ae42add6b13000653",
    "name": "Method Lockdown",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Methods",
      "Functions",
      "Object-oriented Programming",
      "Control Flow",
      "Basic Language Features",
      "Programming Paradigms",
      "Classes",
      "Modules",
      "Metaprogramming",
      "Advanced Language Features"
    ]
  },
  {
    "id": "5293ef9b6144df008d000147",
    "name": "better Add Floats",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Floats/Doubles",
      "Data Types"
    ]
  },
  {
    "id": "52dd673c80db65531e000488",
    "name": "The Most Sacred of Days",
    "approved": true,
    "tags": [
      "Algorithms",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "52f51502053125863c0009d7",
    "name": "Optimal Taxi Fare",
    "approved": true,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Optimization",
      "Algebra"
    ]
  },
  {
    "id": "53227465e4d01b5d5200011e",
    "name": "Given an array of numbers, which are perfect squares?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Iterators",
      "Control Flow",
      "Object-oriented Programming",
      "Basic Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5388ff350b24c5e33000114c",
    "name": "Baseball",
    "approved": true,
    "tags": [
      "Puzzles",
      "Objects",
      "Data Types",
      "Games",
      "Rules",
      "Data Structures",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Fundamentals",
      "Programming Paradigms"
    ]
  },
  {
    "id": "54341ff882b0fdec9c000011",
    "name": "Max Accessor Function",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "555b605a76962690ea0000c8",
    "name": "Zeckendorf representation",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55db7b239a11ac71d600009d",
    "name": "Integer triangles",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Structures",
      "Data Types"
    ]
  },
  {
    "id": "55f8370b0229d3dad000007a",
    "name": "Count addresses grouped by state",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Objects"
    ]
  },
  {
    "id": "5600e00e42bcb7b9dc00014e",
    "name": "Calculate the Harmonic Conjugated Point of a Triplet  of Aligned Points",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Geometry",
      "Algebra",
      "Data Types"
    ]
  },
  {
    "id": "563c39f92f7bed9572000011",
    "name": "The Tale of Two Zeros",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Basic Language Features"
    ]
  },
  {
    "id": "5660c1e9fae768c3b50000a6",
    "name": "Ermahgerd",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "56b4bae128644b5613000037",
    "name": "Sum the Repeats",
    "approved": true,
    "tags": [
      "Algorithms",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "56e1161fef93568228000aad",
    "name": "Thinking & Testing : Operator hidden in a string",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5704bf9b38428f1446000a9d",
    "name": "Histogram data",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic",
      "Arrays",
      "Data Types",
      "Basic Language Features"
    ]
  },
  {
    "id": "570ef7a834e61306da00035b",
    "name": "Coding 3min : Guess the Hat",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "570f45fab29c705d330004e3",
    "name": "Shortest Code : Planting Trees",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "573b216f5328ffcd710013b3",
    "name": "Jacob's Weight Loss Program",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "577d0a117a3dbd36170001c2",
    "name": "VaccineNation",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Objects",
      "Data Types",
      "Arrays",
      "Sorting",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "578597a122542a7d24000018",
    "name": "Happy numbers to the n power",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5815f7e789063238b30001aa",
    "name": "Wealth equality, finally!",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5844ba39a87f763849000c98",
    "name": "Maximum value in nested arrays",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "586427d883f7e6b5670001dc",
    "name": "All Star Code Challenge #7",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "587a58d008236e4951000197",
    "name": "Recursion puzzle",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Recursion",
      "Algorithms",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "588622835d173135b7000103",
    "name": "Magic Three",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic"
    ]
  },
  {
    "id": "5898a7208b431434e500013b",
    "name": "Manage the Robot Factory: Day 1",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "58a65945fd7051d5e1000041",
    "name": "Simple Fun #133: Six Column Encryption",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "59167d51c63c18af32000055",
    "name": "#1 Strings: Find The Longest Substring and Required Data.",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Algorithms",
      "Logic",
      "Optimization"
    ]
  },
  {
    "id": "5918fe1f9579c32087000187",
    "name": "One Line Task?: Sentence Compression",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "59c32c609f0cbce0ea000073",
    "name": "Pythagorean Triplets",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "5a27ca7ab6cfd70f9300007a",
    "name": "Full Metal Chemist #1: build me...",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Classes",
      "Basic Language Features",
      "Exception Handling",
      "Control Flow"
    ]
  },
  {
    "id": "5aa67541373c2e69a20000c9",
    "name": "Tic-Tac-Toe (3D)",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5abbb33396194245d5000161",
    "name": "[Code Golf] String to ASCII Character",
    "approved": true,
    "tags": [
      "Algorithms",
      "ASCII",
      "Character Encodings",
      "Formats",
      "Strings",
      "Data Types",
      "Logic"
    ]
  },
  {
    "id": "5b02ae6aa2afd8f1b4001ba4",
    "name": "Laxative Shot Roulette ",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5c744111cb0cdd3206f96665",
    "name": "Converting Currency II",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Algebra",
      "Strings"
    ]
  },
  {
    "id": "5efcaedf95d7110017896ced",
    "name": "IEEE 754 floating point numbers",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Floats/Doubles",
      "Basic Language Features",
      "Binary"
    ]
  },
  {
    "id": "52711e5cc961c233d0000048",
    "name": "Email Validation",
    "approved": true,
    "tags": [
      "Algorithms",
      "Validation",
      "Logic",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings",
      "Data Types",
      "Utilities"
    ]
  },
  {
    "id": "529b54d9aba78c924d00088e",
    "name": "String insert values",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Formats",
      "Formatting",
      "Logic"
    ]
  },
  {
    "id": "530d0298e09e54a3620006c2",
    "name": "Palindromes Below",
    "approved": true,
    "tags": [
      "Algorithms",
      "Data Types",
      "Logic",
      "Arithmetic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "5314ce58288b818ddc00006a",
    "name": "Decorator Pattern",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Design Patterns",
      "Design Principles",
      "Decorator",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "53cce49fdf221844de0004bd",
    "name": "What adds up",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Logic"
    ]
  },
  {
    "id": "542c1a6b25808b0e2600017c",
    "name": "Wind component calculation",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Geometry",
      "Algebra"
    ]
  },
  {
    "id": "559379505c859be5a9000034",
    "name": "Complete The Pattern #14",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "565225029bcf176687000022",
    "name": "Numbers so vain, they probably think this Kata is about them.",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5696c8b5fddc42058b000032",
    "name": "Configure an express server",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Frameworks"
    ]
  },
  {
    "id": "56a298b27e9e994977000023",
    "name": "multiFilter",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "56c4931400165c5283000661",
    "name": "NASA Countdown",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "56c89644b2f1981874000046",
    "name": "Create a House Cleaning Rota",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "571a551a196bb0567f000603",
    "name": "Binary Search Trees",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Algorithms",
      "Logic",
      "Data Structures"
    ]
  },
  {
    "id": "5741df13077bdf57af00109c",
    "name": "Biggest Sum",
    "approved": true,
    "tags": [
      "Algorithms",
      "Dynamic Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5787628de55533d8ce000b84",
    "name": "Correct the date-string",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Parsing",
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types",
      "Basic Language Features"
    ]
  },
  {
    "id": "579637b41ace7f92ae000282",
    "name": "Find the Nth Catalan number",
    "approved": true,
    "tags": [
      "Algorithms",
      "Big Integers",
      "Integers",
      "Data Types",
      "Numbers",
      "Logic",
      "Mathematics"
    ]
  },
  {
    "id": "57e524847fbcc9300300004c",
    "name": "Challenge: True without return",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Basic Language Features",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "580ed88494291dd28c000019",
    "name": "Sorting Poker",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5810d8ce2956d78698000032",
    "name": "Find the K-th last element of a singly linked list",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Linked Lists",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "5826773bfad36332bf0002f9",
    "name": "Character Counter and Bars Graph",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "583fe48ca20cfc3a230009a1",
    "name": "Sorting Integers into a nested list",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5850e85c6e997bddd300005d",
    "name": "Square Roots: Simplify/Desimplify",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "586c3070b98de0a57000012e",
    "name": "Split camelcase",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5885b5d2b632089dc30000cc",
    "name": "#~For Kids~#  d/m/Y  -> Day of the week.",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "5886dea04703f1712d000051",
    "name": "Simple Fun #26: Weak Numbers",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58898b50b832f8046a0000ec",
    "name": "Simple Fun #53: Combs",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58a0f18091e53d2ad1000039",
    "name": "Sort the comments!",
    "approved": true,
    "tags": [
      "Algorithms",
      "Sorting",
      "Logic",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "58afa8185eb02ea2a7000094",
    "name": "Simple Fun #162: Pair Wise",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "58b16300a470d47498000811",
    "name": "Can you really count divisors?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Logic",
      "Mathematics",
      "Optimization"
    ]
  },
  {
    "id": "58b8d22560873d9068000085",
    "name": "Simple Fun #178: Faulty Odometer",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "58fea5baf3dff03a6e000102",
    "name": "Simple Fun #206: Factorial Digits",
    "approved": true,
    "tags": [
      "Algorithms",
      "Puzzles",
      "Games",
      "Logic"
    ]
  },
  {
    "id": "591d3375e51f4a0940000052",
    "name": "Simple Fun #290: Sum Of Threes",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59290e641a640c53d000002c",
    "name": "#1 Sequences: Pure Even Digit Perfect Squares (P.E.D.P.S)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Control Flow",
      "Basic Language Features",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "59476f9d7325addc860000b9",
    "name": "Answer the students' questions!",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5966ec8e62d030d8530000a7",
    "name": "Super Coordinate Sums!",
    "approved": true,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "59fc9e7ec374cbbb8a0000a7",
    "name": "Largest Cross Sum",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a74a94f5084d72c710000de",
    "name": "Compile time #1 Factorial",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Metaprogramming",
      "Programming Paradigms",
      "Advanced Language Features"
    ]
  },
  {
    "id": "5cab471da732b30018968071",
    "name": "Playing With Toy Blocks ~ Can you build a 4x4 square?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types",
      "Games",
      "Puzzles",
      "Geometry",
      "Algebra",
      "Mathematics"
    ]
  },
  {
    "id": "5fddfbe6a65636001cc4fcd2",
    "name": "Is it a Set?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Games",
      "Logic"
    ]
  },
  {
    "id": "604693a112b42a0016828d03",
    "name": "Impress your friends with Brown's Criterion!",
    "approved": true,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "6159dda246a119001a7de465",
    "name": "Kingdoms Ep2:  The curse (simplified)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Basic Language Features",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "529fdef7488f509b81000061",
    "name": "Elementary Arithmetic - Carries Count",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arithmetic",
      "Mathematics",
      "Logic",
      "Numbers",
      "String Formatting",
      "Formatting",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5424e3bc430ca2e577000048",
    "name": "Finally tagless interpreter",
    "approved": true,
    "tags": [
      "Algorithms",
      "Interpreters",
      "Logic"
    ]
  },
  {
    "id": "5436bb1df0c10d280900131f",
    "name": "String array joining in Haskell",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "544483c6435206617a00012c",
    "name": "Trailing zeros in factorials, in any given integer base",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "55a98fbbe9760cf5af00003f",
    "name": "Pluck data from Wikipedia lists",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "55cf9b9e66e66c42fa000013",
    "name": "Tree Depth",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Trees",
      "Data Structures",
      "Hashes",
      "Recursion",
      "Algorithms",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "55d5da66a0e378b8bc0000c6",
    "name": "Search JSON for any key value pair",
    "approved": true,
    "tags": [
      "Fundamentals",
      "JSON",
      "Formats",
      "Arrays",
      "Data Types",
      "Basic Language Features"
    ]
  },
  {
    "id": "55eaf138c1f4e9eef1000047",
    "name": "Count the connected components",
    "approved": true,
    "tags": [
      "Algorithms",
      "Graphs",
      "Data Structures",
      "Logic"
    ]
  },
  {
    "id": "560ae2027dc9033b5e0000c2",
    "name": "One Variable Second Degree Equation Solver ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5653d33e78e3d9dfe600004e",
    "name": "telephone words",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "56b409febccd5aafbd000021",
    "name": "Character counts",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "56d98b555492513acf00077d",
    "name": "Thinking & Testing : Spatiotemporal index",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "56dc83840a10fee472000ca1",
    "name": "Check if a number is a part of an arbitrary fibonacci sequence",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Sequences",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "56eee006ff32e1b5b0000c32",
    "name": "Thinking & Testing : Retention and discard II",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "56fe9b65cc08cafbc5000de3",
    "name": "Coding 3min: Give me the equation",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5749b82229d16cbc320015fe",
    "name": "Chessboard",
    "approved": true,
    "tags": [
      "Puzzles",
      "Fundamentals",
      "Games",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5792e2e93467db66a000009f",
    "name": "Adapter Pattern - Geese to Ducks",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Design Patterns",
      "Design Principles"
    ]
  },
  {
    "id": "57d52a7f76da830e43000188",
    "name": "Sine,cosine and others",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5813189b50326e3657000213",
    "name": "Extending JavaScript Objects: Contains Method",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Objects",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "5836f1bb44ff28b068000ba4",
    "name": "Brick pyramid.",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5864f90473bd9c4b47000057",
    "name": "Connect Four - placing tokens",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "587ae98e2ab0ef32ef00004c",
    "name": "We are the Robots d[(0)(0)]b",
    "approved": true,
    "tags": [
      "Puzzles",
      "Algorithms",
      "Logic",
      "Data Structures",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings"
    ]
  },
  {
    "id": "5884e9ccf72916207900010f",
    "name": "Playing with Sets : Complement",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Sets",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "589a8d9b729e7abd9a0000ed",
    "name": "Simple Fun #105: Rectangles",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "589d74722cae97a7260000d9",
    "name": "Simple Fun #121: Mr.Odd",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58ad230ce0201e17080001c5",
    "name": "Simple Fun #156: Rotate Paper By 180 Degrees",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "59b5896322f6bbe260002aa0",
    "name": "Python Reflection: Disassembling the secret",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Basic Language Features",
      "Reflection",
      "Metaprogramming",
      "Programming Paradigms",
      "Advanced Language Features"
    ]
  },
  {
    "id": "59cf03496bddd2aa17000015",
    "name": "Bugfix: Sum of ASCII values in a string",
    "approved": true,
    "tags": [
      "Bugs",
      "Advanced Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "59d582eec12fa001b60000d0",
    "name": "Expand a string ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "59f0ee47a5e12962cb0000bf",
    "name": "Fixed length palindromes",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5a0da79b32b8b98b8d000097",
    "name": "Crouching Distribution, Hidden Constant",
    "approved": true,
    "tags": [
      "Puzzles",
      "Statistics",
      "Algorithms",
      "Data",
      "Logic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "5a1d91698ba9145199000141",
    "name": "Binary Zoo",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a631508e626c5f127000055",
    "name": "N seconds ago",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a74d00c0025e979c9000145",
    "name": "Parabolas: Standard to Vertex Form",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5ae64f86783bb4722c0000d7",
    "name": "Nearly Flatten a Messy Array",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5af2b240d2ee2764420000a2",
    "name": "Infinitely Nested Radicals",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Games"
    ]
  },
  {
    "id": "5b7dfd8cbfae24e5f200004d",
    "name": "Read a UPC/Barcode",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5bc555bb62a4cec849000047",
    "name": "Simple Fun #395: Fibonacci digit sequence",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Fundamentals"
    ]
  },
  {
    "id": "5be0f1786279697939000157",
    "name": "Simple Fun #399: Make Ascending Sequences",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Logic"
    ]
  },
  {
    "id": "5da995d583326300293ce4cb",
    "name": "2D Vector Mapping",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Dynamic Arrays",
      "Arrays",
      "Functional Programming",
      "Data Types",
      "Declarative Programming",
      "Programming Paradigms",
      "Vectors",
      "Mapping"
    ]
  },
  {
    "id": "5ef2bc554a7606002a366006",
    "name": "Solving a puzzle by matching four corners",
    "approved": true,
    "tags": [
      "Puzzles",
      "Numbers",
      "Data Types",
      "Games",
      "Performance"
    ]
  },
  {
    "id": "5f8070c834659f00325b5313",
    "name": "Boolean Trilogy #2: Calculate Boolean Expression (Easy)",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "610159919347db0019cabddc",
    "name": "Sequence Determiner",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "52af9d951f5a1298b2000170",
    "name": "Christmas Day",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Hacking Holidays",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "5440f068cf362592e4000cd6",
    "name": "Infinite Sequences",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Sequences",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "54ac045d35adf4e6e2000e43",
    "name": "Java Functional Programming (Part 4: Row Row Row Your Boat, Gently Down the...)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Lambdas",
      "Functional Programming",
      "Functions",
      "Declarative Programming",
      "Programming Paradigms",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Streams",
      "IO"
    ]
  },
  {
    "id": "54baad292c471514820000a3",
    "name": "Generic number class",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Metaprogramming",
      "Programming Paradigms",
      "Advanced Language Features",
      "Fundamentals",
      "Data Types"
    ]
  },
  {
    "id": "54cf4fc26b85dc27bf000a6b",
    "name": "Precise fractions pt. 1 - basics",
    "approved": true,
    "tags": [
      "Puzzles",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "55191f78cd82ff246f000784",
    "name": "Wheel of Fortune",
    "approved": true,
    "tags": [
      "Algorithms",
      "Games",
      "Arrays",
      "Data Types",
      "Objects",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "559aa1295f5c38fd7b0000ac",
    "name": "Routes in a square grid",
    "approved": true,
    "tags": [
      "Puzzles",
      "Fundamentals"
    ]
  },
  {
    "id": "55db23c6ab208d61e10000af",
    "name": "Subtract big numbers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Arithmetic"
    ]
  },
  {
    "id": "5626ec066d35051d4500009e",
    "name": "The Sum Of The Prime Factors Of a Number... What For?",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "567c48062bb1ede32200002a",
    "name": "RuplesJS #1: N Times Do",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56de38c1c54a9248dd0006e4",
    "name": "Thinking & Testing : Falsetto Rap Concert",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "56f928b19982cc7a14000c9d",
    "name": "Shortest code: Father and Son",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57c4ed873189a5bea00007e6",
    "name": "Paul Cipher & Kevin Arnold",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57f12b4d5f2f22651c00256d",
    "name": "Array Info",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Basic Language Features"
    ]
  },
  {
    "id": "584703d76f6cf6ffc6000275",
    "name": "Estimating Amounts of Subsets",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Algorithms",
      "Logic",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Optimization",
      "Declarative Programming",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "588bb1195eb601f5d400001f",
    "name": "Numbers in different systems ",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "589aca25fef1a81a10000057",
    "name": "Simple Fun #110: Array Operations",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58b8dccecf49e57a5a00000e",
    "name": "Simple Fun #180: Repeat Adjacent",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "58feb9c16dcb746414000099",
    "name": "Simple Fun #209: Largest Room Area",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "59127598c0f53a738f0000e0",
    "name": "Simple Fun #264: Compare Two Integers",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "594fae1a0462da7beb000046",
    "name": "Jump!",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Puzzles",
      "Games",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "59c9e82ea25c8c05860001aa",
    "name": "Simple Fun #354: Lonely Frog III",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59f69fefa0143109e5000019",
    "name": "Did we win the Super Bowl?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Games",
      "Arrays",
      "Data Types",
      "Strings",
      "Numbers",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5a02037ac374cbab41000089",
    "name": "Help the farmer to count rabbits, chickens and cows",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "5a02dccf32b8b988120000da",
    "name": "Sure, but can you SKI? (I)",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a2f83daee1aae4f1c00007e",
    "name": "Multiple remainder of the division",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Basic Language Features"
    ]
  },
  {
    "id": "5a69d609e626c5708d0000c0",
    "name": "Romanize Russian Passports",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5aa20a964a6b34417c00008d",
    "name": "Disorganised page lists",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Lists",
      "Data Structures",
      "Logic"
    ]
  },
  {
    "id": "5b5fe164b88263ad3d00250b",
    "name": "Alphametics Solver",
    "approved": true,
    "tags": [
      "Algorithms",
      "Puzzles",
      "Games",
      "Performance",
      "Optimization",
      "Cryptography",
      "Security"
    ]
  },
  {
    "id": "5c6dc504abcd1628cd174bea",
    "name": "Echo",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5fbfc2c0dce9ec000de691e3",
    "name": "Set the Clock",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "60a2d7f50eee95000d34f414",
    "name": "Last Survivors Ep.3",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Basic Language Features"
    ]
  },
  {
    "id": "51e8241aed85d42c810002aa",
    "name": "Arbitrary word wrapping",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Utilities"
    ]
  },
  {
    "id": "52191f3c35f5ecba960003f3",
    "name": "Get config values of hash",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Hashes",
      "Data Structures"
    ]
  },
  {
    "id": "526de57c8f428fc1fd000b8c",
    "name": "Metaprogramming:  Lisp-style Generic Functions",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "52793ed3fdb8e19406000c72",
    "name": "Monads:  The Maybe Monad",
    "approved": true,
    "tags": [
      "Algorithms",
      "Monads",
      "Data Structures",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "540ddb07716ab397e1000797",
    "name": "Float to Binary Conversion",
    "approved": true,
    "tags": [
      "Algorithms",
      "Bits",
      "Binary",
      "Numbers",
      "Data Types",
      "Formats"
    ]
  },
  {
    "id": "5504b15fd181b977c30001d5",
    "name": "Hoisting",
    "approved": true,
    "tags": [
      "Bugs"
    ]
  },
  {
    "id": "564b323d7ff0ed401400015f",
    "name": "Compute Unix path",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "56ee74e7fd6a2c3c7800037e",
    "name": "Unpack",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Lists",
      "Data Structures",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "56f29b3b75e340627a0009d5",
    "name": "Recurrence by Recursion",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Recursion",
      "Algorithms",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "56f411dc9821795fd90011d9",
    "name": "Expected Type Decorator",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Design Patterns",
      "Design Principles",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "570bae4b0237999e940016e9",
    "name": "Coding 3min : Regular expression compression",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "572f32ed3bd44719f8000a54",
    "name": "Sequence of Power Digits Sum",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science",
      "Optimization",
      "Data Structures",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "578de3801499359921000130",
    "name": "The animals went in two by two",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "580a429e1cb4028481000019",
    "name": "Author Disambiguation: to the point",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "580f1a22df91279f09000273",
    "name": "Random Integers",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5816ead8dae5a59eaa000053",
    "name": "Split and Join",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5876031f889768640900004c",
    "name": "Vodka festival.",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "589ac16a0cccbff11d000115",
    "name": "Simple Fun #109: Segment Cover",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58aa5d32c9eb04d90b000107",
    "name": "Simple Fun #142: Mobius function",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58b96d99404be9187c000003",
    "name": "Alex & snooker: points earned.",
    "approved": true,
    "tags": [
      "Puzzles",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "59bf6b73bf10a4c8e5000047",
    "name": "Condi cipher",
    "approved": true,
    "tags": [
      "Algorithms",
      "Ciphers",
      "Cryptography",
      "Logic",
      "Security",
      "Strings",
      "Data Types",
      "Encryption"
    ]
  },
  {
    "id": "5a34e2eab6cfd7fcbc000008",
    "name": "Multidimensional array",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Basic Language Features"
    ]
  },
  {
    "id": "5afd81d0de4c7f45f4000239",
    "name": "Minimum and Maximum Product of k Elements",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "5b2a10fe9e40b9b43d00008c",
    "name": "Months, Weeks, Days, Hours and Minutes",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5b86a6d7a4dcc13cd900000b",
    "name": "Transforming Maze Solver",
    "approved": true,
    "tags": [
      "Puzzles",
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types",
      "Performance"
    ]
  },
  {
    "id": "5c06a930717256064b0001ab",
    "name": "Rap-Name Generator",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Objects",
      "Strings"
    ]
  },
  {
    "id": "5e60cc55d8e2eb000fe57a1c",
    "name": "n-Bonacci Ratio",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "60b7d7c82358010006c0cda5",
    "name": "Corner Fill",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5251f63bdc71af49250002d8",
    "name": "Exponent method",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "547f601b4a437a2048000981",
    "name": "Déjà vu Duplicates",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "54b478163b3d7632d10001c6",
    "name": "A man, a plan, a canal, Panama!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5522d19f20cc1c8330001218",
    "name": "Finding Neo (PG-13)",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5576f6719988e71ea30000ae",
    "name": "Flood Fill",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types",
      "Theoretical Computer Science",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "557b75579b03996942000061",
    "name": "Feed Kahumolings!",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "55f74a7433feba03680000c5",
    "name": "Create the base - Dungeon crawler #1",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Games",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms",
      "ES2015",
      "Babel"
    ]
  },
  {
    "id": "56cca888a9d0f25985000036",
    "name": "Kids and candies",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "577c136fdf78c163990007cd",
    "name": "Mexican capital 's phone number validator",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "57c3eb9fd6cf0ffd68000222",
    "name": "Simple Physics Problem",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57f2b753e3b78621da0020e8",
    "name": "Simplifying",
    "approved": true,
    "tags": [
      "Puzzles",
      "Map/Reduce",
      "Algorithms",
      "Logic",
      "Games"
    ]
  },
  {
    "id": "5827d31b86f3b0d9390001d4",
    "name": "Elections: Weighted Average",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "582b59f45ad9526ae6000249",
    "name": "Phone numbers",
    "approved": true,
    "tags": [
      "Puzzles",
      "Graphs",
      "Data Structures",
      "NodeJS"
    ]
  },
  {
    "id": "589d1e88e8afb7a85e00004e",
    "name": "Simple Fun #113: Number Increasing",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58bf67eb68d8469e3c000041",
    "name": "Simple Fun #186: Duplicate Phone Numbers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "58d298e5cbc278e6d8000005",
    "name": "How much will the apples cost?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Basic Language Features"
    ]
  },
  {
    "id": "5922828c80a27c049c000078",
    "name": "Simple Fun #299: Look And Say And Sum",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "59549d482a68fe3bc2000146",
    "name": "Simple Fun #335: Two Programmers And Gold",
    "approved": true,
    "tags": [
      "Algorithms",
      "Performance"
    ]
  },
  {
    "id": "5977ef1f945d45158d00011f",
    "name": "Separating Strings",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59b06d83cf33953dbb000010",
    "name": "N-centered Array",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59e0dbb72a7acc3610000017",
    "name": "Coprimes up to N",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "59f6a855bee845d3cd000046",
    "name": "Cafeteria",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Builder",
      "Design Patterns",
      "Design Principles"
    ]
  },
  {
    "id": "5a115ff080171f9651000046",
    "name": "Conversion between Kilobyte and  KibiByte",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5a2166f355519e161a000019",
    "name": "Ragbaby cipher",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Ciphers",
      "Algorithms",
      "Cryptography",
      "Logic",
      "Security",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5a516c2efd56cbd7a8000058",
    "name": "Total Primes",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5b0560ef4e44b721850000e8",
    "name": "Escape with your booty!",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Graphs",
      "Data Structures",
      "Simulation"
    ]
  },
  {
    "id": "5b9cf881d6b09fc9ee0002b1",
    "name": "The Hotel with Infinite Rooms",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Performance"
    ]
  },
  {
    "id": "5c1448e08a2d87eda400005f",
    "name": "The Deaf Rats of Hamelin (2D)",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5fad2310ff1ef6003291a951",
    "name": "Weigh The List #1",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "52fa7b5704bc8f7c85000d32",
    "name": "String indexOf (and lastIndexOf) with regex",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5309441451e700dea00000f4",
    "name": "Ruby’s Eleven",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Security",
      "Bugs",
      "Collections",
      "Lists",
      "Data Structures",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5388a9d60b24c52f4c000b5f",
    "name": "Power .bind()",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Utilities",
      "Prototypes"
    ]
  },
  {
    "id": "53a71e153d87ddcb34000d20",
    "name": "Simple min heap implementation",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Heaps",
      "Trees",
      "Data Structures"
    ]
  },
  {
    "id": "542ea700734f7daff80007fc",
    "name": "Processes",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "54492291ec342c4a440008c5",
    "name": "Combinations",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Monads",
      "Data Structures",
      "Functional Programming",
      "Lists"
    ]
  },
  {
    "id": "5474be18b2bc28ff92000fbd",
    "name": "Area of a Shape",
    "approved": true,
    "tags": [
      "Algorithms",
      "Statistics",
      "Data",
      "Logic"
    ]
  },
  {
    "id": "5575aa1f24556d7a00000082",
    "name": "Garble Sort",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Fundamentals",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "55a5d97d81a010881800004a",
    "name": "Enigeliisohe too Eniigeeliiisoohee Toroanisoliatooro",
    "approved": true,
    "tags": [
      "Algorithms",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "55e29a6b4d99b59e98000089",
    "name": "ASCII Cipher",
    "approved": true,
    "tags": [
      "Puzzles",
      "ASCII",
      "Character Encodings",
      "Formats",
      "Encryption",
      "Algorithms",
      "Cryptography",
      "Logic",
      "Security",
      "Ciphers"
    ]
  },
  {
    "id": "563c8540d50eb20bab00009a",
    "name": "Make techno.",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "563c9f8073ccb1464d0000ae",
    "name": "Special Scores For Words",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Algorithms",
      "Logic",
      "Memoization",
      "Design Patterns",
      "Design Principles",
      "Control Flow",
      "Basic Language Features",
      "Hashes"
    ]
  },
  {
    "id": "567c26df18e9b1083a000049",
    "name": "Last man standing",
    "approved": true,
    "tags": [
      "Algorithms",
      "Lists",
      "Data Structures",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Logic"
    ]
  },
  {
    "id": "5680e56f4797a55076000044",
    "name": "Dumbphone Keypads",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5784c8116211383b5f0001d3",
    "name": "Fun with ES6 Classes #6 - Fake Files (Basic)",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57a110eee298a737e2000283",
    "name": "String Repetition without Function",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "57cded7cf5f4ef768800003c",
    "name": "Fix the base conversion function!",
    "approved": true,
    "tags": [
      "Bugs",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "57d41c425dc38eefbc0001cf",
    "name": "PHP Functions - Anonymous Functions (aka Closures)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Closures",
      "Basic Language Features"
    ]
  },
  {
    "id": "5822d900b81f701dd40002c9",
    "name": "Find unique number",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "588dd9c3dc49de0bd400016d",
    "name": "2D / 1D array coordinates mapping",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Mapping"
    ]
  },
  {
    "id": "58cd1da0bd0fd3dede00007a",
    "name": "Automaton (Part 2)",
    "approved": true,
    "tags": [
      "Bugs",
      "Logic"
    ]
  },
  {
    "id": "590b8d5cee471472f40000aa",
    "name": "#8 Matrices: Up and Down Sorting For Each Column",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Data Structures",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Graphs",
      "Sorting"
    ]
  },
  {
    "id": "599beb63b7a0473b1b000049",
    "name": "A string with bugs?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "59b8e6a2623654658800008d",
    "name": "JS Golfing #6: String Summation",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "59bf943cafcda28e31000130",
    "name": "Around Fibonacci: chunks and counts",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "59ffef8246d8434b0700001d",
    "name": "@memoize",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Closures",
      "Higher-order Functions"
    ]
  },
  {
    "id": "5b483e70a4bc16eda40000f9",
    "name": "Longest Strict Bouncy Subarray",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Performance",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Data Structures",
      "Arrays"
    ]
  },
  {
    "id": "5b64d2cd83d64828ce000039",
    "name": "Cigar Strings (Easy)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "5c1ac4f002c59c725900003f",
    "name": "Streaky Patterns in Coin Flips",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Logic",
      "Fundamentals"
    ]
  },
  {
    "id": "603301b3ef32ea001c3395d0",
    "name": "A Cinema",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5268988a1034287628000156",
    "name": "Binary Tree Serpentine Traversal",
    "approved": true,
    "tags": [
      "Algorithms",
      "Binary Search Trees",
      "Trees",
      "Binary",
      "Data Structures",
      "Traversal",
      "Logic",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "52abd4c941fcec78ce00002e",
    "name": "How the Grinch Almost Ended Christmas",
    "approved": true,
    "tags": [
      "Algorithms",
      "Hacking Holidays",
      "Sorting",
      "Logic"
    ]
  },
  {
    "id": "53dab6cece5f44b8ee00035d",
    "name": "String  like [Char]",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Prototypes"
    ]
  },
  {
    "id": "53f99455573c064ad200010b",
    "name": "Gigasecond",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "541837036d821665ee0006c2",
    "name": "Talisman Board Game Combat System Checker",
    "approved": true,
    "tags": [
      "Algorithms",
      "Games"
    ]
  },
  {
    "id": "5464d6811e0c08e574000b76",
    "name": "Stop the Zombie Apocalypse!",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "546e8dc735a6613de50007ea",
    "name": "Church numbers",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55e0467217adf9c3690000f9",
    "name": "My Very Own Python's Split Function",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Advanced Language Features"
    ]
  },
  {
    "id": "55f2f64faa2ffb24f6000005",
    "name": "Big number problem",
    "approved": true,
    "tags": [
      "Fundamentals",
      "String Formatting",
      "Formatting",
      "Algorithms",
      "Logic",
      "Strings"
    ]
  },
  {
    "id": "561fe8dbd50efaa2e9000075",
    "name": "Sparse array this is?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Sparse Arrays",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5620dc848370b4ad750000a1",
    "name": "Triangular range",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Data Structures"
    ]
  },
  {
    "id": "563c823393305ec84e000048",
    "name": "The Arpeggiator",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "565d6d1696e154b51b000076",
    "name": "JavaScript seems to be broken",
    "approved": true,
    "tags": [
      "Bugs",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5661cde807c4e28efa0000d0",
    "name": "Give me a Crazy Formula!",
    "approved": true,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Games",
      "Data Types"
    ]
  },
  {
    "id": "5681bc8d17af37f50e000015",
    "name": "Array of Primes",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56896f078dcf3e886c000067",
    "name": "Generate HTML links",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "56941f177c0a52aef50000a2",
    "name": "Brainscrambler - Esoteric programming #3",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Interpreters",
      "Algorithms",
      "Logic",
      "Esoteric Languages"
    ]
  },
  {
    "id": "56a14b6b56e5917073000022",
    "name": "My BEDMAS Approved Calculator",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "56bc0fc65bdaeb46d800084a",
    "name": "Math Object Madness",
    "approved": true,
    "tags": [
      "Algorithms",
      "Bugs",
      "Logic",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "56e3cbb5a28956899400073f",
    "name": "Maximum Subarray Sum II",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Algorithms",
      "Logic",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Optimization",
      "Declarative Programming",
      "Programming Paradigms",
      "Sorting"
    ]
  },
  {
    "id": "570df12ce6e9282a7d000947",
    "name": "Coding 3min : Eat watermelon",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57b9d705f302997e61000157",
    "name": "Touch Typing",
    "approved": true,
    "tags": [
      "Algorithms",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings",
      "Logic"
    ]
  },
  {
    "id": "57c13e724677bbc5fc000a0b",
    "name": "Shape Symmetry",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Geometry",
      "Algebra"
    ]
  },
  {
    "id": "57c2be599f48a8244000004f",
    "name": "Climbers Rankings",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Collections",
      "Lists",
      "Data Structures",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "57dd8c78eb0537722f0006bd",
    "name": "Exclusive presentations",
    "approved": true,
    "tags": [
      "Algorithms",
      "Sets",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "57f92db48b0760410a0001e7",
    "name": "JS is Weird: Return fuelstar",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "58161c5ac7e37d17fc00002f",
    "name": "Find a Bunch of Common Elements of Two Lists in a Certain Range",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Algorithms",
      "Logic",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Optimization",
      "Declarative Programming",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "5817e09e628854ed390004cb",
    "name": "Translate to 1337",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Hashes",
      "Data Structures",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "581ce19436049bc8610001f4",
    "name": "Converting from base 10 to 16! Dare you?",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "584bf3b969ebc573ed00000f",
    "name": "Maxed Out",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "589394ae1a880832e2000092",
    "name": "Create a simple Class at Runtime",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Reflection",
      "Metaprogramming",
      "Programming Paradigms",
      "Advanced Language Features"
    ]
  },
  {
    "id": "58d8f800a1111a80f400021a",
    "name": "Statistics 101: Coin Sampling",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Statistics",
      "Data"
    ]
  },
  {
    "id": "58f39391f4447fe43d00008f",
    "name": "Singleton Adam & Eve",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Design Patterns",
      "Design Principles",
      "Singleton"
    ]
  },
  {
    "id": "5953e4a29e93cef2e90000aa",
    "name": "Hide phone numbers",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5964e8fcfc9cf7749000005e",
    "name": "Back to the Future?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Control Flow",
      "Basic Language Features",
      "Puzzles",
      "Games",
      "Logic",
      "Objects",
      "Data Types"
    ]
  },
  {
    "id": "596570c424ae4501f700003d",
    "name": "Dog recommendation system",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Sets",
      "Sorting",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5a1c84c1c374cb6f7e000104",
    "name": "A twisted way to select an element from an array.",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Strings",
      "Methods",
      "Functions",
      "Object-oriented Programming",
      "Control Flow",
      "Basic Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5a6860bce6be38cdbf00005a",
    "name": "Shorten Me: Mad Mathematician's Algorithm III (Multiplication)",
    "approved": true,
    "tags": [
      "Puzzles",
      "Fundamentals",
      "Games"
    ]
  },
  {
    "id": "5a942c461a60f677730032df",
    "name": "Simple repeated words",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5afd3c451839f13b95000132",
    "name": "|||clickbait|||      Matrix Shift      |||clickbait|||",
    "approved": true,
    "tags": [
      "Algorithms",
      "Graphs",
      "Data Structures",
      "Games",
      "Performance",
      "Puzzles"
    ]
  },
  {
    "id": "5b7d2cca7a2013f79f000129",
    "name": "Lemmings Battle!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Games"
    ]
  },
  {
    "id": "5bebcbf2832c3acc870000f6",
    "name": "Card Games: Black Jack",
    "approved": true,
    "tags": [
      "Algorithms",
      "Conditional Statements",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Games"
    ]
  },
  {
    "id": "5d532b1893309000125cc43d",
    "name": "Hanging the curtains",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5e454bf176551c002ee36486",
    "name": "Apply offset to subtitles",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Dates/Time"
    ]
  },
  {
    "id": "6138ee916cb50f00227648d9",
    "name": "Kingdoms Ep1: Jousting",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Basic Language Features"
    ]
  },
  {
    "id": "6162bc81ec0bee001bde10b3",
    "name": "EZ code golf #1 : ∞",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "527c3755bb2890568500000d",
    "name": "Counterfeiting",
    "approved": true,
    "tags": [
      "Puzzles",
      "Metaprogramming",
      "Programming Paradigms",
      "Advanced Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "52817f04b70058a1b1000037",
    "name": "Process trees",
    "approved": true,
    "tags": [
      "Algorithms",
      "Trees",
      "Data Structures",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5416ce834c2460b4d300042d",
    "name": "Gray Code ",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "546ed19635a6610900000aa1",
    "name": "Church numbers: find the predecessor and subtract",
    "approved": true,
    "tags": [
      "Puzzles",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "54d130bb11b05bd224000212",
    "name": "Big Arithmetic - integer add/subtract",
    "approved": true,
    "tags": [
      "Algorithms",
      "Integers",
      "Data Types",
      "Numbers",
      "Big Integers",
      "Arithmetic",
      "Mathematics",
      "Logic"
    ]
  },
  {
    "id": "5516b80d891547c9b50007fd",
    "name": "Playing with laziness",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "553639695a87cf996200008c",
    "name": "Equal and opposite",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55703a2a52dd10501c000131",
    "name": "Find the hobbits!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Search",
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "56055244356dc5c45c00001e",
    "name": "Excel's COUNTIF, SUMIF and AVERAGEIF functions",
    "approved": true,
    "tags": [
      "Algorithms",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "565d76490397dcf0e700001e",
    "name": "Remove method in Arrays",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "567b22d9ba0e6b8c2400001e",
    "name": "Magic The Gathering #2: Mana",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "568c3498e48a0231d200001f",
    "name": "Dee, The Generous Tipper",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "56af6e4198909ab73200013f",
    "name": "Mersenne Primes",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "56c1c1ed0e10121d77000a56",
    "name": "Basics 10: Shifting Bits, left...?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Logic",
      "Fundamentals",
      "Arithmetic",
      "Integers",
      "Binary"
    ]
  },
  {
    "id": "56f19a230cd8bc5814001047",
    "name": "Every beginning has an end (Dates)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "57049a1946edc26dbc00074a",
    "name": "Shortest Code: Symmetric Sort",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57109bf197b4b3853a000274",
    "name": "Shortest Code : Remove screws I",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "578b44a47c77f5a1bd000011",
    "name": "Find the most frequently occurring elements in arrays",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Data Structures",
      "Arrays",
      "Data Types",
      "Numbers",
      "Optimization"
    ]
  },
  {
    "id": "57b31dc11fae8a4137000693",
    "name": "Collaboration Station",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57fcedb387b8012b23000023",
    "name": "not So Easy: Count characters",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5811cb19d8a4dadcb8000037",
    "name": "Abundant Array",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Logic",
      "Arithmetic"
    ]
  },
  {
    "id": "58275b63083e128edb00098d",
    "name": "Lucky Sevens",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "583310c5dbeb310c34000352",
    "name": "Work out is it falsy or truthy?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Booleans"
    ]
  },
  {
    "id": "5835e6ce6bdc270a5f00019b",
    "name": "BRL currency format",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "5870ef72aa04283934000043",
    "name": "Russian Peasant Multiplication",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58a848258a6909dd35000003",
    "name": "Mastermind",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "58dbb9b82f449e134a000119",
    "name": "One Line Task: Making Pizza",
    "approved": true,
    "tags": [
      "Bugs",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58e46873c45e9af88d00006a",
    "name": "Program a Calculator #1 - Points in 3D Space",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "590bb735517888ae6b000012",
    "name": "#9 Matrices: Adding diagonal products",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Graphs",
      "Data Structures",
      "Declarative Programming",
      "Programming Paradigms",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "59ffd0058ba91470bf0000bf",
    "name": "Mystery Colors",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Classes",
      "Basic Language Features",
      "Design Principles"
    ]
  },
  {
    "id": "5a15a2d8c374cbc353000074",
    "name": "Validate the Hash",
    "approved": true,
    "tags": [
      "Algorithms",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings"
    ]
  },
  {
    "id": "5a1de8a580171fb29f00005e",
    "name": "Sort rectangles and circles by area",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Geometry",
      "Algebra"
    ]
  },
  {
    "id": "5a54cdeb6f46dec1e5000356",
    "name": "Shorten Me: Array Declaration IV (1-30)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5b7c80094a6aca207000004d",
    "name": "Zozonacci",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5c80b55e95eba7650dc671ea",
    "name": "Complete Binary Tree",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Binary Search Trees",
      "Trees",
      "Binary",
      "Data Structures",
      "Heaps"
    ]
  },
  {
    "id": "5c879811bc562909bf65c8e6",
    "name": "Theorem proving hello world: prove a+0=a and 0+a=a",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Theorem Proving"
    ]
  },
  {
    "id": "5eaf88f92b679f001423cc66",
    "name": "Reflecting Light",
    "approved": true,
    "tags": [
      "Algorithms",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Logic"
    ]
  },
  {
    "id": "604f8591bf2f020007e5d23d",
    "name": "Next multiple of 5",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Performance"
    ]
  },
  {
    "id": "52092a7cea29118405000027",
    "name": "Imperfect Network #1 (duplicate messages)",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "52f7892a747862fc9a0009a6",
    "name": "Counting String Subsequences",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Dynamic Programming",
      "Programming Paradigms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "53cae2709bbf4cb80c000575",
    "name": "Pascal Problem",
    "approved": true,
    "tags": [
      "Bugs",
      "Logic",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "54289bfc929cdbbbfd000213",
    "name": "Folding through a fixed point",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5521d84b95c172461d0000a4",
    "name": "Binary Coded Decimal",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5592890bb4af624e930000b5",
    "name": "k-permutations of n",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science",
      "Permutations"
    ]
  },
  {
    "id": "56035d75426e197c3e0000a2",
    "name": "Filter out for good!",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Performance"
    ]
  },
  {
    "id": "5645fda2956e462b5100005e",
    "name": "Array arithmetic",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Prototypes"
    ]
  },
  {
    "id": "56f245a7e40b70f0e3000130",
    "name": "Find The Minimum Number Divisible by Integers of an Array I",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Control Flow",
      "Basic Language Features",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5778aa7c82d7d0b49c00001a",
    "name": "Unique Substring From Joined Strings",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "577bcb5dd48e5180030004de",
    "name": "Minimum unfairness of a list/array",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "578b8c0e84ac69a4d20004c8",
    "name": "What's your running pace?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "57b988048f5813799600004f",
    "name": "Conways game of life on a toroidal array",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "57e17750621bca9e6f00006f",
    "name": "Colored Hexes!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Basic Language Features"
    ]
  },
  {
    "id": "57ea1d9c491a15f43f000219",
    "name": "So Easy:  Show my password",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "580e09841d90366054000146",
    "name": "Report total allocated memory II",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Memory",
      "Linked Lists",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "5831200eb812b8016d000094",
    "name": "Smart Sum",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Recursion",
      "Algorithms",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "585de79128bc74912d0001c5",
    "name": "Smallest Difference",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "58aa9662c55ffbdceb000101",
    "name": "Simple Fun #149: Next Day Of Week",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58d014421c694f71630000bc",
    "name": "I Promise Not To Optimize",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Promises",
      "Design Patterns",
      "Design Principles",
      "Asynchronous"
    ]
  },
  {
    "id": "58e4033b5600a17be1000103",
    "name": "An Introduction to DocTesting...",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58f5ae82164573de7c00038c",
    "name": "Cheat or you shall not pass: easy",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "58fd4bbe017b2ed4e700001b",
    "name": "Simple Fun #201: Cards And Pero",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "591e996f67cd75f274000006",
    "name": "Simple Fun #297: Codewars T-shirt",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5962d557be3f8bb0ca000010",
    "name": "Mean without outliers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Recursion",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science",
      "Statistics",
      "Data"
    ]
  },
  {
    "id": "5995ff073acba5fa3a00011d",
    "name": "Ulam Sequences",
    "approved": true,
    "tags": [
      "Algorithms",
      "Sequences",
      "Arrays",
      "Data Types",
      "Arithmetic",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "59ca888aaeb284bb8f0000aa",
    "name": "Can I play right now?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types",
      "Testing"
    ]
  },
  {
    "id": "59f2746e50c8c2b55d000085",
    "name": "1 Two 3 Four 5!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Strings",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "59f98052120be4abfa000304",
    "name": "Upside-Down Numbers - Challenge Edition",
    "approved": true,
    "tags": [
      "Algorithms",
      "Performance"
    ]
  },
  {
    "id": "5a3f26dbb6486aa9c3000081",
    "name": "Max span",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types",
      "Numbers",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "5a53f300d8e145df7f000497",
    "name": "FIXME: Let's split this joint ",
    "approved": true,
    "tags": [
      "Bugs"
    ]
  },
  {
    "id": "5a552ef7e6be3855270000bd",
    "name": "Find the files then read them",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a93754d0025e98fde000048",
    "name": "Flou--Play game Series #9",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5ab3be5f6a176bef4e00012d",
    "name": "Hex Dump",
    "approved": true,
    "tags": [
      "Algorithms",
      "Encoding",
      "Logic",
      "Decoding"
    ]
  },
  {
    "id": "5c4b5f06b1fd9b3fec8cb03e",
    "name": "Lunar Mathematics: Addition",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Arithmetic"
    ]
  },
  {
    "id": "5c52e7ae9fbc3232b8372deb",
    "name": "JS Golfing #8: Is it Uppercase?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5ca3ae9bb7de3a0025c5c740",
    "name": "Change your Points of View",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5d230e119dd9860028167fa5",
    "name": "Traffic Lights - multiple cars",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5db8a241b8d7260011746407",
    "name": "Tetris Series #2 — Primitive Gameplay",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Games",
      "Algorithms",
      "Logic",
      "Basic Language Features",
      "Loops",
      "Control Flow",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5e98a87ce8255200011ea60f",
    "name": "field chained HTML formatting ",
    "approved": true,
    "tags": [
      "Puzzles",
      "Objects",
      "Data Types",
      "Prototype-based Programming",
      "Programming Paradigms",
      "Prototypes",
      "Advanced Language Features",
      "Fundamentals",
      "Formatting",
      "Algorithms",
      "Logic",
      "Inheritance",
      "Object-oriented Programming",
      "Polymorphism"
    ]
  },
  {
    "id": "618688793385370019f494ae",
    "name": "Do the points form a square?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Basic Language Features"
    ]
  },
  {
    "id": "521a849a05dd182a09000043",
    "name": "Hash.flattened_keys",
    "approved": true,
    "tags": [
      "Algorithms",
      "Hashes",
      "Data Structures",
      "Utilities",
      "Recursion",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "53c8bcb1689f84238c000661",
    "name": "Haskell List Comprehension (ii)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5510caecaacf801f820002ac",
    "name": "Hack-22",
    "approved": true,
    "tags": [
      "Puzzles",
      "Advanced Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "553e0c3c8b8c2e1745000005",
    "name": "FLAMES Game version 1 ",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5568c4ed1597b393b6000066",
    "name": "matrix expanding",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "55ab9eee6badbdaf72000075",
    "name": "Figurate Numbers #1 - Pentagonal Number",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "55df8bb5b435f0628a0000c8",
    "name": "ABC - Esoteric programming #2",
    "approved": true,
    "tags": [
      "Algorithms",
      "Interpreters",
      "Logic",
      "Esoteric Languages"
    ]
  },
  {
    "id": "5644a69f7849c9c097000073",
    "name": "Square and Cube of a Number Become Prime When Reversed",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Types",
      "Memoization",
      "Design Patterns",
      "Design Principles"
    ]
  },
  {
    "id": "567ffb369f7f92e53800005b",
    "name": "Bernoulli numbers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Mathematics",
      "Logic",
      "Numbers",
      "Arithmetic"
    ]
  },
  {
    "id": "56d060d90f9408fb3b000b03",
    "name": "Calculate the derivative of a polynomial",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "570f147ccd0531d55d000788",
    "name": "The fibfusc function -- Part 1",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57197be09906af7c830016de",
    "name": "denumerate string",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Sorting",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5825d14385f5c52a590000b2",
    "name": "dataTypes String to Array",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5848947d59fdc010fe00023e",
    "name": "Leap year (with restrictions)",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5853dcca5a469f6293000122",
    "name": "Simple Extension Methods",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Basic Language Features",
      "Methods",
      "Functions",
      "Object-oriented Programming",
      "Control Flow",
      "Programming Paradigms"
    ]
  },
  {
    "id": "585b989c45376c73e30000d1",
    "name": "Christmas Present Calculator",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types",
      "Dictionary",
      "Data Structures"
    ]
  },
  {
    "id": "58952e29f0902eae8b0000cb",
    "name": "Simple Fun #83: MineSweeper",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58a3f57ecebc06bfcb00009c",
    "name": "Simple Fun #129: Repeat Sequence Length",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58aa8368ae929ea2e00000d9",
    "name": "Simple Fun #146: Chandos Number",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Arithmetic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "58bf3cd9c4492d942a0000de",
    "name": "Dictionary of Factors",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "591286823c0417fc090000af",
    "name": "One Line Task: Makes 10",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "592eccf7d6a5403edf000aa1",
    "name": "Adding words - Part II",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5967a67c8b0fc0093e000062",
    "name": "Codwars  or Codewars?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "596a5e32634dad2a3c00003f",
    "name": "Make every letter after X into caps. ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "596a81352240711f3b00006e",
    "name": "Binary multiplication.",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Puzzles",
      "Games",
      "Data Types"
    ]
  },
  {
    "id": "59b68d634f98a8c9d60000e2",
    "name": "JS Golfing #4: Math.random",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "59c1d64b9f0cbcf5740001ab",
    "name": "Convex hull area",
    "approved": true,
    "tags": [
      "Algorithms",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Logic"
    ]
  },
  {
    "id": "59ea2a532a7accf2510000ce",
    "name": "Can this object fly? Balloons in \"Up\" and in real life",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Objects",
      "Data Types"
    ]
  },
  {
    "id": "5a0117798ba9143a64000073",
    "name": "@htmlize",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Closures",
      "Higher-order Functions"
    ]
  },
  {
    "id": "5a2c084ab6cfd7f0840000e4",
    "name": "Prime ant",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Arrays",
      "Games"
    ]
  },
  {
    "id": "5ab349e01aaf060cd0000069",
    "name": "ANTISTRING",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Encoding",
      "Logic"
    ]
  },
  {
    "id": "5b707fbc8adeaee7ac00000c",
    "name": "Calculate the resultant force ",
    "approved": true,
    "tags": [
      "Algorithms",
      "Physics",
      "Logic",
      "Geometry",
      "Algebra",
      "Mathematics"
    ]
  },
  {
    "id": "5ba068642ab67b95da00011d",
    "name": "Micro-World ",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "514a17e911ea4fb54200005a",
    "name": "Life of Possibilities",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mapping",
      "Logic"
    ]
  },
  {
    "id": "5265a8beff1d1500a30005e9",
    "name": "Line Type Parser",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Parsing",
      "Logic",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "5428381e6f30af88b4000b09",
    "name": "\"TRaduttore\".tr(  [  \"u\",  \"tt\" ] ,  \"it\"  )",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "54fdbad0762e2e8a54000452",
    "name": "Count word occurrences",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Logic",
      "Caching"
    ]
  },
  {
    "id": "55aa92a66f9adfb2da00009a",
    "name": "Reversi row rudiments",
    "approved": true,
    "tags": [
      "Algorithms",
      "Games"
    ]
  },
  {
    "id": "55e7650c8d894146be000095",
    "name": "Error Throwing - Error Handling #2",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Exception Handling",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "55f0b69fe3ef582c4100008a",
    "name": "Sieve of Eratosthenes",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "562c5ea7b5fe27d303000054",
    "name": "Permutations Of An Array And Associated Values",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Data Structures",
      "Permutations",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "563fd46f2a1863685f000052",
    "name": "Simple Equation",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56fe9ffbc25bf33fff000f7c",
    "name": "Coding 3min: Trypophobia",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "570128f870ce0e81b80016db",
    "name": "Factory Functions #2 - Inheritance and Object Composition",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5705b59f5eef1f04f1000f84",
    "name": "Shortest Code : Are they symmetrical?",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5722cc50785220ac8b00129b",
    "name": "Pictures #1 - Rebuilding the Tower of Babel",
    "approved": true,
    "tags": [
      "Algorithms",
      "ASCII",
      "Character Encodings",
      "Formats"
    ]
  },
  {
    "id": "57530135aeb792ba42000620",
    "name": "T.T.T.#4: Key of door",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57db5923d8f92929380001ae",
    "name": "PHP Functions - Accessing Global Variables",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "57dbd9d68d7f5a785f00000f",
    "name": "PHP Functions - The \"Use\" Keyword",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "57f318ce828b3553b40013ea",
    "name": "Display Large Numbers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Formatting",
      "Logic",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals"
    ]
  },
  {
    "id": "57f891255cae44b2e10000c5",
    "name": "Working With Coloured Numbers",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Algorithms",
      "Logic",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Optimization",
      "Declarative Programming",
      "Programming Paradigms",
      "Strings",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science",
      "Dynamic Programming"
    ]
  },
  {
    "id": "580f5818a88b4a5b2500061d",
    "name": "Bit Letters",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58360d112fb0ba255300008b",
    "name": "Now that's a crib!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Control Flow",
      "Basic Language Features",
      "Loops"
    ]
  },
  {
    "id": "58ad09d6154165a1c80000d1",
    "name": "Simple Fun #154: Zero And One",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "590001c24c5d02625b00005e",
    "name": "Simple Fun #213: Is Function?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "590ac6b9be4dff49b0000042",
    "name": "Convert Decimal Degrees to Degrees, Minutes, Seconds",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a34c307f28b829b3d000045",
    "name": "Card game:  twenty-one",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types",
      "Numbers",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "5a4bdd73d8e145f17d000035",
    "name": "Sort only integers in Nested List",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a6761be145c4691ee000090",
    "name": "Array reduction",
    "approved": true,
    "tags": [
      "Algorithms",
      "Sequences",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5ab4f002379d20e82500008c",
    "name": "Train your skills in creation of classes.",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Constructors"
    ]
  },
  {
    "id": "5b0148133e9715bf6f000154",
    "name": "Hello World without strings, numbers and booleans",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Numbers",
      "Booleans"
    ]
  },
  {
    "id": "5b80dea49895f71f3e00002d",
    "name": "Containers",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5c1b25bc85042749e9000043",
    "name": "Music Fun #1 - Major Scale",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types",
      "Parsing"
    ]
  },
  {
    "id": "52c7c425f80c299ac60003df",
    "name": "Escape HTML Markup",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Data Types",
      "Utilities"
    ]
  },
  {
    "id": "53837b8c94c170e55f000811",
    "name": "Zonk game",
    "approved": true,
    "tags": [
      "Algorithms",
      "Games"
    ]
  },
  {
    "id": "54224ce3dda526a97d00127d",
    "name": "Array Calculator",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "546e0773fa8da2013200087a",
    "name": "Big Integer Modulo",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Logic"
    ]
  },
  {
    "id": "5563b04ab3fd7e500d000151",
    "name": "Recursive Averages",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "556b4fdfc0f8bbbd2d000019",
    "name": "Finish this Mini Sudoku",
    "approved": true,
    "tags": [
      "Bugs"
    ]
  },
  {
    "id": "55b2d9bd2d3e974dfb000030",
    "name": "Become The Ultimate Phychic",
    "approved": true,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "566df9b0911626095b000013",
    "name": "Countries in Olympic Games",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56ff322e79989cff16000e39",
    "name": "Bracket Buster",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "5705601c5eef1fad69000674",
    "name": "Number to Bytes",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "574ad936a3ebd6b322000d19",
    "name": "Binary Swap",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Recursion",
      "Algorithms",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "577ff873d648a1c5a9000143",
    "name": "Recursion: An introduction",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Recursion",
      "Algorithms",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "581951b3704cccfdf30000d2",
    "name": "Split Without Loss",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "581c894633b9fe465d0000a6",
    "name": "ChessBoard",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "58884a65f06a3d3bef000049",
    "name": "Simple Fun #47: Stolen Lunch",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "589926bf7a2a3992050014f1",
    "name": "Fib Factorials",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "589d5c80c31aa590e300006b",
    "name": "Simple Fun #119: Sub Sets Parity",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58a3a735cebc0630830000c0",
    "name": "Simple Fun #122: String Constructing",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58b28e5830473070e5000007",
    "name": "Alex & snooker: scores.",
    "approved": true,
    "tags": [
      "Algorithms",
      "Statistics",
      "Data",
      "Logic",
      "Arrays",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "58f174ed7e9b1f32b40000ec",
    "name": "Best Stock Profit in Single Sale",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "590363d57e16c9b3c0000014",
    "name": "#5 Matrices: Sort The Matrix",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Graphs",
      "Data Structures",
      "Sorting",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "595fa01cde9d341e8c000045",
    "name": "Some Fun with Aggregate Operations (Part 1)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "59cbcb4523dacc2ccd000030",
    "name": "What rank is this card?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "59e71f7e23324365ce000026",
    "name": "Oktober Fest: Bjorg's Got A Drinking Problem",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "If-then-else Statements",
      "Conditional Statements",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5a0cc9898a66ed41a40005e7",
    "name": "Query Converter",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a6944c580eba823100000ac",
    "name": "Shorten Me: Mad Mathematician's Algorithm V (Modulus)",
    "approved": true,
    "tags": [
      "Puzzles",
      "Fundamentals",
      "Games"
    ]
  },
  {
    "id": "5abb8e941ea65df9870000a9",
    "name": "Putting the flatMap into the JS",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Maps",
      "Data Structures",
      "Map/Reduce",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5c1d796370fee68b1e000611",
    "name": "Loopover",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5c5abf56052d1c0001b22ce5",
    "name": "Koch curve",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5db42a943c3c65001dcedb1a",
    "name": "LZ78 compression",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5e3f043faf934e0024a941d7",
    "name": "Can you win the codewar  ?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Logic"
    ]
  },
  {
    "id": "5e860c16c7826f002dc60ebb",
    "name": "Largest Value of a Power Less Than a Number",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5f05e334a0a6950011e72a3a",
    "name": "Word search",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Optimization"
    ]
  },
  {
    "id": "6167e70fc9bd9b00565ffa4e",
    "name": "Barista problem",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Sorting",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5298a7b37edba9043200047b",
    "name": "Pipelining and composing functions",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Composition",
      "Design Principles",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "52dad39eafe5003d57000437",
    "name": "An Eventful Bus",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Programming Paradigms"
    ]
  },
  {
    "id": "530e69ae72d6dfced0000a9e",
    "name": "Arbitrary-Length Integer Arithmetic",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Integers",
      "Mathematics",
      "Big Integers"
    ]
  },
  {
    "id": "53ab2721283d237fee00017f",
    "name": "1337 Classes",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Metaprogramming",
      "Programming Paradigms",
      "Advanced Language Features"
    ]
  },
  {
    "id": "53c9157c689f841d16000c03",
    "name": "Euler Totient Function",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5461c0e29726f66bb60010b1",
    "name": "Counting in English one, two, three... to 2 Quadrillion (2,000,000,000,000,000)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "54b68c9f48245d382a000f2a",
    "name": "sum_eq_n?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "55bacaaccf8b5eb992000086",
    "name": "Prime Number Generator :Simple version",
    "approved": true,
    "tags": [
      "Fundamentals",
      "ES2015",
      "Babel"
    ]
  },
  {
    "id": "55c4a2a2586d8706be0000d0",
    "name": "Fractions of a currency' smallest value",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55f810474dc34c5a25000016",
    "name": "Body mass index calculation",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Logic"
    ]
  },
  {
    "id": "5619dbc22e69620e5a000010",
    "name": "When Sigma1 Function Has Equals Values For an Integer and Its Reversed One",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Control Flow",
      "Basic Language Features",
      "Functions"
    ]
  },
  {
    "id": "5639302a802494696d000077",
    "name": "Working with Dictionaries",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Control Flow",
      "Basic Language Features",
      "Functions",
      "Data Structures"
    ]
  },
  {
    "id": "5653935c09106259c000001a",
    "name": "Random Number Generator",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56c1c1e4876de7e0cb000a10",
    "name": "Basics 09: Shifting Bits, right...?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Arithmetic",
      "Integers",
      "Binary"
    ]
  },
  {
    "id": "56dfce76b832927775000027",
    "name": "Thinking & Testing : Join but not join",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "570eb07e127ad107270005fe",
    "name": "nova polynomial  2. multiply",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5714594d2817ff681c000783",
    "name": "Fastest Code : A*B=C",
    "approved": true,
    "tags": [
      "Algorithms",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5717fbf85122b8f757001b3f",
    "name": "Rotate Corners",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5770e4a5f7d4d2e0e4000073",
    "name": "Reflection #2 - Give me all methods",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Advanced Language Features",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Objects",
      "Data Types",
      "Reflection",
      "Metaprogramming"
    ]
  },
  {
    "id": "5779474882d7d0a10f000005",
    "name": "Tabs to spaces",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57cd5b1258da9e828000059d",
    "name": "Object-Oriented PHP #10 - Objects on the Fly [Advanced]",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Type Casting"
    ]
  },
  {
    "id": "583dee7395a0632356000a0f",
    "name": "What doesn't belong to these?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Basic Language Features",
      "Fundamentals",
      "Mathematics",
      "Logic",
      "Numbers",
      "Arrays",
      "Data Types",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58936eb3d160ee775d000018",
    "name": "Dynamic Connectivity",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Data Types"
    ]
  },
  {
    "id": "5893f03c779ce5faab0000f6",
    "name": "Simple Fun #66: Obtain Max Number",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58acf6c20b3b251d6d00002d",
    "name": "Simple Fun #151: Rocks",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "58b6d8ba1697a5655d00009b",
    "name": "Spanish Pirates off the Treasure Coast",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58bcd7f2f6d3b11fce000025",
    "name": "Simple Fun #183: Direction In Grid",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58c20c8d61aefc518f0000fd",
    "name": "Simple Fun #191: Sum Of Regular Numbers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "58c21e99c80e0eac25000235",
    "name": "One Line Task: Brick Combos",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58ef89d42a9818c78200020a",
    "name": "MAC Address : Regexp",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "5908033e30e4f546bc00003d",
    "name": "Simple Fun #234: Euler's Totient Function",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "590e4940defcf1751c000009",
    "name": "Keith Numbers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Logic",
      "Mathematics"
    ]
  },
  {
    "id": "590fca79b5f8a69285000465",
    "name": "Simple Fun #251: Apples Distribution",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "592dcbfedc403be22f00018f",
    "name": "Markings to White Triangles and How to Find Them",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "596d93bd9b6a5df4de000049",
    "name": "BAD Hash - String to Int",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5970915e54c27bd71000007b",
    "name": "Some stereometry",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "599b1a4a3c5292b4cc0000d5",
    "name": "Palindrome integer composition",
    "approved": true,
    "tags": [
      "Algorithms",
      "Performance"
    ]
  },
  {
    "id": "59b261a35220ab5ea70000c3",
    "name": "-Convert it, quickly!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "59ee2671233243fd2c000168",
    "name": "Multi Line Task:  Hello World (Without Letters)",
    "approved": true,
    "tags": [
      "Puzzles",
      "Fundamentals",
      "Games"
    ]
  },
  {
    "id": "59ffe8bbffe75f6d94000016",
    "name": "@count_calls",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Closures",
      "Higher-order Functions"
    ]
  },
  {
    "id": "5a028001ba2a14346b0000d4",
    "name": "Simple Fun #376: The Visible Posters",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a8cacb2d5261f53ec0031f3",
    "name": "Ziggurat Ride of Fortune",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Performance"
    ]
  },
  {
    "id": "5ae64f28d2ee274164000118",
    "name": "String ->  X-Iterations -> String",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Puzzles",
      "Games",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "5b085335abe956c1ef000266",
    "name": "T9 Predictor",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5bc6f9110ca59325c1000254",
    "name": "Count Squares In the Chess Board",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Dynamic Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5c2fd9188e358f301f5f7a7b",
    "name": "Bird Mountain - the river",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5d4dd5c9af0c4c0019247110",
    "name": "Time until distance between moving ships",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5e1b37bcc5772a0028c50c5d",
    "name": "Minimum number of taxis",
    "approved": true,
    "tags": [
      "Algorithms",
      "Data Structures",
      "Logic",
      "Priority Queues",
      "Queues",
      "Arrays",
      "Data Types",
      "Scheduling",
      "Optimization"
    ]
  },
  {
    "id": "5eaecb855179590011d2c020",
    "name": "Making a changelog",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "60a516d70759d1000d532029",
    "name": "Survivors Ep.4",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Basic Language Features"
    ]
  },
  {
    "id": "60a9148187cfaf002562ceb8",
    "name": "Build a quadratic equation",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Strings",
      "Data Types",
      "Algebra"
    ]
  },
  {
    "id": "60b775debec5c40055657733",
    "name": "Bugs with late binding closure",
    "approved": true,
    "tags": [
      "Bugs"
    ]
  },
  {
    "id": "61419e8f0d12db000792d21a",
    "name": "(a+b)^n ",
    "approved": true,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Algebra",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "526b1dd476952c04cf0000ab",
    "name": "Vending Machines",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Integers"
    ]
  },
  {
    "id": "52aebd2423b44356b8000578",
    "name": "Valid Binary Christmas Tree",
    "approved": true,
    "tags": [
      "Algorithms",
      "Hacking Holidays",
      "Trees",
      "Data Structures",
      "Validation",
      "Logic"
    ]
  },
  {
    "id": "5361372e700d2a9627000cf1",
    "name": "Kama Sutra Cipher Helper",
    "approved": true,
    "tags": [
      "Algorithms",
      "Ciphers",
      "Cryptography",
      "Logic",
      "Security",
      "Objects",
      "Data Types",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Fundamentals",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "54330fec913a650b640004b1",
    "name": "Simple Memoization",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "54471405a58191b95900042f",
    "name": "Divided We Stand",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Iterators",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "54f5f22a00ecc4184c000034",
    "name": "Exponentials as fractions",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55653db7b0075fe1f000000a",
    "name": "5command - Esoteric programming #1",
    "approved": true,
    "tags": [
      "Algorithms",
      "Interpreters",
      "Logic",
      "Esoteric Languages"
    ]
  },
  {
    "id": "560030c3ab9f805455000098",
    "name": "Put the cat on the table",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "564e21ba7cd824845b000097",
    "name": "Knight vs Bishop",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "579387dc7cb7a1e592000112",
    "name": "Pokemon Go",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "57c0484849324c4174000b18",
    "name": "getting started #let's piay",
    "approved": true,
    "tags": [
      "Bugs"
    ]
  },
  {
    "id": "57d237f25dc38ede6e00026b",
    "name": "I guess this is a 7kyu kata #4: Find  0 and 1",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57d7805cec167081a50014ac",
    "name": "Spaghetti Code - #1 Easy",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "581963edc929ba19e7000148",
    "name": "The furthest distance of index",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5826c14622be6ef2a4000033",
    "name": "n-th reversible prime",
    "approved": true,
    "tags": [
      "Algorithms",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5851aae410200111f70006c0",
    "name": "Keep it short (with restrictions)",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5886cab0a95e17e61600009d",
    "name": "Simple Fun #21: Number Of Clans",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58942c43c5d31a77eb0000ea",
    "name": "Simple Fun #77: Is Beautiful String?",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5916c21917db4a0ad800002d",
    "name": "The Hunger Games - Foxes and Chickens (Poison)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "59879e52704c4f96540000c1",
    "name": "Hall Of Fame",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "599cdc22675e5f43f1000005",
    "name": "Happy Coding : Correct The Leaderboard",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59cacb2b09394a91cb0000d5",
    "name": "refactoring the statement",
    "approved": true,
    "tags": [
      "Puzzles",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "59fabc2406d5b638f200004a",
    "name": "Space Invaders Underdog",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Games"
    ]
  },
  {
    "id": "59fb4d89ff58e5e816002efc",
    "name": "Makes the Sentence",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a0001a606d5b68a5a000013",
    "name": "@validate_args",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Closures",
      "Higher-order Functions"
    ]
  },
  {
    "id": "5a106ce7ffe75f4c200000f7",
    "name": "Find the random seed ",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a4adff7e626c53463000015",
    "name": "Simple Fun #389: The Order Of Ribbons",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a686337880385c0f1000055",
    "name": "Shorten Me: Mad Mathematician's Algorithm IV (Division)",
    "approved": true,
    "tags": [
      "Puzzles",
      "Fundamentals",
      "Games"
    ]
  },
  {
    "id": "5a79601b373c2e3b4a00013c",
    "name": "[BF] Hide the Password",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5a7d4852b1710149e30000be",
    "name": "[BF] A + B (without plus sign)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5afa08f23e971553170001e0",
    "name": "How Many Differences of Squares?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5bcac5a01cbff756e900003e",
    "name": "The Baby Years III - First Tooth",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "5c2bedd7eb9aa95abe14d0ed",
    "name": "Calendar Week",
    "approved": true,
    "tags": [
      "Algorithms",
      "Dates/Time",
      "Data Types",
      "Logic"
    ]
  },
  {
    "id": "5c743cec901022438549964a",
    "name": "Create iterator",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Basic Language Features",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5cbf57a636240b0025b09396",
    "name": "Bouncing Beams (Pt. 1)",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5cc70653658d6f002ab170b5",
    "name": "Magnitude",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5e1ab1b9fe268c0033680e5f",
    "name": "Block sequence ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "514a7bb557cdc630ab00001d",
    "name": "Statistics Algorithm - Calculate Mean",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "52b013920b1d45c8b4000355",
    "name": "Dreidel dreidel",
    "approved": true,
    "tags": [
      "Algorithms",
      "Hacking Holidays",
      "Games",
      "Rules"
    ]
  },
  {
    "id": "531cb1c520522ecb120005c4",
    "name": "Human Friendly Random Numbers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Fundamentals",
      "Programming Paradigms"
    ]
  },
  {
    "id": "540f550ebfd623e28b000cd3",
    "name": "Find the max depth in an array",
    "approved": true,
    "tags": [
      "Puzzles",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "54ce6115975ca685dd0005d5",
    "name": "Move-To-Front Encoding",
    "approved": true,
    "tags": [
      "Algorithms",
      "Encoding",
      "Logic"
    ]
  },
  {
    "id": "55437532b73f053bac000096",
    "name": "A Memory game array",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "55738b0cffd95756c3000056",
    "name": "Optimum coding school location",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "565c9f5fcabeeaeb5a000052",
    "name": "Area of a regular polygon",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Formats"
    ]
  },
  {
    "id": "56d9439813f38853b40000e4",
    "name": "Strings, strings, strings (Hard)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Recursion",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Prototype-based Programming",
      "Prototypes"
    ]
  },
  {
    "id": "57052ac958b58fbede001616",
    "name": "#01 - Music theory - Minor/Major chords",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Data Structures",
      "Logic"
    ]
  },
  {
    "id": "570e6d8576f0cde131000129",
    "name": "Shortest Code : Guess the Hat",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57519060f2dac7ec95000c8e",
    "name": "Decompose double strand DNA into 6 reading frames",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5791bdba3467db61ff000040",
    "name": "Matrix Exponentiation",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Graphs",
      "Data Structures",
      "Logic"
    ]
  },
  {
    "id": "57b2fc418491f9f092000029",
    "name": "Number encrypting: decypher",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "57d99f6bbfcdc5b3b0000286",
    "name": "Counting Rectangle Triangles ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Geometry",
      "Algebra",
      "Control Flow",
      "Basic Language Features",
      "Optimization"
    ]
  },
  {
    "id": "57e93e4a2aee4974d4000c2f",
    "name": "Holiday X - Bintang Vests",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "580b746830f829e46400001e",
    "name": "A small difference",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5838719c6754d618240000ff",
    "name": "Validate Passwords",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Arrays",
      "Data Types",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "5898a751b2edc082f60005f4",
    "name": "Tombola - validation",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "58a510fa8dff50aa56000030",
    "name": "One Line Task: Two Letters",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58a6ac309b5762b7aa000030",
    "name": "Simple Fun #140: Circle Slash",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58b3d20a47117f7e5b00007a",
    "name": "One Line Task: One, OneOne, Two, TwoTwo, Three, ThreeThree...",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "591404294ef3051cbe000035",
    "name": "Simple Fun #268: Triangular Sum",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5925138effaed0de490000cf",
    "name": "Simple Fun #301: Rope Skipping Game",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "59604925a68b04598e00001e",
    "name": "Pirate Island Conquer Part 1",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "59bbf86d5fb133fab20000e4",
    "name": "Padding",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59bdbe9d46038724ca0000b9",
    "name": "Pure Functions",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59c191df4f98a8a70b00001e",
    "name": "Hex cipher",
    "approved": true,
    "tags": [
      "Algorithms",
      "Cryptography",
      "Security",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Classes",
      "Basic Language Features",
      "Fundamentals",
      "Ciphers",
      "Logic"
    ]
  },
  {
    "id": "5a3894c7ee1aaebf30000076",
    "name": "BFxor (single-bit)",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a981424373c2e479c00017f",
    "name": "Really Complex Sum",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "5aa69e68ba1bb5ecdf000557",
    "name": "Longest Consecutive Sequence of Squares",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Logic",
      "Sequences",
      "Arrays"
    ]
  },
  {
    "id": "5ad0fdf461c493cc09000036",
    "name": "N High Scores",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5bfc9bf3b20606b065000052",
    "name": "Solve the Grid! Binary Toggling Puzzle",
    "approved": true,
    "tags": [
      "Puzzles",
      "Binary",
      "Games",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5c765a4f29e50e391e1414d4",
    "name": "Haiku Checker",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5d5f5ea8e3d37b001dfd630a",
    "name": "Histogram - H2",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5da06d425ec4c4001df69c49",
    "name": "Removing Internal Vertices",
    "approved": true,
    "tags": [
      "Algorithms",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Logic"
    ]
  },
  {
    "id": "5dfd129673aa2c002591f65d",
    "name": "Picking the best casino game",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "609d17f9838b2c0036b10e89",
    "name": "Keyboard handler",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "614dfc4ce78d31004a9c1276",
    "name": "Electronics #1. Ohm's Law",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "51f9543d293a10a7a700004f",
    "name": "Sorted hashes",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Hashes",
      "Data Structures",
      "Sorting",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5200165c39ae4c612200027b",
    "name": "Phone my kids",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Metaprogramming",
      "Programming Paradigms",
      "Advanced Language Features",
      "Object-oriented Programming",
      "Inheritance",
      "Polymorphism"
    ]
  },
  {
    "id": "53a3240ced8465f048000302",
    "name": "Single-Use Tickets: Don't Let Anyone Sneak In!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Objects",
      "Data Types",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Security"
    ]
  },
  {
    "id": "5416356b1b28a5e297000bc7",
    "name": "Find the K'th Element of a List",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures",
      "Utilities"
    ]
  },
  {
    "id": "54411212cf36259c04000f04",
    "name": "Find the k-th Element of a list safely",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "54f4e56e00ecc43c6d000220",
    "name": "Ordering Beers in Poland",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Utilities"
    ]
  },
  {
    "id": "55332880e679dd9cb3000081",
    "name": "Bocce",
    "approved": true,
    "tags": [
      "Algorithms",
      "Puzzles",
      "Games",
      "Logic"
    ]
  },
  {
    "id": "558db3ca718883bd17000031",
    "name": "Complete The Pattern #15",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Arrays",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "55eab8c5a15df752cc00002b",
    "name": "Find amplitude of a binary tree",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56060ba7b02b967eb1000013",
    "name": "Raise Me to The Third Power, Search My Divisors... .....Could You Believe that?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Memoization",
      "Design Patterns",
      "Design Principles",
      "Dynamic Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "560d41fd7e0b946ac700011c",
    "name": "Time to Watch a Parade!",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "561bed6a31daa8df7400000e",
    "name": "N queens puzzle (with one mandatory queen position)",
    "approved": true,
    "tags": [
      "Puzzles",
      "Algorithms",
      "Logic",
      "Games"
    ]
  },
  {
    "id": "56bc72f866a2ab1890000be0",
    "name": "Multirange iterator",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Iterators",
      "Control Flow",
      "Object-oriented Programming",
      "Basic Language Features",
      "Programming Paradigms",
      "Structs",
      "Data Structures"
    ]
  },
  {
    "id": "56bc7687e8936faed5000c09",
    "name": "Deficiently Abundant Perfect Amicable Numbers",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "570c560c15944a98e9000fd2",
    "name": "Shortest Code : Reading a Book",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "570dff30e6e9284ba3000a8f",
    "name": "Shortest Code : Special factor",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "570e8d5693214b0095001b08",
    "name": "Shortest Code : Find the murderer",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5714396153ac217d5500049f",
    "name": "Coding 3min : Hacker and change",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "571957959906af00f90012f3",
    "name": "Remember members decorator",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Decorator",
      "Design Patterns",
      "Design Principles",
      "Object-oriented Programming",
      "Singleton"
    ]
  },
  {
    "id": "574881a216ac9be096001ade",
    "name": "Knight or Knave (From the Motion Picture: The Labyrinth)",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5786f020e55533ebb7000153",
    "name": "Deep List Reverse",
    "approved": true,
    "tags": [
      "Algorithms",
      "Basic Language Features",
      "Fundamentals",
      "Mathematics",
      "Logic",
      "Numbers",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "57d9808b950d84e1a2000437",
    "name": "Back to KinderGarten (eeeeeeasy)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "57e5aa1d7fbcc988800001ae",
    "name": "Unflatten a list (Harder than easy)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Basic Language Features",
      "Fundamentals",
      "Mathematics",
      "Logic",
      "Numbers",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "57f3996fa05a235d49000574",
    "name": "Abundant Numbers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Logic"
    ]
  },
  {
    "id": "5813257b0d8f13b683000171",
    "name": "Swedish Personal Number",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Validation",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5832d6e2565e120ae60000bb",
    "name": "Build a  Car",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Control Flow",
      "Basic Language Features",
      "Exception Handling"
    ]
  },
  {
    "id": "58693bbfd7da144164000d05",
    "name": "Scooby Doo Puzzle",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Cryptography",
      "Security",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "586a961e2d52097283000314",
    "name": "Hack My Account!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5872d59caa042821100001f8",
    "name": "Transformation iteration",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "588d01f0a98ea0d3b8000002",
    "name": "Valid teams and names",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "58902b5edd7609f22d000059",
    "name": "Pinocchio's polygraph.",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "58a3cb34623e8c119d0000d5",
    "name": "Simple Fun #126: Decrypt Number",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58a3f0662f949eba5c00004f",
    "name": "Chess Fun #10: Chess Encryption",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58ee4962dc4f81d6f400001c",
    "name": "Program a Calculator #2 - 3D Vectors",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "59006675bb1fb31ae400012b",
    "name": "Pie Chart",
    "approved": true,
    "tags": [
      "Fundamentals",
      "JSON",
      "Formats",
      "Objects",
      "Data Types"
    ]
  },
  {
    "id": "5902bc48378a926538000044",
    "name": "Simple Fun #221: Furthest Distance Of Same Letter",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "591592b0f05d9a3019000087",
    "name": "Simple Fun #274: Diplomas",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "591b9c07266a3164c90001fe",
    "name": "Choose featured projects for Gratipay's homepage!",
    "approved": true,
    "tags": [
      "Algorithms",
      "Sorting",
      "Logic"
    ]
  },
  {
    "id": "5a3325b4b6486ab367000064",
    "name": "Check RNA Nucleotides",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5a3a95c2e1ce0efe2c0001b0",
    "name": "Maximum  Product of Parts",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a4a167ad8e1453a0b000050",
    "name": "Crashing Boxes",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5ac9662d58b03979d800000d",
    "name": "Compound Nouns,  Common Nouns, and Adjectives Test",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Parsing",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5af96cea3e9715ec670001dd",
    "name": "Projectile Motion",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5c1a334516537ccd450000d8",
    "name": "RegEx Like a Boss #2:  Alphabetical Order String",
    "approved": true,
    "tags": [
      "Algorithms",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings"
    ]
  },
  {
    "id": "5f7a715f6c1f810017c3eb07",
    "name": "A Bubbly Programming Language",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "536cce5f49aa8b3648000b52",
    "name": "Cheating a bit...",
    "approved": true,
    "tags": [
      "Puzzles",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "53c945d750fe7094ee00016b",
    "name": "Modular Multiplicative Inverse",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Arithmetic",
      "Integers"
    ]
  },
  {
    "id": "5436fdf34e3d6cb156000350",
    "name": "Flexible Card Game",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Classes",
      "Basic Language Features"
    ]
  },
  {
    "id": "54c183dd3f069611c3000f97",
    "name": "Interfacing",
    "approved": true,
    "tags": [
      "Puzzles",
      "Metaprogramming",
      "Programming Paradigms",
      "Advanced Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "5613475e4778aab4d600004f",
    "name": "Group Repeating Fractions",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "566f571ed78037c7b6000036",
    "name": "Get Length",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56d3c1eb3323a88d0a000305",
    "name": "Crazy programmer 01: find  SuperMan",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "56e120ee2bb224eaa3000ba2",
    "name": "String interlacing",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5716e15d2668e209b7000784",
    "name": "Coding 3min : Half it I",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "572cc218aedd20cc83000679",
    "name": "Let's flat them out",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "578df8f3deaed98fcf0001e9",
    "name": "Constructing a car #2 - Driving",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Objects",
      "Data Types",
      "Logic",
      "Data Structures"
    ]
  },
  {
    "id": "57ab1f7cbb9944a7860002a6",
    "name": "Noye's Fludde",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "57bd0abcb9799763f1001bdc",
    "name": "Mad Max: Recursion Road",
    "approved": true,
    "tags": [
      "Algorithms",
      "Recursion",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "57d9951f3c3f9666e9000017",
    "name": "99 Problems, #6: detecting a palindrome list",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "57e0a796f5ec16a11a001c93",
    "name": "PHP in Action #1 - Introduction to Superglobals [Fundamentals]",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57fb2c822b5314e2bb000027",
    "name": "Exclamation marks series #15: Replace the pair of exclamation marks and question marks to spaces",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "580f6cbcfbf2bec47c000511",
    "name": "Find Grid Position",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "582406166cf35b7f93000057",
    "name": "Can these three numbers form a date?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Dates/Time",
      "Data Types",
      "Formatting",
      "Permutations"
    ]
  },
  {
    "id": "58867e2e2d2177547500007f",
    "name": "Construct Graph Class (simple)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "58870b572640aeb910000098",
    "name": "#~For Kids~#  Date encryption. ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types",
      "Encryption",
      "Algorithms",
      "Cryptography",
      "Logic",
      "Security"
    ]
  },
  {
    "id": "58a2a561f749ed763c00000b",
    "name": "The Rhinestone Cowboy  ~ Count the dollars in his boots!",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58ad0e0a154165a1c80000ea",
    "name": "Simple Fun #155: Pac-Man",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58b3bb9347117f4aa7000096",
    "name": "Simple Fun #169: Press Button",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58efb6ef0849132bf000008f",
    "name": "Palindrome Builder",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "58fef91f184b6dcc07000179",
    "name": "#4 Matrices: Process for a Square Matrix",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Control Flow",
      "Basic Language Features",
      "Data Structures",
      "Declarative Programming",
      "Programming Paradigms",
      "Graphs",
      "Linear Algebra",
      "Algebra"
    ]
  },
  {
    "id": "59113da398dcd456270000a8",
    "name": "Simple Fun #259: Different Digits Number Search",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59974515b4c40be3cc000263",
    "name": "Friendly Pairs I",
    "approved": true,
    "tags": [
      "Algorithms",
      "Sequences",
      "Arrays",
      "Data Types",
      "Arithmetic",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "599a0d02755eae7070000079",
    "name": "Simple Syntax Tokenizing",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Parsing",
      "Logic",
      "Language Syntax",
      "Fundamentals"
    ]
  },
  {
    "id": "59bf97cd4f98a8b1cd00007e",
    "name": "Divisor harmony",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "59c53183aeb2842585000116",
    "name": "What time is it in Japan ?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "59d12056dcc405ac130000d3",
    "name": "Harry and the Mathematician's Chicken",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "59dc2c563d09a77d7c000031",
    "name": "One Line Task: Shortest FizzBuzz",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5a1560c980171f3f68000037",
    "name": "Palindromes with a slight twist: vowels & consonants assessed separately",
    "approved": true,
    "tags": [
      "Algorithms",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5a1d86dbba2a142e040000ee",
    "name": "Find the missed number",
    "approved": true,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Games"
    ]
  },
  {
    "id": "5a26073ce1ce0e3c01000023",
    "name": "Traffic Jam",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5a30ae82ee1aaef63300001a",
    "name": "Spanish sentences #1",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays",
      "Basic Language Features"
    ]
  },
  {
    "id": "5a9c0fa45084d79b1f000138",
    "name": "PC upgrade specs using HOC in ReactJS",
    "approved": true,
    "tags": [
      "Fundamentals",
      "ES2015",
      "Babel",
      "React",
      "Frameworks"
    ]
  },
  {
    "id": "5b3f8ac282417eb3180000e6",
    "name": "Jubilee Year",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "5b997b066c77d521880001bd",
    "name": "Shuffle It Up",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Performance",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Machine Learning",
      "Applied Computer Science",
      "Arithmetic"
    ]
  },
  {
    "id": "5c2ab63b1debff404a46bd12",
    "name": "Kata 2019: Combine Fruits",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Performance"
    ]
  },
  {
    "id": "5c81aaf99043851c65ce7f5b",
    "name": "Extending C# Objects: Calculate Word Scores With a Method",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5d472159d4f8c3001d81b1f8",
    "name": "Half Life",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Basic Language Features"
    ]
  },
  {
    "id": "5e98712b7de14f0026ef1cc1",
    "name": "rotate the letters of each element",
    "approved": true,
    "tags": [
      "Puzzles",
      "Lists",
      "Data Structures",
      "Strings",
      "Data Types",
      "Sorting",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5216a87cbf53a9c30f0000dc",
    "name": "Tic-Tac-Toe",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "52cdc1b015db27c484000031",
    "name": "N queens problem (with no mandatory queen position)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Performance"
    ]
  },
  {
    "id": "53381a646068efc50100072c",
    "name": "Function.prototype.clone",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Utilities",
      "Advanced Language Features"
    ]
  },
  {
    "id": "534161c506654f1559000483",
    "name": "Simplify Compound Fractions",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "534747b67323ae5364000112",
    "name": "NSA Phone Tapping",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Types",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "54108ea1a0e736cf62000b93",
    "name": "Binary Search Golf",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Data Structures",
      "Search"
    ]
  },
  {
    "id": "5553199b76990c4b3e000031",
    "name": "For want of a symbol",
    "approved": true,
    "tags": [
      "Puzzles",
      "Basic Language Features",
      "Fundamentals",
      "Games",
      "Loops",
      "Control Flow"
    ]
  },
  {
    "id": "5581e52ac76ffdea700000c1",
    "name": "Rule 30",
    "approved": true,
    "tags": [
      "Puzzles",
      "Lists",
      "Data Structures",
      "Arrays",
      "Data Types",
      "Sequences",
      "Binary"
    ]
  },
  {
    "id": "5592e5d3ede9542ff0000057",
    "name": "Complete The Pattern #13",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "55e762cb8d89416b4300007c",
    "name": "We need these data immediately!",
    "approved": true,
    "tags": [
      "Bugs",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "561c20edc71c01139000017c",
    "name": "Organize a Round-robin tournament",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Logic"
    ]
  },
  {
    "id": "563a362e21001b1d16000049",
    "name": "Reveal Spy Identity",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Inheritance",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Polymorphism"
    ]
  },
  {
    "id": "564e22e30e686c7f7e00005d",
    "name": "Knight vs Rook",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5664740e6072d2eebe00001b",
    "name": "A Knight's Tour",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5669ec539556f9e9f2000074",
    "name": "Pad Left and Right",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "56917304360b39073f00003b",
    "name": "Polynomials I: String Format",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Functions",
      "Strings"
    ]
  },
  {
    "id": "56b78faebd06e61870001191",
    "name": "Basics 05: Text Search",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Lists",
      "Data Structures",
      "Algorithms",
      "Logic",
      "Search"
    ]
  },
  {
    "id": "56e60e54517a8c167e00154d",
    "name": "Oracle: Coin Method",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types",
      "Sorting",
      "Games"
    ]
  },
  {
    "id": "57861fd922542afb0b00028b",
    "name": "n times 2 to the power of x",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "58049aa58f5e65b6da0000ef",
    "name": "The iccanobiF Sequence",
    "approved": true,
    "tags": [
      "Puzzles",
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Games"
    ]
  },
  {
    "id": "582fdcc039f654905400001e",
    "name": "Sorting Arrays by the Amount of Perfect Squares that Each Element May Generate",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Control Flow",
      "Basic Language Features",
      "Logic",
      "Strings",
      "Data Types",
      "Data Structures",
      "Algorithms",
      "Declarative Programming",
      "Programming Paradigms",
      "Mathematics",
      "Numbers",
      "Arithmetic",
      "Optimization",
      "Permutations"
    ]
  },
  {
    "id": "5866ce53dbca9af9940000d3",
    "name": "Fun with lists: trees edition",
    "approved": true,
    "tags": [
      "Algorithms",
      "Trees",
      "Data Structures",
      "Lists",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Higher-order Functions",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Binary Search Trees",
      "Binary"
    ]
  },
  {
    "id": "587dfbfc80be384fd30002de",
    "name": "1st day of month that are Sunday in a year range",
    "approved": true,
    "tags": [
      "Algorithms",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "58ad2e9c0e3c08126000003f",
    "name": "Simple Fun #158: Not So Random",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58d5b39b1c0402c5f7002e0d",
    "name": "Bear the Freelancer",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58db9545facc51e3db00000a",
    "name": "A Simple Music Encoder",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "58e77c88fd2d893a77000102",
    "name": "City Swim - 2D (TowerFlood And PlainFlood)",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Interview Questions",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "58fdada9b4f81a844f0000cb",
    "name": "One Line Task: Stick Or Chopsticks",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58fecb82f3dff0a347000018",
    "name": "One Line Task: Remove Zeros",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5985ea20695be6079e000003",
    "name": "N queens problem (with one mandatory queen position) - challenge version",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Performance"
    ]
  },
  {
    "id": "59c053f070a3b7d19100007e",
    "name": "Line Safari : Point distance from a line",
    "approved": true,
    "tags": [
      "Algorithms",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Logic"
    ]
  },
  {
    "id": "5a667bf8e6be382ecd000102",
    "name": "Truncate paragraph using higher-order component in React JS",
    "approved": true,
    "tags": [
      "Fundamentals",
      "React",
      "Babel",
      "Frameworks"
    ]
  },
  {
    "id": "5a76c830fd8c06283c000068",
    "name": "Compile time #2 Ackermann function",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Metaprogramming",
      "Programming Paradigms",
      "Advanced Language Features"
    ]
  },
  {
    "id": "5b01abb9de4c7f3c22000012",
    "name": "Ellipse contains point?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5b26360bd74b5b2ea5000026",
    "name": "Computer Science 101 - #2 Queues",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Linked Lists",
      "Lists",
      "Data Structures",
      "Queues",
      "Arrays",
      "Data Types",
      "Performance"
    ]
  },
  {
    "id": "5b6183066d0db7bfac0000bb",
    "name": "Memesorting",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Parsing",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5bc463f7797b00b661000118",
    "name": "Plus - minus - plus - plus - ... - Sum",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5c3f31c2460e9b4020780aa2",
    "name": "Recaman Sequence",
    "approved": true,
    "tags": [
      "Algorithms",
      "Sequences",
      "Arrays",
      "Data Types",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5cbded7a36240b000dac91eb",
    "name": "Spread number",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Prototype-based Programming",
      "Programming Paradigms",
      "Prototypes",
      "Advanced Language Features"
    ]
  },
  {
    "id": "5ee98cf315741d00104499e5",
    "name": "Multiply by a number, so it becomes a perfect power",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Logic",
      "Algebra"
    ]
  },
  {
    "id": "5f799eb13e8a260015f58944",
    "name": "Counting Horses",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "61c1ffd793863e002c1e42b5",
    "name": "Canal Management",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5143b3d15c6bf6448d00005d",
    "name": "Ruby Enumerator Methods - Part 1",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "523912f03f3cb3df5000010e",
    "name": "Bag#every?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lambdas",
      "Functional Programming",
      "Functions",
      "Declarative Programming",
      "Programming Paradigms",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5268a3e110342833900001bc",
    "name": "Simple Linear Regression Cost Function (Machine Learning)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Machine Learning",
      "Applied Computer Science",
      "Logic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "52744341faf5480173000bc7",
    "name": "Streams - endless arrays",
    "approved": true,
    "tags": [
      "Algorithms",
      "Streams",
      "IO"
    ]
  },
  {
    "id": "5432d1c4913a65b67d00008d",
    "name": "Hughes' List",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "543833d86f032f0942000264",
    "name": "Hutton's Razor",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Interpreters",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5453b006e6c9202dc8000847",
    "name": "Solve the Mysteries of Christianity",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "547b51dcd587f852e4000ad6",
    "name": "You Shall Not Parse!",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Integers",
      "Parsing",
      "Logic",
      "Strings",
      "Booleans"
    ]
  },
  {
    "id": "55aa170b54c32468c30000a9",
    "name": "JSON Parser",
    "approved": true,
    "tags": [
      "Algorithms",
      "JSON",
      "Formats",
      "Parsing",
      "Logic",
      "Strings"
    ]
  },
  {
    "id": "56293ae77e20756fc500002e",
    "name": "Expanding Dependency Chains",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Data Structures",
      "Graphs"
    ]
  },
  {
    "id": "5629b94e34e04f8fb200008e",
    "name": "The Sum of The First and The Last Prime Factor Make Chains of Numbers",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Data Structures",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "56536e45bd4717003a000056",
    "name": "Convert number to  sequence of bits",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Binary"
    ]
  },
  {
    "id": "569ff2622f71816610000048",
    "name": "Features of a Given Array",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Algorithms",
      "Logic",
      "Control Flow",
      "Basic Language Features",
      "Sorting",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Optimization",
      "Classes",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "56b5dc05e3a3a7691c000c1e",
    "name": "Basics 02: String - Array - Result?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Numbers",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Arrays"
    ]
  },
  {
    "id": "56b84da91d36bbfd7a0006e0",
    "name": "Timmy Time",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Control Flow",
      "Basic Language Features",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "570b69d96731d4cf9c001597",
    "name": "Odd Magic Square",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Arrays",
      "Data Types",
      "Numbers",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5736b7b749fc585e8900001f",
    "name": "Make it equal",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Advanced Language Features"
    ]
  },
  {
    "id": "578e07d590f2bb8d3300001d",
    "name": "WordSquare",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "57add740e298a7a6d500000d",
    "name": "T.T.T.32: Count with your fingers",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "581302bbbee85709d00002ae",
    "name": "Halloween: trick or treat!",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "581a825154f4dba286000014",
    "name": "Risk (Game) : Battle  Outcome",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5866f0c8442e3fec050001ec",
    "name": "All Star Code Challenge #30",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58791aa554a6783827000221",
    "name": "Closest friends",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Sorting",
      "Logic"
    ]
  },
  {
    "id": "58925dcb71f43f30cd00005f",
    "name": "The latest clock",
    "approved": true,
    "tags": [
      "Puzzles",
      "Dates/Time",
      "Data Types",
      "Fundamentals",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "58aaa3ca821a767300000017",
    "name": "Simple Fun #150: Robot Transfer",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58ad740c4b852be4a3000381",
    "name": "Find warrior's  kyu!",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58bf72b02d1c7c18d9000127",
    "name": "Simple Fun #187: Does Fred Need A Houseboat?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "58c5fca35722de3493000081",
    "name": "Playing with Sandpiles",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "58cbc48930bcf09b7a000117",
    "name": "Managing Homework Time",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arithmetic",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "58cfa163c496ce8856000064",
    "name": "Custom Accessors",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58e8f020fd89eaa1cf0000c2",
    "name": "Clock Patience",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5907f258d296b7cc7b000053",
    "name": "Simple Fun #231: Kth Divisor",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59094c5d579da9aceb000037",
    "name": "Simple Fun #240: Increasing Number",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5919427e5ffc30804900005f",
    "name": "Simple Fun #279: Finding K",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5943bf2895d5f74cfb000032",
    "name": "Random Substitution Cipher",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59b336de5fb1334711000067",
    "name": "Tricky Kotlin #0: extension constructor",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Tips & Tricks",
      "Advanced Language Features"
    ]
  },
  {
    "id": "59e56007b2c32c12330000ad",
    "name": "One Line Task: String Merge!",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5a0634ecf270a1aaaa0000c7",
    "name": "Lua is easy: Lesson 2 - Control structures",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a2e2499b6cfd7f828000014",
    "name": "Selection in elementary school",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Numbers",
      "Basic Language Features"
    ]
  },
  {
    "id": "5a47d5ddd8e145ff6200004e",
    "name": "Find the name of the lucky variable",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5a54ca2cd421cb55c7001308",
    "name": "Shorten Me: Array Declaration III (Fibonacci Last Digit)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5a96064cfd57777828000187",
    "name": "Switch the Bulb--Play game Series #10",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5aa3e2b0373c2e4b420009af",
    "name": "Square string tops",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5ab23a9c1cec39668c000055",
    "name": "Regex for Gregorian date validation",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5b4accacbdd07498aa000041",
    "name": "Cure Cancer",
    "approved": true,
    "tags": [
      "Algorithms",
      "Graphs",
      "Data Structures",
      "Arrays",
      "Data Types",
      "Logic"
    ]
  },
  {
    "id": "60c47b07f24d000019f722a2",
    "name": "When we are equal, we are identical",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5247799e69828fb3aa00019b",
    "name": "Compact data processing: bit comparison",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Binary"
    ]
  },
  {
    "id": "5247d2de69828f0d6c00032d",
    "name": "Not Quine",
    "approved": true,
    "tags": [
      "Algorithms",
      "Chars",
      "Data Types"
    ]
  },
  {
    "id": "527154e03594b9e3d2000533",
    "name": "Karnaugh's detonating timer (a k-map primer)",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "536c6d6549aa8b2e160002ae",
    "name": "Hashtaggery",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Data Types",
      "Parsing",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "544a247518b8e08af2000251",
    "name": "Ordinary Ordered Objects",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "545b860f82e55db165000554",
    "name": "(Dis)member functions",
    "approved": true,
    "tags": [
      "Puzzles",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "5562b6de2f508f1adc000089",
    "name": "riemann sums II (trapezoidal rule)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "55832eda1430b01275000059",
    "name": "Roman numerals, Zeroes and Fractions",
    "approved": true,
    "tags": [
      "Algorithms",
      "Validation",
      "Logic"
    ]
  },
  {
    "id": "55d459414bd7798fc5000081",
    "name": "Invert binary tree",
    "approved": true,
    "tags": [
      "Algorithms",
      "Trees",
      "Data Structures",
      "Logic"
    ]
  },
  {
    "id": "561f18d45df118e7c400000b",
    "name": "A Combinatorial Way to Get Products  and Sums of an Array",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Data Structures"
    ]
  },
  {
    "id": "566fd169d39cf89e1e000044",
    "name": "Sports league table - help your local team!",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Logic"
    ]
  },
  {
    "id": "56aea73c2283945da300004b",
    "name": "Create 10x10 array and randomly fill each cell with \"A\", \"B\", \"C\", or \"D\"",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "56b7a75cbd06e6237000138b",
    "name": "2D array inner join",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5708ef48fe2d018413000776",
    "name": "Translate DNA  in 6 frames",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5758a91bbd1fdd2033000947",
    "name": "Argue the toss",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arguments",
      "Basic Language Features",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "579e646353ba33cce2000093",
    "name": "Brainfuck generator",
    "approved": true,
    "tags": [
      "Algorithms",
      "Esoteric Languages"
    ]
  },
  {
    "id": "57bf7fae3b3164dcac000352",
    "name": "Prime Sextuplets",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Sorting",
      "Data Structures",
      "Memoization",
      "Design Patterns",
      "Design Principles",
      "Optimization"
    ]
  },
  {
    "id": "57ed6361e77282ee9300019f",
    "name": "Fifa 17 Launch",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Objects",
      "Numbers"
    ]
  },
  {
    "id": "582aad136755daf91a000021",
    "name": "Find the integer sequences",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "584d05422609c8890f0000be",
    "name": "Generating Numbers  From Digits #1",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Algorithms",
      "Logic",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Optimization",
      "Declarative Programming",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "5887140d2640aea82f0000d3",
    "name": "#~For Kids~#  Date decryption. ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types",
      "Encryption",
      "Algorithms",
      "Cryptography",
      "Logic",
      "Security"
    ]
  },
  {
    "id": "589414918afa367b4800015c",
    "name": "Simple Fun #72: Absolute Values Sum Minimization",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58a3b28b2f949e21b3000001",
    "name": "Chess Fun #9: Bishops And Rooks",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58c8e1c2a7f31af03600008f",
    "name": "Reflection in PHP #1 - Introduction",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Reverse Engineering",
      "Security"
    ]
  },
  {
    "id": "59031db02b0070a923000110",
    "name": "One Line Task: Zero Or One",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "594a5d8f704e4d5561000019",
    "name": "ASCII Fun #4: Build a pyramid",
    "approved": true,
    "tags": [
      "Fundamentals",
      "ASCII",
      "Character Encodings",
      "Formats"
    ]
  },
  {
    "id": "5960e6cf09868d7f2f0000bc",
    "name": "Some Fun with Aggregate Operations (Part 3)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "598a1fc1676fdd837f000e56",
    "name": "Russian nesting dolls",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Recursion",
      "Algorithms",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "59986011d85bdd7fd7000621",
    "name": "Stern-Brocot Sequence Part I",
    "approved": true,
    "tags": [
      "Algorithms",
      "Sequences",
      "Arrays",
      "Data Types",
      "Arithmetic",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "59ae3179c21de2d3ba000037",
    "name": "Tap Into Mr. Mxyzinjin's Matrix",
    "approved": true,
    "tags": [
      "Puzzles",
      "Cryptography",
      "Security"
    ]
  },
  {
    "id": "59f6d96d27402f9329000081",
    "name": "Frogificator",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5a05a4d206d5b61ba70000f9",
    "name": "Penalty for speeding",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5a08bb3c80171f4b040000fc",
    "name": "Podcast Speed Listening Calculator ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Strings",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Higher-order Functions",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5a1a00dcba2a14738a000029",
    "name": "Bit Plane Return",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Image Processing",
      "Algorithms",
      "Graphics",
      "Logic",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5a1ebe0d46d843454100004c",
    "name": "Day of the Year",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a26af968882f3523100003d",
    "name": "Simple palindrome game",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5a26ca51e1ce0e987b0000ee",
    "name": "Progressive Spiral Number Branch",
    "approved": true,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Integers",
      "Data Types",
      "Arithmetic"
    ]
  },
  {
    "id": "5a378f28eced70bef80004b3",
    "name": "Large sum",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Integers",
      "Data Types",
      "Strings",
      "Parsing"
    ]
  },
  {
    "id": "5a54dd0d6f46de8ea50005c9",
    "name": "Shorten Me: Array Declaration VI (Months)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5af304892c5061951e0000ce",
    "name": "Bingo!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Games",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5b2a48ab42b27e705a0000ec",
    "name": "BrainFuck Simple Pig Latin",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "6177b4119b69a40034305f14",
    "name": "Game Hit the target - 2nd part",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Graphs",
      "Data Structures",
      "Arrays",
      "Data Types",
      "Strings",
      "Booleans"
    ]
  },
  {
    "id": "617ae2c4e321cd00300a2ec6",
    "name": "Campfire building",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "529cd9c409a361b676000021",
    "name": "Count Decimal Places",
    "approved": true,
    "tags": [
      "Algorithms",
      "Decimals",
      "Data Types",
      "Numbers",
      "Utilities"
    ]
  },
  {
    "id": "52cb0b50c61b330f18000763",
    "name": "Multi Level Sorting",
    "approved": true,
    "tags": [
      "Algorithms",
      "Sorting",
      "Logic"
    ]
  },
  {
    "id": "5369997d56eb45c602000161",
    "name": "Big to Little Endian",
    "approved": true,
    "tags": [
      "Algorithms",
      "Integers",
      "Data Types",
      "Numbers"
    ]
  },
  {
    "id": "53a452dd0064085711001205",
    "name": "Grouping and Counting ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Hashes",
      "Data Structures"
    ]
  },
  {
    "id": "53d8aea2e584dd9e67000ae6",
    "name": "Solving Quadratics",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algebra",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "54249c6bf132dcc661000495",
    "name": "NMEA checksum",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Bits",
      "Binary",
      "Parsing",
      "Logic"
    ]
  },
  {
    "id": "5483b69b48cf540cfc000119",
    "name": "Caesar Cipher Sorting",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "55efee33bd91ae75ac00003c",
    "name": "htmlify my text",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "563924c7fbc768197d000030",
    "name": "So basic",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "56ad7a4978b5162445000056",
    "name": "Mahjong - #1 Pure Hand",
    "approved": true,
    "tags": [
      "Algorithms",
      "Games",
      "Logic"
    ]
  },
  {
    "id": "56dae2913cb6f5d428000f77",
    "name": "Thinking & Testing : Not perfect? Throw away!",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "56e23f98bf8f6e9aed000367",
    "name": "The String Combat",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57075f6d4f2c293f0c0014be",
    "name": "Shortest code: Max Value",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "576a599359b11651bc00040e",
    "name": "Acronym Generator",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "57a125e772292dadcb0005f5",
    "name": "Resultant Moment I",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Algorithms",
      "Logic",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "57bc5e0471f2ff9233000005",
    "name": "Do not loose at tic-tac-toe!",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Basic Language Features",
      "Arrays",
      "Data Types",
      "Logic",
      "Mathematics",
      "Numbers",
      "Control Flow"
    ]
  },
  {
    "id": "57d2767095497ef41c0000c7",
    "name": "Are You a One-Liner? #1:  divide 2,3,5,7",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57f9f20004d82828c10000cd",
    "name": "Where are you from?",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5880e6e59785e5a52b000bd7",
    "name": "Graph Operations, part 1: find neighbours of a vertex",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Graphs",
      "Data Structures",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5897df29fcc4b9c310000030",
    "name": "Simple Fun #92: Digit Difference Sort",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "589b137753a9a4ab5700009a",
    "name": "Sum to infinity of a Geometric Sequence",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Arithmetic",
      "Data Types",
      "Sequences",
      "Arrays"
    ]
  },
  {
    "id": "58a57c6bcebc069d7e0001fe",
    "name": "BasE91 encoding & decoding",
    "approved": true,
    "tags": [
      "Algorithms",
      "Encoding",
      "Logic",
      "Decoding"
    ]
  },
  {
    "id": "58e67378fd2d897b8a000110",
    "name": "Count the Combinations ",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "590938089ff3d186cb00004c",
    "name": "Simple Fun #237: Suffix Sums",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "592a1c156d6c5a56c800001f",
    "name": "Data Types à la Carte [fork]",
    "approved": true,
    "tags": [
      "Puzzles",
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "596b2b9d9e2fbd7811000046",
    "name": "FIXME: Run, Runner!",
    "approved": true,
    "tags": [
      "Bugs"
    ]
  },
  {
    "id": "59831e3575ca6c8aea00003a",
    "name": "Simple Game",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Logic"
    ]
  },
  {
    "id": "59b33fb95227ddcb5f0000d4",
    "name": "Tricky Kotlin #2: three fundamental functions",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lambdas",
      "Functional Programming",
      "Functions",
      "Declarative Programming",
      "Programming Paradigms",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "59b3d479623654e11000006f",
    "name": "Tricky Kotlin #3: define a function",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Basic Language Features"
    ]
  },
  {
    "id": "59cf26be72851ec20b000501",
    "name": "Function Lookup Table Access in C",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Advanced Language Features",
      "Data Types"
    ]
  },
  {
    "id": "59e5f1b77905df91aa000024",
    "name": "C Puzzle: Extract Field from a Double Value",
    "approved": true,
    "tags": [
      "Puzzles",
      "Advanced Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "5a0ec343c374cb6da0000006",
    "name": "Where's my Elements at?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5a6bdb36ba1bb58691000060",
    "name": "Mega Man Boss Order",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Maps",
      "Data Structures",
      "Map/Reduce",
      "Algorithms",
      "Logic",
      "Arithmetic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "5b3e3ca99c9a75a62400016d",
    "name": "Mid-Endian numbers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5b5b12e705f04b3a740000d0",
    "name": "Shorten your speech",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5b9e29dc1d5ed219910000a7",
    "name": "Subcuboids",
    "approved": true,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Games",
      "Performance"
    ]
  },
  {
    "id": "5bcd90808f9726d0f6000091",
    "name": "Simple Fun #396: Find the Longest Substring Consisting of Unique Characters",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types",
      "Fundamentals"
    ]
  },
  {
    "id": "5ca22e6b86eed5002812061e",
    "name": "Find Nearest Fibonacci Number",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5ce55047cb83dc0024cfadc6",
    "name": "Ruby Metaprogramming 101 - Dynamic Method Calls",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Metaprogramming",
      "Programming Paradigms",
      "Advanced Language Features"
    ]
  },
  {
    "id": "5e67ce1b32b02d0028148094",
    "name": "Boolean function truth table",
    "approved": true,
    "tags": [
      "Algorithms",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Binary",
      "Booleans",
      "Data Types",
      "Advanced Language Features"
    ]
  },
  {
    "id": "5ebcfe1b8904f400208e3f0d",
    "name": "Function Addition",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Advanced Language Features",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "601d457ce00e9a002ccb7403",
    "name": "A different kind of 'Lazy' function.",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Closures"
    ]
  },
  {
    "id": "522f421badceba9f8a0000a6",
    "name": "Set - the card game",
    "approved": true,
    "tags": [
      "Algorithms",
      "Sets",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "529b9ec8064ec38636000134",
    "name": "A simple Tic-tac-toe class",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Strategies"
    ]
  },
  {
    "id": "52d43d5515be7cbc92000611",
    "name": "Tree leaves at same level",
    "approved": true,
    "tags": [
      "Algorithms",
      "Trees",
      "Data Structures",
      "Recursion",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "5303229f1f5c12ef39000061",
    "name": "Randomize Objects",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Arithmetic",
      "Mathematics",
      "Numbers",
      "Integers",
      "Programming Paradigms",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5366cfe48d004ce19600104b",
    "name": "Implementing Object.create",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Prototype-based Programming",
      "Prototypes",
      "Classes",
      "Basic Language Features",
      "Objects",
      "Data Types"
    ]
  },
  {
    "id": "540dd371d333dc2730000605",
    "name": "Welcome to the Clamping ! ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "54221c16dda52609b1000ffb",
    "name": "Vowel Alternations",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5556136b7ebc7c786000005e",
    "name": "Simple safecracking",
    "approved": true,
    "tags": [
      "Puzzles",
      "Encryption",
      "Algorithms",
      "Cryptography",
      "Logic",
      "Security"
    ]
  },
  {
    "id": "55c1d76ccc8f89fb2900009b",
    "name": "Playing with cubes III",
    "approved": true,
    "tags": [
      "Refactoring",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Fundamentals",
      "Programming Paradigms",
      "Properties",
      "Validation",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "5649b9f069dacef88400005e",
    "name": "Well efficiency calculator",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "564d9ebde30917684f000048",
    "name": "Parsing and evaluation of mathematical expressions",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Data Structures",
      "Parsing",
      "Strings",
      "Expressions",
      "Basic Language Features",
      "Fundamentals",
      "Operators",
      "Interpreters",
      "Numbers",
      "Data Types",
      "Mathematics"
    ]
  },
  {
    "id": "564e624da64546f72e0000e8",
    "name": "Did someone say cake?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Objects",
      "Data Types"
    ]
  },
  {
    "id": "569792aa413feea7b3000036",
    "name": "Basics 01: Convert any Number (Double) to Fraction",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types",
      "Basic Language Features",
      "Fundamentals",
      "Numbers",
      "Mathematics"
    ]
  },
  {
    "id": "56d877bd97c0e584b2000053",
    "name": "5x5 Tap Code",
    "approved": true,
    "tags": [
      "Algorithms",
      "Cryptography",
      "Security",
      "Logic"
    ]
  },
  {
    "id": "56eccc08b9d9274c300019b9",
    "name": "Thinking & Testing : Report about something",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "56ffd817140fcc0c3900099b",
    "name": "Shortest code: Virus in Apple",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5716afffb436cf11b7001937",
    "name": "Too Big To Sum?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5759513c94aba6a30900094d",
    "name": "Algebraic string",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Parsing",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "579bed0e72292d32c8000084",
    "name": "Split string for Text-to-Speech API",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Performance",
      "split",
      "Haskell Packages",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals"
    ]
  },
  {
    "id": "5800e9b515e97e7cbb00154f",
    "name": "Surface Area and Volume of a Trapezoidal Prism",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Algebra",
      "Geometry"
    ]
  },
  {
    "id": "581f5cf739dc42ac2400007b",
    "name": "Decimal decomposition",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "583353eab189a5b860000049",
    "name": "Lazy Chain",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "584e8bba044a15d3ed00016c",
    "name": "Old Mobile Display",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "58552bdb68b034a1a80001fb",
    "name": "Fast cooking pancakes",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Logic"
    ]
  },
  {
    "id": "5858326b994864753d0000d1",
    "name": "Time Simulation",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "588b7765beb7a6fa19000008",
    "name": "Integers Sum Square",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "589a9aadc4e27877cb000027",
    "name": "Simple Fun #107: Company Bot Strategy",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58aa8b0538cf2eced5000115",
    "name": "Simple Fun #148: Exchange Sort",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "58cf479f87c2e967250000e4",
    "name": "Jungerstein's Math Training Room: 2. How many bugs? ",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "58f5e53e663082f9aa000060",
    "name": "Bijective Binary",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "59392ff00203d9686a0000c6",
    "name": "Guess the array",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Algorithms",
      "Logic",
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "594fcafc0462da3aab0000a1",
    "name": "Arrays, take n  elements",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Iterators",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "595fb7d8de9d34743f000162",
    "name": "Pirate treasure chest codes",
    "approved": true,
    "tags": [
      "Puzzles",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals"
    ]
  },
  {
    "id": "596092e42e8c8b5382000026",
    "name": "Some Fun with Aggregate Operations (Part 2)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "597cfe0a38015079a0000006",
    "name": "Covered pawns",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "599c4b69eb8e49effa000079",
    "name": "ES2015: Get the real length of string.  ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "ES2015",
      "Babel"
    ]
  },
  {
    "id": "59a8782bdbe3b04e740000cd",
    "name": "Weight lifting calculator",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Logic",
      "Numbers",
      "Data Types",
      "Arrays",
      "Arithmetic",
      "Mathematics",
      "Algorithms"
    ]
  },
  {
    "id": "5aaa1aa8fd577723a3000049",
    "name": "Four Pass Transport",
    "approved": true,
    "tags": [
      "Algorithms",
      "Puzzles",
      "Games",
      "Logic"
    ]
  },
  {
    "id": "5b7d72b77a2013975700015c",
    "name": "Splitting Numbers ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5c230f017f74a2e1c300004f",
    "name": "I am all alone (poor me)",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5c2fcbcba305ad2c4a91122d",
    "name": "(A+B)+C=A+(B+C)? Prove it!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5c50a0e8cdc6aa29703f6805",
    "name": "Building a wall with bricks",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Shape Modeling",
      "Graphics",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "6087bb6050a6230049a068f1",
    "name": "Columnize",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Strings",
      "Data Types",
      "Formatting",
      "Logic"
    ]
  },
  {
    "id": "527d0fbbbb2890fbb900081e",
    "name": "Simple image processing (part I): edges, feature growing and shrinking",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Graphs",
      "Data Structures",
      "Image Processing",
      "Algorithms",
      "Graphics",
      "Logic"
    ]
  },
  {
    "id": "529875459ce954d6a800026c",
    "name": "Descriptive selections of data",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "53ce85b149c4ca1cd900002e",
    "name": "Remove duplicate marks entries",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "53e8ab878f9e6658410002af",
    "name": "Create a String for values within a given Range from a Hash",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Sorting",
      "Algorithms",
      "Logic",
      "Mapping",
      "Filtering",
      "Ranges",
      "Basic Language Features"
    ]
  },
  {
    "id": "558298453b0435384e000101",
    "name": "Product of two squares",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "558ccca75f511f2b0d0000f7",
    "name": "Javascript from the Inside  #1 : Map",
    "approved": true,
    "tags": [
      "Algorithms",
      "Maps",
      "Data Structures",
      "Map/Reduce",
      "Logic",
      "Fundamentals",
      "Prototypes"
    ]
  },
  {
    "id": "55df2e52954f1b311a000024",
    "name": "Two variable simultaneous equations",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "563b9941f72effc59d000031",
    "name": "Don't get stressed",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5646ac68901dc5c31a000022",
    "name": "Give The Biggest Prime Factor And The Biggest Divisor Of A Number",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Control Flow",
      "Basic Language Features",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5709aa85fe2d012f1d00169c",
    "name": "SPF Russia",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "57164342794d30e78d000a20",
    "name": "Coding 3min : Series circuit",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5762592d784ead628a0000dd",
    "name": "T.T.T.#5: Only you",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5781265ee6e3d06fd30000fe",
    "name": "Find Transcription Factors",
    "approved": true,
    "tags": [
      "Algorithms",
      "Objects",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "57853f88a1b8d5c4030001de",
    "name": "Reflection #4 - Complete-Invoke",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Types",
      "Programming Paradigms",
      "Advanced Language Features",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Objects",
      "Reflection",
      "Metaprogramming"
    ]
  },
  {
    "id": "57bb798756449dea77000020",
    "name": "Krazy King Blackjack",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Conditional Statements",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Games"
    ]
  },
  {
    "id": "57be87d184972da58e0001e2",
    "name": "T.T.T.49: John and Anne's sweet date",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57d0d4dcc98a52779400000b",
    "name": "I guess this is a 7kyu kata #1: Search result",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57da675dfa96908b16000040",
    "name": "Maybe - concat 2 maybe's",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57ecdd3d2559761b60000403",
    "name": "SafeSqrt",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "57f59da8d3978bb31f000152",
    "name": "Make Me Slow",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5809cbc9c47d322fbc0001ec",
    "name": "Report total allocated memory",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Memory"
    ]
  },
  {
    "id": "58281843cea5349c9f000110",
    "name": "Complete the triangle pattern",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5830195755f28edad4000081",
    "name": "Get row from alphabetical sequence",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Chars"
    ]
  },
  {
    "id": "584c692db32364474000000a",
    "name": "Simple Sum (with restrictions)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "586dd5f4a44cfc48bb000011",
    "name": "Spaghetti Code - #2 Hard",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5883a3e547abc50eb60000bd",
    "name": "Matching Plates",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Chars",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "588475d575431d0a0e000023",
    "name": "Simple Fun #19: Count Black Cells",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58b22dc7a5d5def60300002a",
    "name": "Rectangle into Rectangles",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Geometry",
      "Algebra",
      "Mathematics"
    ]
  },
  {
    "id": "58bfb56c5e287b3fca000101",
    "name": "One Line Task: nth Row Sum",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58ca951592ce34cff500000e",
    "name": "Reflection in PHP #3 - Using Reflection on Classes",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Reflection",
      "Metaprogramming",
      "Programming Paradigms",
      "Advanced Language Features",
      "Object-oriented Programming"
    ]
  },
  {
    "id": "58df2d65808fbcdfc800004a",
    "name": "Protein Synthesis: From DNA to Polypeptide",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58e4f4ab020336dc4500093c",
    "name": "Missing Angle Pt. 2",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "58ee4db3e479611e6f000086",
    "name": "Odd March  Bits 8 bits",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Bits",
      "Binary",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "590148d79097384be600001e",
    "name": "Simple Fun #217: Sort By Guide",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59040fdae1bfd334ca00007a",
    "name": "#6 Matrices:  How Many Matrices Do These Elements Produce?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Permutations",
      "Algorithms",
      "Logic",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "59623e9450091000150000d2",
    "name": "Some Fun with Aggregate Operations (Part 4)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5963cb8dbf0604be69000072",
    "name": "Watching your pennies",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "596c26187bd547f3a6000050",
    "name": "Simple Fun #342: Buy Newspaper",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "596e64188c92ceca7d00004f",
    "name": "Why So Serious?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Puzzles",
      "Games",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "597f11f61fe82a80c200002c",
    "name": "Brace expansion",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Logic"
    ]
  },
  {
    "id": "5a329fc9b6cfd7e8320000c9",
    "name": "Format data value",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Numbers",
      "Basic Language Features"
    ]
  },
  {
    "id": "5a62e568e626c512fd000007",
    "name": "HelloWorld Smart Contract!",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5af27e3ed2ee278c2c0000e2",
    "name": "pipi Numbers!",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Performance"
    ]
  },
  {
    "id": "5b36137991c74600f200001b",
    "name": "Kill The Monsters!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Strings"
    ]
  },
  {
    "id": "5d2f93da71baf7000fe9f096",
    "name": "Area of House from Path of Mouse",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5f79b90c5acfd3003364a337",
    "name": "Last non-zero digit of factorial",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "60c8bfa19547e80045184000",
    "name": "Infinite Length  Binary Code",
    "approved": true,
    "tags": [
      "Puzzles",
      "Binary",
      "Decoding",
      "Algorithms",
      "Logic",
      "Games",
      "Fundamentals"
    ]
  },
  {
    "id": "5260074c9a0022f83e0009da",
    "name": "Rational Arithmetic",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arithmetic",
      "Mathematics",
      "Logic",
      "Numbers",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "52c0279f3b64f6f52700029a",
    "name": "Relational expressions",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Expressions",
      "Basic Language Features",
      "Fundamentals",
      "Operators"
    ]
  },
  {
    "id": "52ef1c60a863b919ef00025f",
    "name": "Poker cards reducer",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Encoding",
      "Decoding"
    ]
  },
  {
    "id": "52f4395595d6bf4ad800326e",
    "name": "List Comprehensions",
    "approved": true,
    "tags": [
      "Algorithms",
      "Parsing",
      "Logic",
      "Strings",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "535af8764f1eff8fb300079d",
    "name": "Five Number Summary",
    "approved": true,
    "tags": [
      "Algorithms",
      "Statistics",
      "Data",
      "Logic"
    ]
  },
  {
    "id": "538865ef0b24c5ce6a00070d",
    "name": "intToBits(int, length)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Integers",
      "Data Types",
      "Numbers",
      "Bits",
      "Binary"
    ]
  },
  {
    "id": "5424901f48306f746b001fda",
    "name": "Wait on All Threads",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "553291f451ab4fbcdc0001c6",
    "name": "Fixed-length integer partitions",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5579906f2f0c0d0766000127",
    "name": "Holiday Array Repair",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Numbers",
      "Integers"
    ]
  },
  {
    "id": "55ef57064cb8418a3f000061",
    "name": "Numbers with The Highest Amount of Divisors",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Data Structures",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "55f4ad47ada1dd22f1000088",
    "name": "Simple  Barcode Scanner",
    "approved": true,
    "tags": [
      "Algorithms",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings"
    ]
  },
  {
    "id": "56562ee9ae8369e9a6000089",
    "name": "Print Fixed Size Two Dimensional Table",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "56a194c4bd5032751e000029",
    "name": "Is a Prime?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "56caf4a1145912a5c4000b76",
    "name": "Kata Impossible I - The Impossible Lottery",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5703ace6e55d30d3e0001029",
    "name": "Coding 3min : Tidy up the room",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "575951d3961a030cb1000841",
    "name": "Building a mini search engine",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Search",
      "Algorithms",
      "Logic",
      "Data Types"
    ]
  },
  {
    "id": "579ef9607cb1f38113000100",
    "name": "Operation Transformation",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Optimization"
    ]
  },
  {
    "id": "57aa91aebb9944621800017c",
    "name": "T.T.T.26: How many students have finished all the homework",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57d83dfc950d842dcb00005b",
    "name": "Concatenate sequential page numbers in an array",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "57deba2e8a8b8db0a4000ad6",
    "name": "Helpers For a 3DGame I: Biggest Triangle in a Sphere",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Algorithms",
      "Logic",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Optimization",
      "Declarative Programming",
      "Programming Paradigms",
      "Strings",
      "Geometry",
      "Algebra",
      "Games"
    ]
  },
  {
    "id": "57e45ce6a20449368f000092",
    "name": "Dumb News: The Truth About CW Leaderboard !",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57e8ff073d1cb559280005de",
    "name": "Holiday IV - Leg Room",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Booleans",
      "Data Types",
      "Strings",
      "Numbers",
      "Arrays"
    ]
  },
  {
    "id": "57fa3a33e8c829780a0001d2",
    "name": "Berserk rater: CG Vs. Clang",
    "approved": true,
    "tags": [
      "Algorithms",
      "Map/Reduce",
      "Logic"
    ]
  },
  {
    "id": "5806dc10a4647e6493000152",
    "name": "From..To..Series #2: from arr1 to arr2. Find the most same sum value of pairs",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5808ce703e55743db7000d92",
    "name": "Extract the contents of a given tag from the HTML document",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Data Structures",
      "Arrays",
      "Optimization"
    ]
  },
  {
    "id": "5817c0148e74302c4800039c",
    "name": "Speech to Text - String Manipulation",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "582949352c5d0a3dee000092",
    "name": "Quine",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "585a8bd717cc9027e3000274",
    "name": "Shortest list, lazily",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "587c0d396d360f3cc600003f",
    "name": "Euler method for numerical integration",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "588833be1418face580000d8",
    "name": "Simple Fun #44: Three Split",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Performance"
    ]
  },
  {
    "id": "5889902f53ad4a227100003f",
    "name": "Simple Fun #54: Strings Crossover",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58a7394c934f82ed6b0000c0",
    "name": "Swap  pairs in Array",
    "approved": true,
    "tags": [
      "Bugs"
    ]
  },
  {
    "id": "58ca7afc92ce34dfa50001fa",
    "name": "Geohashing",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "58dfc0d8ca6895cb4e00005c",
    "name": "No one likes carrying change.",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Games"
    ]
  },
  {
    "id": "58e00b093dbe9ae79a00019e",
    "name": "Stock Position Size Calculator",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "58f85908bc60c645d5000095",
    "name": "One Line Task: Count Down II",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58fa9898dfec0ef150000014",
    "name": "Dude, my computer cannot count!",
    "approved": true,
    "tags": [
      "Bugs",
      "Concurrency",
      "Computational Science",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "590572de63bfadf5d4000027",
    "name": "#7 Matrices: Focused on the Contour",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Declarative Programming",
      "Programming Paradigms",
      "Graphs",
      "Data Structures",
      "Algorithms",
      "Logic",
      "Control Flow",
      "Basic Language Features",
      "Numbers",
      "Data Types",
      "Optimization"
    ]
  },
  {
    "id": "5939b753942a2700860000df",
    "name": "The Mysterious Wall",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Design Patterns",
      "Design Principles"
    ]
  },
  {
    "id": "59686005664610557c0000d6",
    "name": "There are two kinds of people",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "596cf5b0e1665a2d02000007",
    "name": "Merged Objects.",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Objects",
      "Data Types"
    ]
  },
  {
    "id": "59873d50c54a075e67000038",
    "name": "Triangles from Dots",
    "approved": true,
    "tags": [
      "Algorithms",
      "Sequences",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "599c7f81ca4fa35314000140",
    "name": "n-back",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a003c8c06d5b6bb2a0000b8",
    "name": "Longest Word in Dictionary",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Logic",
      "Data Structures"
    ]
  },
  {
    "id": "5a274c9fc5e284a9f7000072",
    "name": "Simple Fun #387: Lonely Frog IV",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a2cf46955519e757c000070",
    "name": "Can You OOP in C? - Polymorphism",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5a350d5f1f7f706b59000002",
    "name": "The common directory path",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Basic Language Features"
    ]
  },
  {
    "id": "5a54d97dc9314252510008eb",
    "name": "Shorten Me: Array Declaration V (Weekday & Weekend)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5a6986abe626c5d3e9000063",
    "name": "Posix command",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a79c9beb17101c1e8000141",
    "name": "Treebeard #Determine Tree Age",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Recursion",
      "Algorithms",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5a8bd383fd8c0664190000b6",
    "name": "Implementing a Queue - Performance Version",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Queues",
      "Arrays",
      "Data Types",
      "Data Structures"
    ]
  },
  {
    "id": "5a905291fd57772be0000039",
    "name": "One line task: Multiples of 3 and 5",
    "approved": true,
    "tags": [
      "Puzzles",
      "Optimization",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Games",
      "Refactoring"
    ]
  },
  {
    "id": "5b4f8e02578c6aae9700008b",
    "name": "Round To Nearest",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Arrays",
      "Fundamentals"
    ]
  },
  {
    "id": "5bc7bb444be9774f100000c3",
    "name": "Versions manager",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "5c45bef3b6adcb0001d3cc5f",
    "name": "LCM Cardinality",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5c466083a4db1e0f49ddcb30",
    "name": "Replace Noun Phrases with Pronouns",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Dictionary",
      "Data Structures"
    ]
  },
  {
    "id": "5d7091aa7bf8d0001200c133",
    "name": "Seven Segment Display",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Numbers"
    ]
  },
  {
    "id": "5df754981f177f0032259090",
    "name": "A floating-point system",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5e958a9bbb01ec000f3c75d8",
    "name": "Hill Cipher: Encryption",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Cryptography",
      "Security",
      "Graphs",
      "Data Structures",
      "Encryption",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5eaf798e739e39001218a2f4",
    "name": "Family Relations",
    "approved": true,
    "tags": [
      "Algorithms",
      "Trees",
      "Data Structures",
      "Search",
      "Logic"
    ]
  },
  {
    "id": "5fc907f91853c00018787c73",
    "name": "Shopping Calculation",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "60490a215465720017ab58fa",
    "name": "Gangs",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "6171a85207ab6b003fadc43e",
    "name": "Kingdoms  Ep4: The Dancing Witch",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Basic Language Features"
    ]
  },
  {
    "id": "5303b2d6af7e3b414300056d",
    "name": "Clone-a-Regex",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Object-oriented Programming"
    ]
  },
  {
    "id": "53c2a84a1dfa43a7e40005ba",
    "name": "Lock and Key",
    "approved": true,
    "tags": [
      "Algorithms",
      "Security"
    ]
  },
  {
    "id": "5413819730b07c4c6b000067",
    "name": "Product Groups",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5416f1b54c24607e4c00069f",
    "name": "Cycle Detection: Floyd's The  Tortoise and the The Hare",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "543adc5dc921a46f3e000029",
    "name": "Daggerlang",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Interpreters",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "544e5d75908f2d5eb700052b",
    "name": "Breaking the Vigenère Cipher",
    "approved": true,
    "tags": [
      "Algorithms",
      "Ciphers",
      "Cryptography",
      "Logic",
      "Security"
    ]
  },
  {
    "id": "54eee76e7f9142f0cd001270",
    "name": "Missing and Duplicate Number",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Integers",
      "Arrays",
      "Logic"
    ]
  },
  {
    "id": "551886d9fd24d8f9e20001fa",
    "name": "Finding Neo (NC-17)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic",
      "Performance"
    ]
  },
  {
    "id": "551e949bbf4e52c106000aed",
    "name": "Programmed mapper",
    "approved": true,
    "tags": [
      "Algorithms",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "552679ea44a9e400b600124f",
    "name": "Nth Root of a Number Redux",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "55722d67355421ab510001ac",
    "name": "Loose Change (Part 2)",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5589d3fa7e8b653faf0000cc",
    "name": "Recovering from a Disk Crash - Reverse Engineering Some Lost Code!",
    "approved": true,
    "tags": [
      "Puzzles",
      "Reverse Engineering",
      "Security"
    ]
  },
  {
    "id": "55988922d24a02ccd0000063",
    "name": "Write your own multiplication function",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "55cb8b5ddd6a67fef7000070",
    "name": "Fuel usage reporting",
    "approved": true,
    "tags": [
      "Puzzles",
      "Fundamentals",
      "Games"
    ]
  },
  {
    "id": "55fde83eeccc08d87d0000af",
    "name": "What’s the degree?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Arithmetic",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5620281f0eeee479cd000020",
    "name": "The Union Jack",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Conditional Statements",
      "Control Flow",
      "Basic Language Features",
      "Puzzles",
      "Games",
      "Loops",
      "Numbers"
    ]
  },
  {
    "id": "562c94ed7549014148000069",
    "name": "Integer Right Triangles",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "56a2d27f8af7384815000037",
    "name": "Concatenate two list",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "56fa24b10ba33be7d4000315",
    "name": "Shortest code: Give me the equation",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "571654c3347e6533fa00186b",
    "name": "Coding 3min : Parallel circuit",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "571a8920b29485b065000582",
    "name": "The U-n-KNOWN but known variables: Multiplication",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5727500a20c7f837fc001869",
    "name": "Area of an n-sided polygon",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "577fd3b89fb2a5f5d2000017",
    "name": "Nextel phone number validator",
    "approved": true,
    "tags": [
      "Puzzles",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings",
      "Data Types",
      "Validation",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5790bd38671cb57f7900012f",
    "name": "Event & Delegate",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Design Principles",
      "Design Patterns",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "57b971f68f58135e840001cc",
    "name": "n times 2 to the power of x without function or class method and return",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "57d93721bfcdc5c92600014e",
    "name": "PHP Functions - Return Type Declarations",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "580479d7357636a9ff000085",
    "name": "Strings: string left strip",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5830e55fa317216de000001b",
    "name": "How many elephants can the spider web hold?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Games"
    ]
  },
  {
    "id": "584a6d9d7d22f8fa09000094",
    "name": "Total Sums of Coefficients of a Binomial Raised to the Nth-Power",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Algorithms",
      "Logic",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Optimization",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "584ed874bbf24eb9490001e5",
    "name": "Christmas mission: Distribute gifts #1",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58520e8edeb17c711c00019b",
    "name": "Christmas mission: Programmer's Christmas #1",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "587387d169b6fddc16000002",
    "name": "Splitting the Workload (part I)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5889f08eb71a7dcee600006c",
    "name": "Simple Fun #58: Volleyball Positions",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "589809f0fcc4b92ea200033a",
    "name": "Simple Fun #97: Video Part",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58a4f7f43d97b56d27000022",
    "name": "Reverse Odd Count",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58bf8041aa4014a09e000013",
    "name": "Areas of Voronoi cells",
    "approved": true,
    "tags": [
      "Algorithms",
      "Graphs",
      "Data Structures",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "590a7f2be8e86e1240000068",
    "name": "Simple Fun #241: Strange Code",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "591120432e6009420b00002d",
    "name": "Simple Fun #256: Two Arrays Nth Element",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5943db60800cebe12000003d",
    "name": "Throw without throwing",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "599a6aaf1924716c3000003f",
    "name": "ES2015: Build an object which can't be modified",
    "approved": true,
    "tags": [
      "Fundamentals",
      "ES2015",
      "Babel"
    ]
  },
  {
    "id": "5a0b6ded697598aac80001d6",
    "name": "Peel the Pairs",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "5a27e3438882f334a10000e3",
    "name": "Progressive Spiral Number Distance",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Integers",
      "Data Types",
      "Arithmetic"
    ]
  },
  {
    "id": "5a39d21cb6cfd70767000086",
    "name": "Cut it Clean",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a511db1b3bfa8f45b000098",
    "name": "Infected Zeroes",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a97ee0a373c2ec6ee0000fb",
    "name": "BrainGolf: Clear Cells",
    "approved": true,
    "tags": [
      "Puzzles",
      "Optimization"
    ]
  },
  {
    "id": "5af43416882143534300142c",
    "name": "We've crashed on a distance planet in our galaxy! When do leap years occur here?",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5b165654c8be0d17f40000a3",
    "name": "Simple number divisibility",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5b360fcc9212cb0cf300001f",
    "name": "Hex to base64",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Encoding",
      "Logic"
    ]
  },
  {
    "id": "5b64173e7dae89b7510000e5",
    "name": "Valid Curly Braces (Code Golf)",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5b6711e86d0db7519a000112",
    "name": "Parentheses are loud !",
    "approved": true,
    "tags": [
      "Puzzles",
      "Tips & Tricks",
      "Logic",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "5c2dbc63bfc6ec0001d2fcf9",
    "name": "One Line Task: Element-wise Maximum",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5ca6c0a2783dec001da025ee",
    "name": "Blocks in an Irregular Pyramid",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5fc85f4d682ff3000e1c4305",
    "name": "Chess - Pin with Rook",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5ff2093d375dca00170057bc",
    "name": "Dice Rotation",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "614adaedbfd3cf00076d47de",
    "name": "Matrix Expansion",
    "approved": true,
    "tags": [
      "Puzzles",
      "Algebra",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "61b09ce998fa63004dd1b0b4",
    "name": "Runescape Mining Simulator",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "529f5e262281a70d9b00088a",
    "name": "Arithmetic Expressions Evaluator",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arithmetic",
      "Mathematics",
      "Logic",
      "Numbers",
      "Expressions",
      "Basic Language Features",
      "Fundamentals",
      "Operators"
    ]
  },
  {
    "id": "540a3be27eecdfc17f000cbd",
    "name": "AttrLazy - Lazy values made simple",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Metaprogramming",
      "Programming Paradigms",
      "Advanced Language Features"
    ]
  },
  {
    "id": "5424e78460d77749f2000279",
    "name": "Go so far around to the right that you end up left",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "549013f6f71e7786aa0002a8",
    "name": "Magic Zeckendorf",
    "approved": true,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "552fd698ac49561baf00006e",
    "name": "Breaking into words",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "55aeee88ecebc5c9230000a0",
    "name": "Iterator Basics",
    "approved": true,
    "tags": [
      "Fundamentals",
      "ES2015",
      "Babel",
      "Iterators",
      "Control Flow",
      "Object-oriented Programming",
      "Basic Language Features",
      "Programming Paradigms",
      "Advanced Language Features"
    ]
  },
  {
    "id": "55afe435d2ce100356000032",
    "name": "Javascript from the Inside #2: Filter",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic",
      "Prototypes"
    ]
  },
  {
    "id": "55b1362c7aa17c83800000a5",
    "name": "How Many Zeroes?",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "567cd7da4b9255b96b000022",
    "name": "Squarefree Part of a Number",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Arithmetic"
    ]
  },
  {
    "id": "5681e4ff81ba1b0cdb000031",
    "name": "Check a Curious Divisibility. (Brute force version)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Functions"
    ]
  },
  {
    "id": "56d4eebedf52109fd90019ca",
    "name": "Crazy programmer 02: Insert advertising code",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5701bdd564730378ac000b88",
    "name": "SpeedCode #4 × Factory Functions #3 - Artefacts",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "570ef4d6127ad17515000b87",
    "name": "Tails of the High Seas",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Objects",
      "Data Types",
      "Properties",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "573b79da301a2d48060001f7",
    "name": "Regex Match Generator: Alternation",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "576cd0e17fdf4645810000bb",
    "name": "Performance #1 - String-Addition - Need High Speed",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57722700c37fc4cc99000033",
    "name": "Reflection #3  - Add the member-results",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Advanced Language Features",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Objects",
      "Data Types",
      "Reflection",
      "Metaprogramming"
    ]
  },
  {
    "id": "57a4395ce298a72d71000306",
    "name": "T.T.T.20: Make a matrix",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57b4d2dad2a31c75f7000223",
    "name": "Optimized Pathfinding Algorithm",
    "approved": true,
    "tags": [
      "Algorithms",
      "Games",
      "Logic",
      "Puzzles"
    ]
  },
  {
    "id": "57dc0ffed8f92982af0000f6",
    "name": "AD2070: Help Lorimar troubleshoot his robots-Search and Disable",
    "approved": true,
    "tags": [
      "Algorithms",
      "Data Structures",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "58108b147d48fc36ba0000aa",
    "name": "True Addition",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Booleans"
    ]
  },
  {
    "id": "582b3b085ad95285c4000013",
    "name": "Calculate the expression",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5832514f64a4cecd1c000013",
    "name": "Chess piece values",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5835b48cd8bab5d6de00001c",
    "name": "Dont drive too long!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "58402cdc5225619d0c0000cb",
    "name": "I am very very very....",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5871e811aa042898160003ce",
    "name": "Write a Code-Golf Scoring Function",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "58957c5041c979cf9e00002f",
    "name": "Simple Fun #89: Boxes Packing",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58bf79fdc8bd4432d6000029",
    "name": "Simple Fun #188: Slogans",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58cc0705bd22e324b3000028",
    "name": "Find unique in array by properties keys in another array",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "58dace86b809ca6c62000ccf",
    "name": "Two numbers in an array adding up to a given number",
    "approved": true,
    "tags": [
      "Algorithms",
      "Optimization"
    ]
  },
  {
    "id": "58f301633f5066830c000092",
    "name": "Following the Paths of Numbers Through Prime Factorization",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Control Flow",
      "Basic Language Features",
      "Data Structures",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "590ba2baf06c49595f0000a0",
    "name": "Computing the complex logarithm function",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "591305520c6f9f5c93000052",
    "name": "Learning TypeScript. Classes & Interfaces. Implement interface methods",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "595db7e4c1b631ede30004c4",
    "name": "Largest rectangle in background",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59b1314d44a4b7b93b000073",
    "name": "Find most frequent element in a list",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59cfe5b023daccfd07000048",
    "name": "Number of Folds",
    "approved": true,
    "tags": [
      "Puzzles",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5a15ffaa32b8b9271d000057",
    "name": "My Aunt Sally",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5a35f08b9e5f4923790010dc",
    "name": "Looper",
    "approved": true,
    "tags": [
      "Puzzles",
      "Numbers",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Advanced Language Features",
      "numpy",
      "Python Packages"
    ]
  },
  {
    "id": "5ac69d572f317bdfc3000124",
    "name": "Pandigital Sequence",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Optimization",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5b602842146a2862d9000085",
    "name": "We are Family",
    "approved": true,
    "tags": [
      "Algorithms",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "5bc64f48eba26e79df000031",
    "name": "Custom Licence Plate",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5ecc16daa200d2000165c5b1",
    "name": "Increment with iterations",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Logic"
    ]
  },
  {
    "id": "5f88a18855c6c100283b3773",
    "name": "Four Color Theorem (Easy Version)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "52d629bb5feccfd4c100022d",
    "name": "A Taste of Curry",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Utilities"
    ]
  },
  {
    "id": "53138a5dbb244a40680000a3",
    "name": "Sorted list",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types",
      "Performance",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Fundamentals",
      "Programming Paradigms"
    ]
  },
  {
    "id": "539924a253f510c2e5001645",
    "name": "Dynamic instance variables & attributes",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Metaprogramming",
      "Programming Paradigms",
      "Advanced Language Features"
    ]
  },
  {
    "id": "543cb1d8f6b726292d0000d7",
    "name": "Interpolation Phalanx",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Interpreters",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5558bb17f7ba7532de0000aa",
    "name": "Department scheduler [simple]",
    "approved": true,
    "tags": [
      "Algorithms",
      "Scheduling",
      "Logic"
    ]
  },
  {
    "id": "559ecfd712d412121000001d",
    "name": "Grouping Consecutive Numbers",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "55eec0ee00ae4a8fa0000075",
    "name": "Permutational Primes ",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Sorting",
      "Search",
      "Permutations",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Memoization",
      "Design Patterns",
      "Design Principles",
      "Data Structures"
    ]
  },
  {
    "id": "562b099becfe844f3800000a",
    "name": "Ratio of Bouncy Numbers",
    "approved": true,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Games"
    ]
  },
  {
    "id": "56390ac2815fb1222a000070",
    "name": "Generating Generators - Generators #3",
    "approved": true,
    "tags": [
      "Fundamentals",
      "ES2015",
      "Babel"
    ]
  },
  {
    "id": "569f6ad962ff1dd52f00000d",
    "name": "Selecting  Quotients From an Array",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Algorithms",
      "Logic",
      "Control Flow",
      "Basic Language Features",
      "Sorting",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Optimization",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "56db19703cb6f5ec3e001393",
    "name": "Thinking & Testing : Welcome to take the bus",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "56fe9dbb69510b2ff8000fb3",
    "name": "SpeedCode #1 - Getters and Setters in Object Literals",
    "approved": true,
    "tags": [
      "Puzzles",
      "Objects",
      "Data Types"
    ]
  },
  {
    "id": "57048c1275263af10b00063e",
    "name": "Endless String",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "574d0b01b4b769b207000ca3",
    "name": "Priori Incantatem",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Metaprogramming",
      "Advanced Language Features",
      "Reflection"
    ]
  },
  {
    "id": "57630df805fea67b290009a3",
    "name": "Permutation  position",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57a09ca2e298a75f3300013d",
    "name": "First Class Factorial Function",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "57cb12aa40e3020bb4001d2e",
    "name": "Personalized brand list",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "57f171f618e9fa58ef000083",
    "name": "ADFGX Simplified",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Cryptography",
      "Security",
      "Encryption",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "57fe7ea808d102a2ba000edd",
    "name": "Pluralization",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5814d0efad98ccb8d100012f",
    "name": "Are the values equal?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Objects",
      "Data Types",
      "Booleans",
      "Arrays",
      "Strings"
    ]
  },
  {
    "id": "5828b9455421a4a4e8000007",
    "name": "Find All the Possible Numbers Multiple of 3 with the Digits of a Positive Integer.",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Algorithms",
      "Logic",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Optimization",
      "Declarative Programming",
      "Programming Paradigms",
      "Strings",
      "Permutations"
    ]
  },
  {
    "id": "582da6ba06e37f9b75000510",
    "name": "Like itertools : combinations",
    "approved": true,
    "tags": [
      "Algorithms",
      "Iterators",
      "Control Flow",
      "Object-oriented Programming",
      "Basic Language Features",
      "Fundamentals",
      "Programming Paradigms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "58458bc2f2d1e772f0000063",
    "name": "Pretty Time Formatter",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types",
      "Formatting",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "587b2ddb87264729e6000128",
    "name": "Minesweeper",
    "approved": true,
    "tags": [
      "Puzzles",
      "Algorithms",
      "Logic",
      "Games"
    ]
  },
  {
    "id": "589896b99c70093f3e00005b",
    "name": "Sixteen circles",
    "approved": true,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "59315ad28f0ebeebee000159",
    "name": "Top Down Movement System",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Logic",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "5937782609515c4ac300001d",
    "name": "Triangle Line Task: Fizz Buzz",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "593e8d839335005b42000097",
    "name": "Group prime numbers",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "595467c63074e38ba4000063",
    "name": "Simple Fun #333: Incomplete Virus",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "596a690510ffee5c0b00006a",
    "name": "D&D Character generator #1: attribute modifiers and spells",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59767719c74de3b2d100002c",
    "name": "YaCG:  #1  Yet another Card Kata !",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Games",
      "Arrays",
      "Data Types",
      "Sorting",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "598ab728062fc49a22000410",
    "name": "Pattern Generator",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59ac15a0570190481d000049",
    "name": "Rotten Oranges",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59ca6fda23dacca1e300003e",
    "name": "Cartesian product",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Sets",
      "Arrays",
      "Data Types",
      "Set Theory",
      "Mathematical Logic"
    ]
  },
  {
    "id": "59f3f88c25d57513d600014f",
    "name": "Variable Number of Arguments in C, without \"va\"",
    "approved": true,
    "tags": [
      "Puzzles",
      "Security",
      "Compiler Theory",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59fefb39c374cbd056000052",
    "name": "Lua is easy: Lesson 3 - Numbers",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a08f48fba2a1435e30000d7",
    "name": "O's and X's adjudicator",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a0b179f80171f77af0000e4",
    "name": "Scan the Skies",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Data Structures"
    ]
  },
  {
    "id": "5a139df8ba2a14e041000055",
    "name": "Simple Fun #380: Find d = a + b + c",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic",
      "Arrays",
      "Data Types",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "5a2b86ce1f7f7052b800006d",
    "name": "Can You OOP in C? - Information Hiding",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5a62173ee626c5f0e40000e9",
    "name": "Balanced Braces (with non-brace characters)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Stacks",
      "Arrays",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5a68ffe3e626c5e85700002d",
    "name": "There was an Old Lady who Swallowed a Fly",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5a9dbc735ee396ef590001de",
    "name": "23 Matches. Or more...",
    "approved": true,
    "tags": [
      "Algorithms",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5aa1ca484a6b34f9a000011e",
    "name": "Object depth",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Types"
    ]
  },
  {
    "id": "5ace908a4d9fd1ed74000099",
    "name": "Bitty Words",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5ad927c932d79e34fb000091",
    "name": "Memory Reallocation",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5aeed69804a92621a7000077",
    "name": "N smallest elements in original order (performance edition)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types",
      "Performance"
    ]
  },
  {
    "id": "5b1d38f4d74b5b07350000a3",
    "name": "Russian plurals",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Strings",
      "Conditional Statements",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5b49cc5a578c6ab6b200004c",
    "name": "SNAP",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Recursion",
      "Algorithms",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science",
      "Arrays",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5b5ce2176d0db7331f0000c0",
    "name": "Grazing Donkey",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Performance"
    ]
  },
  {
    "id": "5c6d80d7ff00de2dcc4d4188",
    "name": "Diagonal Strings",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5cc2cd9628b4200020880248",
    "name": "Reducing a pyramid",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Performance"
    ]
  },
  {
    "id": "5e65916b4696e500134987e1",
    "name": "No musical :(",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "60e238105b0327001434dfd8",
    "name": "Maximum Middle",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "61a87854b4ae0b000fe4f36b",
    "name": "Format the playlist",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Formatting",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "61efc02e4fd88600343b5c58",
    "name": "What is the flag?",
    "approved": true,
    "tags": [
      "Puzzles",
      "Fundamentals",
      "Games",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5252f11b401ddbf7090006c4",
    "name": "Star Catalog Matching",
    "approved": true,
    "tags": [
      "Algorithms",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Logic"
    ]
  },
  {
    "id": "528aa29bd8a0399fc5000cae",
    "name": "The \"CROTCH KICK OR BLOCK\" kata",
    "approved": true,
    "tags": [
      "Algorithms",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "52de672aa5bde77f360003bf",
    "name": "The good old olden early years",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types",
      "Utilities"
    ]
  },
  {
    "id": "53072ed3f36d6211250002ad",
    "name": "Recursive countdown",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Fundamentals",
      "Programming Paradigms",
      "Numbers",
      "Data Types",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Functional Programming",
      "Declarative Programming"
    ]
  },
  {
    "id": "53b5e7d59c1553a0b40007f3",
    "name": "Sherlock on numbers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Integers",
      "Arrays"
    ]
  },
  {
    "id": "53c92d34689f84a2d5000e48",
    "name": "Carmichael function",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5496033fbecf8ad838000336",
    "name": "Length of longest subsequence of same incrementing values",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "54fa3fe80609866d77001094",
    "name": "Give me DST !!!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "55041210decf057109000277",
    "name": "Mystery function #2",
    "approved": true,
    "tags": [
      "Puzzles",
      "Hashes",
      "Data Structures",
      "Algorithms",
      "Logic",
      "Games",
      "Security",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Integers",
      "Bits",
      "Binary"
    ]
  },
  {
    "id": "553020d96b2a8d98ff0001a5",
    "name": "Function Coercion Errors",
    "approved": true,
    "tags": [
      "Bugs"
    ]
  },
  {
    "id": "557053e47a652a6060000064",
    "name": "Age from DOB",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types",
      "Interfaces",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "557f138eb472f5caa7000062",
    "name": "Minimum Number of Coins",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Parsing",
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "55807f415ff687ecac00005f",
    "name": "Rudimentary Pivot Table",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "56242a31689c352359000044",
    "name": "Deep Assignment",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "56407edf50bcc8f01d000023",
    "name": "CollectionAssert Test",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Interfaces",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Inheritance",
      "Polymorphism"
    ]
  },
  {
    "id": "56500545242a05dc64000013",
    "name": "Angle-a-trons and Phyllotaxy",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5683838837b2d1db32000021",
    "name": "Something similar to RokuLiuYeoseot- Nacci",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Functions",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "5692bb72a810dd0ec9000026",
    "name": "RuplesJS #5: Range",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Objects",
      "Data Types"
    ]
  },
  {
    "id": "569df0bc5565b243d500002b",
    "name": "Find a Very Special Set Of Numbers In a Certain Range",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Types",
      "Functions"
    ]
  },
  {
    "id": "56f167455b913928a8000c49",
    "name": "Thinking & Testing : Hail and Waterfall",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "56fe9d579b7bb6b027000001",
    "name": "Coding 3min: Collatz Array(Split or merge)",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57033601e55d30d3e0000633",
    "name": "Coding 3min : Balance Attraction",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5708ccb0fe2d01677c000565",
    "name": "Mean, Variance and Standard Deviation of a  Probability Distribution for Discrete Variables.",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Algorithms",
      "Logic",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Declarative Programming",
      "Programming Paradigms",
      "Strings",
      "Statistics",
      "Data"
    ]
  },
  {
    "id": "57091b473f1008c03f001a2a",
    "name": "#02 - Music Theory - Validate rhythm",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Logic",
      "Mathematics",
      "Algorithms",
      "Numbers"
    ]
  },
  {
    "id": "5716a4c2794d305f4900156b",
    "name": "Find the Partition with Maximum Product Value",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Algorithms",
      "Logic",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Optimization",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "575eac1f484486d4600000b2",
    "name": "Statistics in Kata 1: OR case - Unfair dice",
    "approved": true,
    "tags": [
      "Puzzles",
      "Statistics",
      "Algorithms",
      "Data",
      "Logic"
    ]
  },
  {
    "id": "57a19defbb994481c40001bd",
    "name": "Number factors",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57a1e23853ba339caf001000",
    "name": "Uppercase all vowels",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "581f9a387a3a635dfc000128",
    "name": "Bicycle gear inch calculator",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Numbers"
    ]
  },
  {
    "id": "582b87012d44a4b260001f40",
    "name": "String tree-ification",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Recursion",
      "Algorithms",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "583a47342fb0ba1418000060",
    "name": "Imaginary Base Conversion",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "586eca3b35396db82e000481",
    "name": "Get Euchre Score",
    "approved": true,
    "tags": [
      "Algorithms",
      "Games",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "58b8e48a4dda07e85f00013a",
    "name": "Challenge Fun #18: Freak Contaz Sequence",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58c1446b61aefc34620000aa",
    "name": "How many eggs? ",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "58d4785a2285e7795c00013b",
    "name": "Two's Complement",
    "approved": true,
    "tags": [
      "Puzzles",
      "Binary"
    ]
  },
  {
    "id": "5902fbd2378a92a990000083",
    "name": "Simple Fun #225: Closest Neighbor",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "596ffcb0883f3dda02000021",
    "name": "BF basics #5: Conditional statements",
    "approved": true,
    "tags": [
      "Puzzles",
      "Fundamentals"
    ]
  },
  {
    "id": "597e31b6829d0b45f2000011",
    "name": "Survive The Seven Kingdoms",
    "approved": true,
    "tags": [
      "Puzzles",
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Games"
    ]
  },
  {
    "id": "5981a04b8ce866705d00002f",
    "name": "Biggest  Number (with Strings)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "59827d0c197a17d4cf000028",
    "name": "Convert Sentences to New York, my guy.",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59f0f9e127402fb0c4000110",
    "name": "One-Semicolon Array Reversal",
    "approved": true,
    "tags": [
      "Puzzles",
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "59f7a040a5b820c684000046",
    "name": "class List",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "59ff57d3c9fc0e0e95000061",
    "name": "Roasting Chicken",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a0928398ba914ca6b00002b",
    "name": "Iterate over a Linked List using \"for...of\"",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Advanced Language Features"
    ]
  },
  {
    "id": "5a306685e1ce0e3fa500010b",
    "name": "Connected blocks",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5a31a71c1f7f705a93000005",
    "name": "Shifted cycles",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Iterators",
      "Control Flow",
      "Object-oriented Programming",
      "Basic Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5a91c5520abf5a6cf2001781",
    "name": "Hashes on Hashes",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5ab1f8d38d28f67410000090",
    "name": "Arrange Matrix by Diagonals -- OMG",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5aceae374d9fd1266f0000f0",
    "name": "Time Math",
    "approved": true,
    "tags": [
      "Algorithms",
      "Dates/Time",
      "Data Types",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5b13027eedd62c5216000001",
    "name": "anti-virus file scanner",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Security",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5b1bdc2bccef79e948000086",
    "name": "Count them all!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5b4a36825dafedb872000d04",
    "name": "Get the Grid Coordinates",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5ba47374b18e382069000052",
    "name": "Minimum Reduction",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5c2d5de69611562191289041",
    "name": "Kata 2019: Bonus Game I",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Dynamic Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5c302f562f6fe300155a1933",
    "name": "A*B=B*A? Prove it!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5e0607115654a900140b3ce3",
    "name": "No arithmetic progressions",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5e4a1a43698ef0002d2a1f73",
    "name": "Next polydivisible number",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "60bcef3c4a3ef30015bc05dd",
    "name": "Two-Dimensional Array Operation",
    "approved": true,
    "tags": [
      "Bugs",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "60ca2ce44875c5004cda5c74",
    "name": "D&D: Non-Euclidian Movement",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Data Structures"
    ]
  },
  {
    "id": "6173bba47e5aa0000f86b76b",
    "name": "EZ code golf #2 : 8 -> 10",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "52bd8335d9aca8fb16000341",
    "name": "How low can you go?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Bits",
      "Binary",
      "Utilities"
    ]
  },
  {
    "id": "535938615ab68857ae0014a6",
    "name": "EventEmitter",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Blocks",
      "Object-oriented Programming",
      "Functions",
      "Programming Paradigms",
      "Control Flow",
      "Basic Language Features",
      "Data Structures",
      "Hashes",
      "Arrays",
      "Data Types",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "53da21d54a51689580000e42",
    "name": "Deferred Objects",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5452209f699b534c67000cdf",
    "name": "Super power frequency function",
    "approved": true,
    "tags": [
      "Algorithms",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5611e038a1b7990def000076",
    "name": "Island Count",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "563301d00656afb8a600009d",
    "name": "Sorting the Rabbit Hole",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Sorting",
      "Logic"
    ]
  },
  {
    "id": "563d3645de796fc3b50000db",
    "name": "SoccerTable",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5641b3f737b248b8840000b0",
    "name": "Simple Equation 2",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5694b4f9a01ae685c400002f",
    "name": "Polynomials II: Coefficients In a List",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Functions",
      "Strings"
    ]
  },
  {
    "id": "56c31c6ec44a3ab033000eaf",
    "name": "Statistics - Fundamentals",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "56c6a67ed3702be0fc0017d8",
    "name": "I need a lookup quick!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "57161cb0b436cf0911000819",
    "name": "Find the integer Partition of k-Length With Maximum or Minimum Value For Its Product Value",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Algorithms",
      "Logic",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Optimization",
      "Declarative Programming",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "57738d9110a0a6f1d50000a7",
    "name": "Link Up--Play game Series #7",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57b64d9eb69bfc8209000160",
    "name": "Hello Kitty",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "57c7930dfa9fc5f0e30009eb",
    "name": "Closest Perfect Power",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "57da7ca63150b02e6400026b",
    "name": "Sum of list of Integer Just's",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57f09d0bcedb892791000255",
    "name": "Help Suzuki pack his coal basket!",
    "approved": true,
    "tags": [
      "Algorithms",
      "Dynamic Programming",
      "Programming Paradigms",
      "Logic",
      "Data Structures",
      "Mathematics",
      "Numbers",
      "Optimization",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "57f6a6050812b4198d0001a5",
    "name": "Collapse spaces and url encode (no regex or trim)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Formatting",
      "Logic"
    ]
  },
  {
    "id": "5826231422be6e7344000006",
    "name": "zipWith II: Lists :]",
    "approved": true,
    "tags": [
      "Algorithms",
      "Lists",
      "Data Structures",
      "Arrays",
      "Data Types",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "583cce836e3994e457000068",
    "name": "Numify",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5840e31f770be1636e0000d3",
    "name": "Base Reduction",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5864916573bd9c1e1c000007",
    "name": "All Star Code Challenge #12",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5873a8890565844b910001f8",
    "name": "Sum #2",
    "approved": true,
    "tags": [
      "Puzzles",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Games"
    ]
  },
  {
    "id": "58794dffb2ed48d83e00185b",
    "name": "This Kata is Broken",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "588847702ffea657ba00001b",
    "name": "Simple Fun #46: Cipher26",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5889a8b335de69cc620000c8",
    "name": "Simple Fun #60: Swap Diagonals",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58c979aafd407d6e9f000071",
    "name": "Magic Squares",
    "approved": true,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "58c9defe6a3965206600011d",
    "name": "Reflection in PHP #2 - Dissecting a function via ReflectionParameter",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Reflection",
      "Metaprogramming",
      "Programming Paradigms",
      "Advanced Language Features",
      "Object-oriented Programming"
    ]
  },
  {
    "id": "58e4d3530e1018e155000058",
    "name": "Minimum dollar bill's count",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "591392af88a4994caa0000e0",
    "name": "# Counting 1: I  Want Some Subsets, Not All!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "591be6fdb873a7722700008f",
    "name": "One Line Task: Count \"Word\"",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5980f241ed8cb553e7000001",
    "name": "Common Data Type",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "59de9e6a28fcedb892000142",
    "name": "File Finder",
    "approved": true,
    "tags": [
      "Algorithms",
      "Search",
      "Logic",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "59f6e1af3640ce12510000ad",
    "name": "Find nth Digit In a Infinite Addition Result",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Performance"
    ]
  },
  {
    "id": "5a21f228781b16d0bc00039d",
    "name": "What is the growth?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5a54eb6a5be9ddc2fe000003",
    "name": "Shorten Me: Array Declaration XI (Triangle)",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a57faad880385f3b60000d0",
    "name": "Tower Defense: Risk Analysis",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Games"
    ]
  },
  {
    "id": "5a74a62e17040b8a2d0000cb",
    "name": "[BF] Absolute Value",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "5a77e4af373c2edf72000085",
    "name": "A1 Thick and Hearty",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures",
      "Permutations",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5a8204c1690e2771c9002771",
    "name": "URL Timestamps",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5ad86a0fcc0f9614e1000091",
    "name": "One Line Task: Diamond Creator Pro",
    "approved": true,
    "tags": [
      "Puzzles",
      "Strings",
      "Data Types",
      "Arrays",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Games"
    ]
  },
  {
    "id": "5af33bcdde4c7f94a90000b3",
    "name": "Yoneda lemma",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5bec507e1ab6db71110001fc",
    "name": "Button sequences",
    "approved": true,
    "tags": [
      "Puzzles",
      "Strings",
      "Data Types",
      "Games",
      "Sequences",
      "Arrays"
    ]
  },
  {
    "id": "5c85201e20f73f08df4216b1",
    "name": "Google interview",
    "approved": true,
    "tags": [
      "Algorithms",
      "Theorem Proving",
      "Data Structures",
      "Trees"
    ]
  },
  {
    "id": "5dd73cd4cf95d3000194617d",
    "name": "Null",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5ea39ab1d8425e0029fcd035",
    "name": "Ping Pong",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "60d7a52b57c9d50055b1a1f7",
    "name": "Representing Numbers on an Abacus",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Formatting",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "60fa9511fb42620019966b35",
    "name": "Peel the onion",
    "approved": true,
    "tags": [
      "Puzzles",
      "Algorithms",
      "Logic",
      "Games",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "61390c407d15c3003fabbd35",
    "name": "Do not let him go",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "5168313f6d34f7af2000002b",
    "name": "Custom Enumerators - Fibonacci",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Iterators",
      "Control Flow",
      "Object-oriented Programming",
      "Basic Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "52c974a26e511108a70001cf",
    "name": "Improving hashes.",
    "approved": true,
    "tags": [
      "Refactoring",
      "Metaprogramming",
      "Programming Paradigms",
      "Advanced Language Features",
      "Fundamentals",
      "Hashes",
      "Data Structures"
    ]
  },
  {
    "id": "52ebf3afa9a37da407000478",
    "name": "Vending Machine",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Control Flow",
      "Basic Language Features",
      "Data Structures",
      "Functions",
      "Arithmetic",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Integers"
    ]
  },
  {
    "id": "551602850cc0afa0a60000e6",
    "name": "Triangular matrices.",
    "approved": true,
    "tags": [
      "Algorithms",
      "Graphs",
      "Data Structures",
      "Linear Algebra",
      "Algebra",
      "Mathematics",
      "Logic"
    ]
  },
  {
    "id": "551e467e24b7a4e0b20001e8",
    "name": "Forbidden constructor",
    "approved": true,
    "tags": [
      "Refactoring",
      "Constructors",
      "Basic Language Features",
      "Fundamentals",
      "Functions",
      "Control Flow"
    ]
  },
  {
    "id": "5534c7858f06db29b8000075",
    "name": "Greedy seller's quotes",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Fundamentals",
      "Basic Language Features",
      "Lists",
      "Data Structures",
      "Formatting"
    ]
  },
  {
    "id": "55a6c585c105a2865b000077",
    "name": "Does an array contain all elements from another array. ",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "55f160df93f61bb26b00002a",
    "name": "The BIG Pronic challenge",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Algorithms",
      "Logic",
      "Arithmetic",
      "Mathematics"
    ]
  },
  {
    "id": "563bb750d3a0522b0900007f",
    "name": "Substitution - Cryptography #1",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Cryptography",
      "Security",
      "Encryption",
      "Algorithms",
      "Logic",
      "Decryption",
      "ES2015",
      "Babel"
    ]
  },
  {
    "id": "566afbfc8595f2e751000040",
    "name": "Get the Sum of Multiples of Triangular  Numbers ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Functions"
    ]
  },
  {
    "id": "5676ffaa8da527f234000025",
    "name": "Score From Permutations Of Combinations of an Integer",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Functions",
      "Permutations"
    ]
  },
  {
    "id": "56f852635d7c12fb610013d7",
    "name": "Tracking Hits for Different Sum Values  for Different Kinds of Dice",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Control Flow",
      "Basic Language Features",
      "Statistics",
      "Data",
      "Puzzles",
      "Games",
      "Permutations"
    ]
  },
  {
    "id": "5711fc7c159cde6ac70003e2",
    "name": "Search The 0 Sums Combinations in an Array",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Algorithms",
      "Logic",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Optimization"
    ]
  },
  {
    "id": "571b75ad8d8c9c27cc0019a2",
    "name": "Coding 3min : Excel Puzzle #1",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "571b93687beb0a8ade000a80",
    "name": "Fastest Code : Excel Puzzle #1",
    "approved": true,
    "tags": [
      "Algorithms",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57366eaae7f8d2df290003e8",
    "name": "UniDecoder",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Unicode",
      "Character Encodings",
      "Formats"
    ]
  },
  {
    "id": "57427526550d138448000458",
    "name": "Fake website #1: Choose a good name for the website",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5749a53c289cfbaffc0012b1",
    "name": "Fake website #6: Design an automatic beta katas processing function",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "578e55c275ffd11cb3001045",
    "name": "Chessboard Squares Under Queen's Attack",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57a42ef9e298a72d710002aa",
    "name": "T.T.T.19: How many steps are required to turn A into B?",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57b13c47d241569e52001343",
    "name": "T.T.T.35: Complete a matrix(3x3)",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57cc3302d954d951530000a5",
    "name": "Fluent Calculator",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Metaprogramming",
      "Programming Paradigms",
      "Advanced Language Features"
    ]
  },
  {
    "id": "57da7f901b5ff148ad00030d",
    "name": "Sum of list of Integer Just's and Nothing's",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57df097c1dbd8f971500003f",
    "name": "Convert a Hashy String to a Hash",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Hashes",
      "Data Structures",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5806203dc2799821cb000293",
    "name": "Strings: implement your own \"strtok\" function!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5852d0d463adbd39670000a1",
    "name": "Mirrored Exponential Chunks",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "587f279fadc9c5c1c400008e",
    "name": "Item-Counter",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Collections",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "589d581680458f695200008e",
    "name": "Simple Fun #118: Sum Or Product",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58b9ac455927cd595a0000d4",
    "name": "Matrix Strings",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58bd04d923fee9fd95000035",
    "name": "One Line Task: Paint The Walls Of Office",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "59014fbb526ff1af0400004b",
    "name": "Simple Fun #218: Replace Words",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5901555b63bf404a66000029",
    "name": "Simple Fun #219: Light Bulbs",
    "approved": true,
    "tags": [
      "Algorithms",
      "Puzzles",
      "Games",
      "Logic"
    ]
  },
  {
    "id": "590fcc057bbb3eef70000103",
    "name": "Simple Fun #252: Parking Cost",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "590fdc0cc7d00e175b00011e",
    "name": "Simple Fun #254: Factorized GCD",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "59157809f05d9a8ad7000096",
    "name": "Simple Fun #273: Powerset",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59293c2cfafd38975600002d",
    "name": "Find matching parenthesis",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5939f09c193f71b5fc0000fa",
    "name": "Code Adventurer Guild: HongKong",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5953c6f8af7ac14fd4000021",
    "name": "Simple Fun #326a: The Shorterest Time",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "596f1bdeda9b3b0297000018",
    "name": "Simple Fun #344: Children And Apples",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "597ab747d1ba5b843f0000ca",
    "name": "Pointless Farmer",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "599fd6d49f922bdfa200009c",
    "name": "n-upcount",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59b0b7cd2a00d219ab0000c5",
    "name": "Spinning Rings - Fidget Spinner Edition",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Performance"
    ]
  },
  {
    "id": "59b9a92a6236547247000110",
    "name": "Hide a message in a deck of playing cards",
    "approved": true,
    "tags": [
      "Algorithms",
      "Cryptography",
      "Security",
      "Mathematics",
      "Logic",
      "Numbers",
      "Games",
      "Permutations"
    ]
  },
  {
    "id": "59c6f43c2963ecf6bf002252",
    "name": "Swap Node Pairs In Linked List",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Data Structures"
    ]
  },
  {
    "id": "59da98e86ecd95f06000073d",
    "name": "Treasure Box",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Strings",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "59dce15af703c42af6000035",
    "name": "Are all elements equal? (Infinity version)",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59e0069781618a7950000995",
    "name": "Letterss of Natac",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Optimization"
    ]
  },
  {
    "id": "59eb8739fc3c49b67a00007d",
    "name": "Tricky Kotlin #5: go into a class",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Tips & Tricks",
      "Advanced Language Features"
    ]
  },
  {
    "id": "59ff6308ba2a14f35800008f",
    "name": "Lua is easy: Lesson 4 - Strings",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a53680ee626c5b7b4000074",
    "name": "[BF] Decorate a line of text with stars!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5a7ab27bfd57772f4d001301",
    "name": "Compile time #3.1 Make string",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Metaprogramming",
      "Programming Paradigms",
      "Advanced Language Features",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5b571f7bbdd074fea100017e",
    "name": "Good luck Coop(updated)!",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5c11c3f757415b1735000338",
    "name": "Palindromic Expression",
    "approved": true,
    "tags": [
      "Algorithms",
      "Games"
    ]
  },
  {
    "id": "5c1bb0d96a9c5537ad000230",
    "name": "Poetic rhythm",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Objects",
      "Arrays",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals"
    ]
  },
  {
    "id": "5c237d7c1ea8b34b32000244",
    "name": "[ Code Golf ] Remove duplicated nodes",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5f76c4779164bf001d52c141",
    "name": "Boolean Trilogy #1: CDNF",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Theoretical Computer Science",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "6040b781e50db7000ab35125",
    "name": "Delta Generators",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Sequences",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "607a8f270f09ea003a38369c",
    "name": "Ryomen Sukuna",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "60d5b5cd507957000d08e673",
    "name": "Nth Order Summation",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "61a2fcac3411ca0027e71108",
    "name": "Max sum path",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "52dd912cf5073adca8000556",
    "name": "A Banking Trouble",
    "approved": true,
    "tags": [
      "Bugs"
    ]
  },
  {
    "id": "5303617c1f5c12fc28000237",
    "name": "Binary Search Tree using Arrays",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Arithmetic",
      "Mathematics",
      "Numbers",
      "Integers",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Sorting"
    ]
  },
  {
    "id": "536c71b32f4036f0fd000315",
    "name": "Metaprogramming Conjurer",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Metaprogramming",
      "Programming Paradigms",
      "Advanced Language Features",
      "Lambdas",
      "Functional Programming",
      "Functions",
      "Declarative Programming",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "537ece6953efd95e9e000516",
    "name": "Change Machine",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Performance"
    ]
  },
  {
    "id": "538951ebdaea7dc4d2000293",
    "name": "Balance the tree",
    "approved": true,
    "tags": [
      "Algorithms",
      "Trees",
      "Data Structures"
    ]
  },
  {
    "id": "542712c3a16825621e000b65",
    "name": "Sorting lists by length and lexicographically",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures",
      "Sorting",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "54285676c9cd5ead8f000c46",
    "name": "Stacked Deck (create a cheater's deck of cards)",
    "approved": true,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Arrays",
      "Data Types",
      "Games"
    ]
  },
  {
    "id": "54331f38cba5d99c17000568",
    "name": "Storing Codes",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "553ba31138239b9bc6000037",
    "name": "Chameleon unity",
    "approved": true,
    "tags": [
      "Algorithms",
      "Algebra",
      "Mathematics",
      "Logic"
    ]
  },
  {
    "id": "55d18ceefdc5aba4290000e5",
    "name": "Dice rolls threshold",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "55da2a419f8361df45000025",
    "name": "Most improved - Puzzles #4",
    "approved": true,
    "tags": [
      "Puzzles",
      "Data",
      "Arrays",
      "Data Types",
      "Games"
    ]
  },
  {
    "id": "560985a07add63e1a1000019",
    "name": "Required Data II (Easy One)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Control Flow",
      "Basic Language Features",
      "Algorithms",
      "Logic",
      "Data Structures",
      "Sorting",
      "Numbers",
      "Data Types",
      "Functions"
    ]
  },
  {
    "id": "56955dc2135a2e049f0000a9",
    "name": "Write a function to sort a given string into alphabetical order",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Sorting",
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "56b089fd747d2a2a1c000021",
    "name": "Find File in Directories",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57024825005264fe9200057d",
    "name": "Sorting Time",
    "approved": true,
    "tags": [
      "Algorithms",
      "Dates/Time",
      "Data Types",
      "Sorting",
      "Logic",
      "Arrays"
    ]
  },
  {
    "id": "570707e47a53e8b7070012c7",
    "name": "Clean-up List<T> by most often used item.Category",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5707c6e74f2c29a750001f8b",
    "name": "Shortest Code : Regular expression compression",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "574b00f499d8f8fe1e0013bb",
    "name": "Defend your castle",
    "approved": true,
    "tags": [
      "Algorithms",
      "Objects",
      "Data Types",
      "Logic"
    ]
  },
  {
    "id": "576bbb41b1abc47b3900015e",
    "name": "Ins and Outs--Play game Series #6:",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "578fe028b4defd49220001c8",
    "name": "Ruby Functions #1: Define the \"Each\" Function",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Iterators",
      "Control Flow",
      "Object-oriented Programming",
      "Basic Language Features",
      "Programming Paradigms",
      "Functions"
    ]
  },
  {
    "id": "57a18f23e298a740e5001051",
    "name": "T.T.T.16: Warning of Array.map()",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57f9bbe759eb61a049000160",
    "name": "Guess the Digits and Expression",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "581a8b805a0debc28e00001b",
    "name": "Generate An Array of Unique Strings",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Arrays"
    ]
  },
  {
    "id": "583579afe0c61a774a0000ba",
    "name": "Custom concat() Array Method",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Methods",
      "Functions",
      "Object-oriented Programming",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Programming Paradigms"
    ]
  },
  {
    "id": "58899b0c97630e0b70000089",
    "name": "Simple Fun #56: Beautiful Text",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58bc16e271b1e4c5d3000151",
    "name": "Lowest base system",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Performance"
    ]
  },
  {
    "id": "58c2b37b8b4f2e2632000001",
    "name": "Tricky char[] to int[] conversion",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "58d4634b14286c0302000593",
    "name": "Lychrel numbers",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58fbc832e86f5e905300007f",
    "name": "Isogram Cipher",
    "approved": true,
    "tags": [
      "Algorithms",
      "Ciphers",
      "Cryptography",
      "Logic",
      "Security",
      "Encryption"
    ]
  },
  {
    "id": "58feb7ac627d2fdadf000111",
    "name": "Simple Fun #208: Find Sub Array With Same Element",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58fff63f4c5d026cc200000f",
    "name": "Simple Fun #211: Frog's Jumping",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5906dcc359a2f71fe700002e",
    "name": "Simple Fun #228: Greatest Common Prime Divisor",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59115fdca53112c41c0002f4",
    "name": "Simple Fun #260: Permutation Shift",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59418db3f5c394eca80000ef",
    "name": "Walk the Object Path",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Objects",
      "Data Types",
      "Map/Reduce",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5948117018e96c934e000196",
    "name": "Interval",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "595120ac5afb2e5c1d000001",
    "name": "Count the Domain Names",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "596b7f284f232df61e00001b",
    "name": "Operator Insertion",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "59a818191c55c44f3900053f",
    "name": "The Binary Binary Expansion",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "59ac6cbc589d2a4301000041",
    "name": "Min or Max of . . .",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Sets"
    ]
  },
  {
    "id": "59ae7edbba7b60c17500006e",
    "name": "Tap Into Mr. Mxyzinjin's Brain",
    "approved": true,
    "tags": [
      "Puzzles",
      "Cryptography",
      "Security"
    ]
  },
  {
    "id": "59b2e5f51b5ca36eea000055",
    "name": "[BF] Binary number to ASCII character",
    "approved": true,
    "tags": [
      "Algorithms",
      "Binary",
      "ASCII",
      "Character Encodings",
      "Formats"
    ]
  },
  {
    "id": "59e1ee463d09a75a4400003b",
    "name": "Tail Call Optimization",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Metaprogramming",
      "Programming Paradigms",
      "Advanced Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "59f8ffe9c9fc0eadc2000102",
    "name": "Lost Cities Score Calculator",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59fb962a69759868020000b3",
    "name": "Emoji-ergency!",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Games"
    ]
  },
  {
    "id": "5a02cf76c9fc0ee71d0000d5",
    "name": "Getting along with Bernoulli's numbers",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5a1428eb6975989403000136",
    "name": "WASD Movement",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Games",
      "Dynamic Arrays",
      "Arrays",
      "Functional Programming",
      "Data Types",
      "Declarative Programming",
      "Programming Paradigms",
      "Vectors"
    ]
  },
  {
    "id": "5a36f95fb6486a3b4300009d",
    "name": "Steer the Ship",
    "approved": true,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Games"
    ]
  },
  {
    "id": "5a3e44f8b6cfd785c300008c",
    "name": "The (un)defined truth",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5a54e3fbb6be5336a900238c",
    "name": "Shorten Me: Array Declaration IX (Variable Types)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5a72fd224a6b3463b00000a0",
    "name": "GPS coordinate conversions  - DD to DMS",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5a88a1470025e96076000095",
    "name": "BrainGolf: Screaming Program",
    "approved": true,
    "tags": [
      "Puzzles",
      "Optimization"
    ]
  },
  {
    "id": "5ae94e64783bb4b6a300007b",
    "name": "Correct my English - Series #1 - Capitalization and Full-Stops",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Parsing"
    ]
  },
  {
    "id": "5c47823d815d8d164700cc3d",
    "name": "Mission: Impossible",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Reflection",
      "Metaprogramming",
      "Programming Paradigms",
      "Advanced Language Features"
    ]
  },
  {
    "id": "5ebae674014091001729a9d7",
    "name": "Fractran Interpreter",
    "approved": true,
    "tags": [
      "Algorithms",
      "Interpreters",
      "Logic"
    ]
  },
  {
    "id": "5ec1692a2b16bb00287a6d8c",
    "name": "Triangles made of random points",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Geometry",
      "Algebra",
      "Arrays",
      "Data Types",
      "Integers",
      "Performance"
    ]
  },
  {
    "id": "6001a06c6aad37000873b48f",
    "name": "[Code Golf] The Twelve Days of Christmas",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "61711668cfcc35003253180d",
    "name": "Identify Ball Bearings",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "511fdb8755fe570889000005",
    "name": "Ruby Array invoke instance method",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "514a851457cdc630ab00002c",
    "name": "Statistics Algorithm - Calculate Sample Space",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "51f193ccbfb321860d00040d",
    "name": "Add _ - accessors to Hash",
    "approved": true,
    "tags": [
      "Algorithms",
      "Metaprogramming",
      "Programming Paradigms",
      "Advanced Language Features",
      "Fundamentals",
      "Hashes",
      "Data Structures"
    ]
  },
  {
    "id": "5302b069ad5217ce2d0000f1",
    "name": "Random Sequence Generator",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Games",
      "Arithmetic",
      "Mathematics",
      "Numbers",
      "Integers"
    ]
  },
  {
    "id": "5390ae7acd51b62a040009fc",
    "name": "Take It or Leave It Interview Strategy",
    "approved": true,
    "tags": [
      "Algorithms",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "54fa4e210609868fce0002bf",
    "name": "IPv6 address validation and contraction",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "55bcf04de45497c54a0000d0",
    "name": "Defining getters and setters on an existing class",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "55f07ddd97090cf03300006b",
    "name": "Numberpad cipher",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "55fd8b5e61d47237810000d9",
    "name": "Word Wrap",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "561aca76c3e5e0156000001d",
    "name": "Java-like static method in JS",
    "approved": true,
    "tags": [
      "Puzzles",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Advanced Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "5641d9d4aceb8e30dc0000aa",
    "name": "Stick to The Screen Sides",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "564342bcb29b049c7200003f",
    "name": "Extension Method get the leader name",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "564d5bc681b135f1c60000b9",
    "name": "Many  Maps As One",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "568f058bb74d73512500003f",
    "name": "Big integers sum",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5692354f95f6b7c813000014",
    "name": "Guess the function",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "569e0778f3b6ef81b7000046",
    "name": "Graphics 01: Drawing Lines",
    "approved": true,
    "tags": [
      "Algorithms",
      "Graphics",
      "Logic"
    ]
  },
  {
    "id": "56e93159f6c72164b700062b",
    "name": "The Primes as a Result of the Longest Consecutive Sum  I ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Performance",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Data Structures",
      "Arrays"
    ]
  },
  {
    "id": "56fd862db0c52efd9e0018f9",
    "name": "ACME factory needs your help",
    "approved": true,
    "tags": [
      "Puzzles",
      "Sorting",
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "570e0a6ce5c9a0a8c4000bbb",
    "name": "Double Even Magic Square",
    "approved": true,
    "tags": [
      "Puzzles",
      "Fundamentals",
      "Games",
      "Arrays",
      "Data Types",
      "Numbers",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "575135cabdd337cff50009cc",
    "name": "T.T.T.#3: Three lifts",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57542b169a4524d7d9000b68",
    "name": "Play PingPong : Precise control",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5794cf0b73938ec43700002b",
    "name": "Generic-type Loop",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5797bbb34be9127074000132",
    "name": "Tetration",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57980be93467db22f5000038",
    "name": "Training Random Testcases #1: Fizz Buzz",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57bff6f6b5e2c99387000149",
    "name": "Is there an Arithmetic Progression sequence?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "57da8b50a82a19ecca001513",
    "name": "Hello F#",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57de36c721bc491a54000178",
    "name": "myjinxin's Fairy tales #002 : Ali Baba and the Forty Thieves I",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57fa64dec7d847f5a4000b93",
    "name": "Matrices I: A form of  data storage",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Structures",
      "Algebra",
      "Linear Algebra",
      "Arrays",
      "Data Types",
      "Lists"
    ]
  },
  {
    "id": "57fcadd2334ad3bbbc00023c",
    "name": "Save Mark Watney- The Martian!",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic"
    ]
  },
  {
    "id": "5819f2bdf3101966de0000a3",
    "name": "Talk to an array",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "583fcac35b72cb828a000035",
    "name": "[BF] Even or Odd?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Esoteric Languages",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Logic"
    ]
  },
  {
    "id": "5840f47570407f372a00008b",
    "name": "Find number in an array # 4",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58734b335cfd6b9fb6000213",
    "name": "Implement Pagination",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Collections",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "58870c87c81516bbdb0000d8",
    "name": "Simple Fun #33: Construct Square",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58aa498d2223a30e4f00003e",
    "name": "Chess Fun #11: Chess Notation",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58c212c6f130b7c4660000a5",
    "name": "Simple Fun #192: Three Details",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58cd7f6914e656400100005a",
    "name": "Reversing Euclid's GCD. Parameters out of results",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "58cfd705f9dffe0f510000fb",
    "name": "Automaton (Part 3)",
    "approved": true,
    "tags": [
      "Refactoring"
    ]
  },
  {
    "id": "58f58dc3663082a4ba000033",
    "name": "ASCII Games: Dance Dance Evolution I",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "ASCII",
      "Character Encodings",
      "Formats"
    ]
  },
  {
    "id": "590a924c7dfc1a238d000047",
    "name": "Simple Fun #243: Perfect Team Of MinimalSize",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59302a6af1c4f0a8fe0000a6",
    "name": "Sum the Arrays",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5936107d40ed69ea1e00003d",
    "name": "Simple Fun #317: Coordinate Helper",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5954b48ad8e0053403000040",
    "name": "Simple Fun #336: Lonely Frog",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59678a814e686ba17b000079",
    "name": "B.A.D. Hashing",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "596e9524f24c7e5a7b000430",
    "name": "Aspect Ratio Cropping - Part 2",
    "approved": true,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "599f84f86780ef2de7000063",
    "name": "One Line Task: How many digits?",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a0f593a1bae7bd7ca000159",
    "name": "How far can you pedal a bike???",
    "approved": true,
    "tags": [
      "Algorithms",
      "Puzzles",
      "Games",
      "Fundamentals",
      "Logic"
    ]
  },
  {
    "id": "5a2c343e8f27f2636c0000c9",
    "name": "Dynamic Programming #1: Shortest Path in a Weighted DAG",
    "approved": true,
    "tags": [
      "Algorithms",
      "Dynamic Programming",
      "Programming Paradigms",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "5a4b612ee626c5d116000084",
    "name": "Funnel Out A String",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a5817c4b3bfa8a8c900005e",
    "name": "Java Code Golf: Large Factorials",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Optimization"
    ]
  },
  {
    "id": "5a6b80cb880385a8f7000089",
    "name": "Codewars API",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a6de0ec0136a1761d000093",
    "name": "The Binary Tree, or There and Back Again",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Data Structures",
      "Trees"
    ]
  },
  {
    "id": "5ac616ccbc72620a6a000096",
    "name": "Snake Collision",
    "approved": true,
    "tags": [
      "Puzzles",
      "Arrays",
      "Data Types",
      "Games",
      "Algorithms",
      "Logic",
      "Simulation"
    ]
  },
  {
    "id": "5ae3ad4a2c50613a77000014",
    "name": "One line kata: Sum  Multiples of 3 and 5",
    "approved": true,
    "tags": [
      "Refactoring",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5b19f34c7664aacf020000ec",
    "name": "Climbing the Leaderboard",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Optimization",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5b2771fab6989dd87d0000f1",
    "name": "Computer Science 101 - #3 Deques",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Performance"
    ]
  },
  {
    "id": "5b315b8ca454c8c5b40003a2",
    "name": "2D Cellular Neighbourhood - Part 2",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Data Structures",
      "Arrays",
      "Data Types",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "5b773b698adeaeb6b80000df",
    "name": "Reusable memoisation",
    "approved": true,
    "tags": [
      "Algorithms",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Recursion",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "5be0c8601b109ad2450000a5",
    "name": "Japanese Romaji-to-Hiragana Converter",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Logic",
      "Strings",
      "Data Types",
      "Basic Language Features",
      "Control Flow",
      "Loops",
      "Parsing",
      "Algorithms"
    ]
  },
  {
    "id": "5c22954a58251f1fdc000008",
    "name": "Grayscale ASCII-art",
    "approved": true,
    "tags": [
      "Algorithms",
      "ASCII",
      "Character Encodings",
      "Formats",
      "Bitmaps",
      "Maps",
      "Data Structures"
    ]
  },
  {
    "id": "5c36e827348b3e15a56edcbf",
    "name": "DNE equivalent to PEM? Prove It!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5c8531a820089d04385a7faa",
    "name": "A+A=B+B so A=B? Prove it!",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Theorem Proving",
      "Arithmetic"
    ]
  },
  {
    "id": "5c8b332197eb04000887fd63",
    "name": "Program Verification #1: The sum of an arithmetic progression",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Theorem Proving"
    ]
  },
  {
    "id": "5d941f1c175c0b000fda74a2",
    "name": "Locator Numbers",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "5f579a3b34d5ad002819eb9e",
    "name": "Sharkovsky's Theorem",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "605d58ab7f229d001bac446e",
    "name": "Probability #1 : The Infinite Spinning Wheel",
    "approved": true,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Games"
    ]
  },
  {
    "id": "608673cf4b69590030fee8d6",
    "name": "Portal 2: End credits song. Text printing.",
    "approved": true,
    "tags": [
      "Algorithms",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "61e1f175fbf3bd002a5528cd",
    "name": " Microwave maid Ep1: The touchpad test",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "525b71926080a49789000185",
    "name": "Normally Distributed Random Number Generator",
    "approved": true,
    "tags": [
      "Algorithms",
      "Statistics",
      "Data",
      "Logic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "53897d3187c26d42ac00040d",
    "name": "Find whether there is a route between two nodes in a graph",
    "approved": true,
    "tags": [
      "Algorithms",
      "Graphs",
      "Data Structures",
      "Recursion",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "53bb1201392478fefc000746",
    "name": "Sherlock on pockets",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types",
      "Numbers",
      "Integers"
    ]
  },
  {
    "id": "542106e2dda52658bf00001a",
    "name": "Node.js Async I/O",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Asynchronous",
      "Utilities",
      "Objects",
      "Data Types",
      "Modules",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "54a305521817ec2f1b001512",
    "name": "multiply(value, times)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Objects",
      "Numbers",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "54d84dc118438a0eed000a42",
    "name": "Integer to Musical Pitch Classes",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5540e75396737c4cea000092",
    "name": "Needles in a haystack",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Scopes",
      "Basic Language Features"
    ]
  },
  {
    "id": "5679de444454213427000050",
    "name": "80's Kids #9: Down in Fraggle Rock",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5689cd3df0315aaa23000004",
    "name": "Magic The Gathering #3: Spell Stack",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56c85eebfd8fc02551000281",
    "name": "Play Tetris  :  Shape anastomosis",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "56f0c9134d1e060fd8001f64",
    "name": "Find out the longest string chain",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "56fa467e0ba33b8b1100064a",
    "name": "Paperboy 2",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "57157a7c2ad76331360002d0",
    "name": "You're not my type",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5717924a1c2734e78f000430",
    "name": "Building a Sequence Cocatenating Digits with a Given Order.",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Algorithms",
      "Logic",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Optimization",
      "Declarative Programming",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "5776600afc8cd670130000df",
    "name": "T.T.T.12: Split integer",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5796ca797cb7a1cee10009d0",
    "name": "Make the sum... if you can.",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "57b1f617b69bfc08cf00042a",
    "name": "T.T.T.38: The sum of each digits",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57be770e80ee7a06640000cf",
    "name": "T.T.T.48: Make a  rectangular cup that has maximum volume ",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "584f6da5ddf34867fc000048",
    "name": "Christmas mission: Distribute gifts #2",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58523d715e8c052521000084",
    "name": "Christmas mission: Programmer's Christmas #2",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5873657a5cfd6bdb5c0001e7",
    "name": "Sudoku solver #1",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58a3e2978bdda5a0d9000187",
    "name": "Simple Fun #127: Prime Operations",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "59218bf66034acb9b7000040",
    "name": "The Hunger Games - Shut the gate",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "592786effb1f93349b0000b2",
    "name": "Simple Fun #308: Hamming Rotate",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5945fe7d9b33194f960000df",
    "name": "Find the gatecrashers on CocoBongo parties",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Search",
      "Algorithms",
      "Logic",
      "Graphs",
      "Data Structures",
      "Performance"
    ]
  },
  {
    "id": "595103838e7871aa4c000069",
    "name": "Derive Cipher from Plaintext",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5951ce09add2b6d9b8000017",
    "name": "Simple Fun #329: Best Score",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59569ba543e2a8ebda00012a",
    "name": "Count the number of days between two dates",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59c0b9d4cb7fb4dd41000962",
    "name": "Simple Fun #347: Bulb Maze I",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59cb7e01d751df471e0000a8",
    "name": "The Spider and the Fly",
    "approved": true,
    "tags": [
      "Algorithms",
      "Bugs"
    ]
  },
  {
    "id": "59f9cad032b8b91e12000035",
    "name": "To BrainFuck Transpiler",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Esoteric Languages",
      "Parsing",
      "Algorithms",
      "Logic",
      "Strings"
    ]
  },
  {
    "id": "5a010ee3ba2a14f4940001df",
    "name": "@wraps",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Closures",
      "Higher-order Functions"
    ]
  },
  {
    "id": "5a025691ba2a14cec7000049",
    "name": "Simple Fun #374: Minimal Subtractor",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5a15d9b0ffe75f3199000191",
    "name": "Double Rainbow!",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a54df11b6be53d35f002301",
    "name": "Shorten Me: Array Declaration VII (Alphabets)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5ac94db76bde60383d000038",
    "name": "Ulam Sequences (performance edition)",
    "approved": true,
    "tags": [
      "Refactoring",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5b8dc84b8ce20454bd00002e",
    "name": "intTunes",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Lists",
      "Data Structures",
      "Fundamentals",
      "Sequences"
    ]
  },
  {
    "id": "5c8b4215a99b9c000d07d7b2",
    "name": "Program Verification #3: Tail-recursive sum",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Theorem Proving"
    ]
  },
  {
    "id": "5d339b01496f8d001054887f",
    "name": "Find X Ⅱ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Optimization",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5dc31e0475b58d0014236a60",
    "name": "Math.pow?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Arithmetic"
    ]
  },
  {
    "id": "5e7837d0262211001ecf04d7",
    "name": "HTML Element Generator",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5f0795c6e45bc600247ab794",
    "name": "Hack the NSA",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Bash"
    ]
  },
  {
    "id": "5fc836f5a167260008dfad7f",
    "name": "Knight's tour problem on (N x M) desk",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "617af2ff76b7f70027b89db3",
    "name": "Find the Strongest Apes",
    "approved": true,
    "tags": [
      "Algorithms",
      "Lists",
      "Data Structures",
      "Sorting",
      "Logic"
    ]
  },
  {
    "id": "520d623fdf58c68c6f00013e",
    "name": "BatchItemProcessor",
    "approved": true,
    "tags": [
      "Algorithms",
      "Memoization",
      "Design Patterns",
      "Design Principles"
    ]
  },
  {
    "id": "52c82f219e8eaab84700025f",
    "name": "Array.prototype.splice(from, count, insertItems...)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Utilities"
    ]
  },
  {
    "id": "52f2f1ea12b5cbc66900300a",
    "name": "Affine Cipher Helper",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Ciphers",
      "Cryptography",
      "Security",
      "Objects",
      "Data Types",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Fundamentals",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "52fff3f4aff4559096000917",
    "name": "Default configuration",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Utilities",
      "Objects",
      "Data Types",
      "Hashes",
      "Data Structures"
    ]
  },
  {
    "id": "53a8a236a9198e218d000195",
    "name": "Custom attr_accessor",
    "approved": true,
    "tags": [
      "Refactoring",
      "Metaprogramming",
      "Programming Paradigms",
      "Advanced Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "5416d02d932c1df3a3000492",
    "name": "Simple AKS Primality Test",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "554e5ef27daf4082f6000071",
    "name": "[Geometry A-3] Does point belong to the vector? [DRY]",
    "approved": true,
    "tags": [
      "Algorithms",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Logic",
      "Dynamic Arrays",
      "Arrays",
      "Functional Programming",
      "Data Types",
      "Declarative Programming",
      "Programming Paradigms",
      "Vectors",
      "DRY",
      "Programming Principles"
    ]
  },
  {
    "id": "5562aa03004710f3ab0001d5",
    "name": "Connecting Values",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Logic"
    ]
  },
  {
    "id": "55baa55cf332e67eb000000a",
    "name": "Lexicographic Permutations",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "55d1d06def244b18c100007c",
    "name": "Shop Inventory Manager",
    "approved": true,
    "tags": [
      "Bugs",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Fundamentals",
      "Programming Paradigms"
    ]
  },
  {
    "id": "55d32bff0cc60b2e7f000173",
    "name": "Calculate Integral",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Graphs",
      "Data Structures",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Classes",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "56968ce7753513604b000055",
    "name": "Calculate Pyramid Height",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Logic",
      "Mathematics",
      "Algorithms",
      "Numbers",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "56b27f35c616d3b889000043",
    "name": "RunTime Compiler",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56d48fe6df521074e0001140",
    "name": "Predictive contact list",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "56d5078e945d0d5d35001b74",
    "name": "Bribe the Guards of the Crown Jewels",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Dynamic Programming",
      "Programming Paradigms",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "56d6d927c9ae3f115b0008dd",
    "name": "Linear Equation Solver",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Parsing",
      "Strings"
    ]
  },
  {
    "id": "56dc41173e5dd65179001167",
    "name": "Thinking & Testing : A happy day will come",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "56dfd5dfd28ffd52c6000bb7",
    "name": "Thinking & Testing : I hate big and small",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "56fe107569510b1b1b0002a5",
    "name": "Shortest Code: Trypophobia",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "570cbd70f616a8c8fb0011d5",
    "name": "Removing Each Second Person from a Circle",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Collections",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "574e96deff5b0ab00a000672",
    "name": "KanaKonverter I",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5774d8ae6eb870c26e000420",
    "name": "T.T.T.10: The largest square",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5787b544e5553338c6000427",
    "name": "Reflection #5 - Call me back",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Types",
      "Programming Paradigms",
      "Advanced Language Features",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Objects",
      "Reflection",
      "Metaprogramming"
    ]
  },
  {
    "id": "57a2bd03bb9944669100042e",
    "name": "T.T.T.18: Find out the prime part in a number",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57a6c52a72292d3235000187",
    "name": "BitMath: Addition",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "57b64627d2415635ac000529",
    "name": "Just Adding and Multiplying",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57e9d0930949d3693100002c",
    "name": "So Easy: Price of Phone",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "57ec7091e77282474000060f",
    "name": "So Easy: Arrange students' seats",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5806ea32fb0a18a40a0003ba",
    "name": "From..To..Series #3: from char a to char b. Find a substring that contains most char c",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58296c407da141e2c7000271",
    "name": "Greedy thief",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "582f70bcfd25e93719000371",
    "name": "Get angle between hour and minute hands",
    "approved": true,
    "tags": [
      "Puzzles",
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "583b33786e3994f54e000142",
    "name": "Self-closing Cookie Jar",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Exception Handling",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "584c3e45710dca21be000088",
    "name": "The longest bracket substring in the string",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Performance",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "585355fb0877c420a2000009",
    "name": "Christmas mission: Programmer's Christmas #3",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5877839c0594a6ead600012c",
    "name": "Which Gas Station should I pick?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Objects",
      "Data Types"
    ]
  },
  {
    "id": "58b059225cf83240d800007c",
    "name": "One Line Task: Digit-Virus",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58d5a7c21c040283b0002d88",
    "name": "Insights for Uncle Tom",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58f89357d13bab79dc000208",
    "name": "Data mining #1",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Machine Learning",
      "Applied Computer Science"
    ]
  },
  {
    "id": "58f9f9f58b33d1b9cf00019d",
    "name": "Generating Numbers From Prime Factors I",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Data Structures",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Dynamic Programming",
      "Programming Paradigms",
      "Optimization"
    ]
  },
  {
    "id": "58ff61d2d6b38ee5270000bc",
    "name": "Sum of dices",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "58fff93c31c24ad198000080",
    "name": "Simple Fun #212: Processing Requests",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5900f47f9a1d60510c00009f",
    "name": "Being Wordy",
    "approved": true,
    "tags": [
      "Puzzles",
      "Fundamentals"
    ]
  },
  {
    "id": "5909cd53e0db4280740000eb",
    "name": "Sorting Book Titles: Ignoring Articles",
    "approved": true,
    "tags": [
      "Algorithms",
      "Lists",
      "Data Structures",
      "Strings",
      "Data Types",
      "Sorting",
      "Logic"
    ]
  },
  {
    "id": "591168586a57682bed000055",
    "name": "One Line Task: Make Bricks",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "592cc1eee19620efef00001a",
    "name": "groupBy",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59480c92e3102df28f0000dd",
    "name": "Write your own printf",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5949eb5f6fca09b09a0000b0",
    "name": "Tree Directory",
    "approved": true,
    "tags": [
      "Algorithms",
      "Data Structures",
      "Binary Search Trees",
      "Trees",
      "Binary",
      "Objects",
      "Data Types",
      "Recursion",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "5950eec3a100d72be100003f",
    "name": "Bad Exception Handling",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Exception Handling",
      "Control Flow",
      "Basic Language Features",
      "Security"
    ]
  },
  {
    "id": "597a660f59873cc353000061",
    "name": "Arrays and hex color codes",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5988a7747a43212f2e000052",
    "name": "Very Naive Subarray",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "598a82f07bad362e1d000003",
    "name": "I love Lisp",
    "approved": true,
    "tags": [
      "Puzzles",
      "Parsing",
      "Algorithms",
      "Logic",
      "Strings",
      "Mathematics",
      "Numbers",
      "Expressions",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "598dba93700c2c0f470000dc",
    "name": "Divide numbers as strings",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Arithmetic",
      "Data Types"
    ]
  },
  {
    "id": "599b479ec2bd3ae0b000000b",
    "name": "ASCII-ing on the Alps",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Types"
    ]
  },
  {
    "id": "599b4e682b862b8498000021",
    "name": "So many kinds of numbers!",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59a6949d398b5d6aec000007",
    "name": "Type Transpiler",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Parsing",
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "59bda06acb7fb43a94000036",
    "name": "Musical Transposer - Chromatic",
    "approved": true,
    "tags": [
      "Puzzles",
      "Fundamentals",
      "Games"
    ]
  },
  {
    "id": "59e4b634f703c4c95c000097",
    "name": "Creating a new LINQ operator: SelectConsecutive",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Sequences",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "59e63e53a95427051400007b",
    "name": "One-Semicolon Vector Dot Product",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Dynamic Arrays",
      "Arrays",
      "Functional Programming",
      "Data Types",
      "Declarative Programming",
      "Programming Paradigms",
      "Vectors"
    ]
  },
  {
    "id": "59f3956825d575e3330000a3",
    "name": "Positions of a substring in a string",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "59f82e2effe75f10f600006f",
    "name": "Simple Fun #372: Lose Or Earn?",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5a04863f06d5b6387c0000a5",
    "name": "Lombok Builder.",
    "approved": true,
    "tags": [
      "Refactoring",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Design Patterns",
      "Design Principles"
    ]
  },
  {
    "id": "5a1e1b69697598459d000057",
    "name": "Get recursion limit",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a24e2258f27f2bcb50000c7",
    "name": "Surreal Numbers Construction Rule",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "5a48c7e1e626c56fb7000092",
    "name": "#10 Matrices: Creating Hankel Matrices ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Declarative Programming",
      "Programming Paradigms",
      "Numbers",
      "Data Types",
      "Sequences",
      "Arrays",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5a54e1c4c93142b563000cc3",
    "name": "Shorten Me: Array Declaration VIII (Musical Scales)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5aaea7a25084d71006000082",
    "name": "Undirected  weighted graph",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures",
      "Graphs"
    ]
  },
  {
    "id": "5ae329c3d2ee27a1f20000f2",
    "name": "How many Katas should I have done?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "5ae786ad68e644e861000075",
    "name": "Cause str(x) to raise an exception",
    "approved": true,
    "tags": [
      "Puzzles",
      "Strings",
      "Data Types",
      "Exception Handling",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Games"
    ]
  },
  {
    "id": "5af32522252e6606cd000144",
    "name": "Human readable working hours",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types",
      "Arrays",
      "Objects"
    ]
  },
  {
    "id": "5b204d1d9212cb6ef3000111",
    "name": "The Pony Express (missing rider)",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5b4bccfabeb865730d000062",
    "name": "Wimbledon  Scoreboard - Game",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5c2deeea41e2304c133c1d1b",
    "name": "Find square within a given rectangle.",
    "approved": true,
    "tags": [
      "Puzzles",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5c658c2dd1574532507da30b",
    "name": "Crossword Puzzle! (2x2)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5cb5d96bed8828002a24aedb",
    "name": "Create new programming  mechanism to add numbers ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Metaprogramming",
      "Programming Paradigms",
      "Advanced Language Features"
    ]
  },
  {
    "id": "5d6ee508aa004c0019723c1c",
    "name": "Odder than the rest",
    "approved": true,
    "tags": [
      "Algorithms",
      "Puzzles",
      "Games",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5d7bb3eda58b36000fcc0bbb",
    "name": "Big Generalized Fibonacci numbers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Performance",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5d870ff1dc2362000ddff90b",
    "name": "Error Correction Codes",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5e529a6fb95d280032d04389",
    "name": "List of all rationals - going further",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5e64cc85f45989000f61526c",
    "name": "Almost Everywhere Zero",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "5fe382d3e01a94000d54916a",
    "name": "Investigator's holidays and hidden messages",
    "approved": true,
    "tags": [
      "Puzzles",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "608cc9666513cc00192a67a9",
    "name": "Associative Operation on Range",
    "approved": true,
    "tags": [
      "Algorithms",
      "Performance"
    ]
  },
  {
    "id": "60db06ded6c39e002ee35910",
    "name": "Inverted Ranges",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "610ab162bd1be70025d72261",
    "name": "Ideal Trader",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Iterators",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "61707b71059070003793bc0f",
    "name": "The Pyramid of Cubes",
    "approved": true,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "52ad07dd9a483f621400025c",
    "name": "Trick the Christmas Calendar!",
    "approved": true,
    "tags": [
      "Puzzles",
      "Hacking Holidays",
      "Security",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "52d0f9bc48155f574c0001b7",
    "name": "Split hash by key(s)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Hashes",
      "Data Structures",
      "Utilities"
    ]
  },
  {
    "id": "52fd0a86f721478c8f00080a",
    "name": "Bob's Signs",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Dynamic Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5320399563dc3e63460003b5",
    "name": "Simple string validation",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5540f0a23a2716acb6000004",
    "name": "Select median",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Sorting"
    ]
  },
  {
    "id": "55f2afa960aeea545a000049",
    "name": "Variance in a array of words",
    "approved": true,
    "tags": [
      "Algorithms",
      "Statistics",
      "Data",
      "Logic"
    ]
  },
  {
    "id": "55fce4dd28b5cb780000006d",
    "name": "Find me the names",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "564a043fc4dd493b4900005b",
    "name": "Smoker Peter  buys new home",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56bcafba66a2ab39e6001226",
    "name": "The simplest path",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "56c2a067585d9ac8280003c9",
    "name": "Job Matching #3",
    "approved": true,
    "tags": [
      "Algorithms",
      "Objects",
      "Data Types",
      "Arrays",
      "Filtering",
      "Logic"
    ]
  },
  {
    "id": "56f2dd31e40b7042ad001026",
    "name": "Endianness Conversion",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "570db6dade4dc8966600051c",
    "name": "Shortest Code : Eat watermelon",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "571df7c31f95429529000092",
    "name": "nova polynomial  5. from roots",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "57a20510cf1fa5bfc400095f",
    "name": "Make all numbers negative",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "57a34e2b53ba33994d000668",
    "name": "Correct movie title",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58064355c3c77984e900033c",
    "name": "Strings: filter out the Wikipedia reference marks from text",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Filtering",
      "Logic"
    ]
  },
  {
    "id": "58065440a4647e0ed3000230",
    "name": "From..To..Series #1: from m to n. Find the maximum range",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "582957651c1f59b99b0000aa",
    "name": "Find four numbers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "582c33245ad9529add000231",
    "name": "[BF] Fibonacci Sequence",
    "approved": true,
    "tags": [
      "Puzzles",
      "Esoteric Languages"
    ]
  },
  {
    "id": "582c6b7cfb3179eb6e000027",
    "name": "Zig-Zag Camel",
    "approved": true,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "58379c3b51e3b680aa000164",
    "name": "Decimals or groups of thousands??",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "5845a382a470750207000a4e",
    "name": "Welcome to Economics! #1 Consumer Price Index",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Objects",
      "Strings"
    ]
  },
  {
    "id": "584d618d52ee401a82000a05",
    "name": "Mathematical operators from scratch",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5877146c7aad3940f0000029",
    "name": "Well, that's just (proto)typical!  The Misadventures of Bob the Highly Paid Consultant #3",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Bugs",
      "Design Patterns",
      "Design Principles"
    ]
  },
  {
    "id": "588035d555aa1ec397000210",
    "name": "Office Mission #3: Labels the task",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "588b72fcd0c108ef8f00009d",
    "name": "Qwerty Coordinates -- Strings",
    "approved": true,
    "tags": [
      "Puzzles",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "589d6bc33b368ea992000035",
    "name": "Simple Fun #120: Range Collapse Representation",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58a2ff40e7841f82b600010a",
    "name": "First order  Chebyshev polynomials",
    "approved": true,
    "tags": [
      "Algorithms",
      "Sequences",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "58a3c836623e8c72eb000188",
    "name": "Simple Fun #125: Array Equalization",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58f573a0f6110e46a4000001",
    "name": "ASCII Games: Flood Fill (Player)",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "ASCII",
      "Character Encodings",
      "Formats"
    ]
  },
  {
    "id": "590c4c342ad5cd6a8700005c",
    "name": "Simple Fun #250: Prefix Sums To Suffix Sums",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "591521e2d64db03a010000fe",
    "name": "Rotations and reflections I",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Classes",
      "Basic Language Features",
      "Design Patterns",
      "Design Principles",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "593dbaccdf1adef94100006c",
    "name": "Level Up!",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arithmetic",
      "Mathematics",
      "Logic",
      "Numbers",
      "Iterators",
      "Control Flow",
      "Object-oriented Programming",
      "Basic Language Features",
      "Fundamentals",
      "Programming Paradigms"
    ]
  },
  {
    "id": "594a2758954a44749f000359",
    "name": "Simple Fun #321: Scratch lottery II",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "598e3859f289bb47ba00000a",
    "name": "Portion of Array",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "599057654f613e6a1c000082",
    "name": "[BF] Greetings with Defaults",
    "approved": true,
    "tags": [
      "Algorithms",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "59affdeb7d3c9de7ca0000ec",
    "name": "Guess and convert",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5a00d6640df25e7798001500",
    "name": "Find the missing term in a Geometric Progression",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5a3277005b2f00a11b0011c4",
    "name": "Spin the sentence",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5a4bba4e80eba8df2d00012d",
    "name": "Total Time",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "5a5651e8620d1d56de000168",
    "name": "Shorten Me: Array Declaration XII (Constants)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5a6c4086373c2e2a07000075",
    "name": "Invert Array Middle",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5a79713d373c2e3b4a000199",
    "name": "Compile time #3 itoa (number to string)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Metaprogramming",
      "Programming Paradigms",
      "Advanced Language Features",
      "Strings",
      "Data Types",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5aea1b7fd2ee276c4b000011",
    "name": "Find ingredients for making glass",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5b01e9f73e971587e70001ab",
    "name": "Try without letter \"r\"! - Pontius Pilate will tly it :)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Security"
    ]
  },
  {
    "id": "5b1b48cc647c7e7c56000083",
    "name": "Hardcore anagram difference ",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Logic"
    ]
  },
  {
    "id": "5d444d05ba9956002785c14a",
    "name": "Easy Forth (or Factor)",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5e417587e35dfb0036bd5d02",
    "name": "Elementary conveyor",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Performance"
    ]
  },
  {
    "id": "5ff0fc329e7d0f0010004c03",
    "name": "Counting diamonds",
    "approved": true,
    "tags": [
      "Puzzles",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "52ee76fdf5f13567000005ae",
    "name": "Trip Checker",
    "approved": true,
    "tags": [
      "Algorithms",
      "Search",
      "Logic",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "533b0d5e7abec41550000a9e",
    "name": "JSON.parse Date Reviver",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types",
      "JSON",
      "Formats"
    ]
  },
  {
    "id": "544a2d3818b8e00084000336",
    "name": "Frequency Frenzy 2: Endure equal elements",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "54b26b130786c9f7ed000555",
    "name": "Metaclasses - Simple Django Models",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Metaprogramming",
      "Advanced Language Features"
    ]
  },
  {
    "id": "54c3ff09f3883230ac000689",
    "name": "A simple English to Japanese transliterator",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5532e9c750fa8cd12d000079",
    "name": "Find Duplicates with String.match",
    "approved": true,
    "tags": [
      "Bugs",
      "Fundamentals"
    ]
  },
  {
    "id": "55d5f4aae676c3da53000024",
    "name": "Special Subsets of Primes",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Structures"
    ]
  },
  {
    "id": "560248d6ba06815d6f000098",
    "name": "Reversed Self Power",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Control Flow",
      "Basic Language Features",
      "Performance"
    ]
  },
  {
    "id": "56047bb6bcd785ce75000069",
    "name": "Digital Synesthesia",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "562c04fc8546d8147b000039",
    "name": "When The Sum of The Divisors Is A Multiple Of The Prime Factors Sum",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Data Structures"
    ]
  },
  {
    "id": "56464cf3f982b2e10d000015",
    "name": "Linear equations N x M, complete solution space,  fraction representation",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Linear Algebra",
      "Algebra",
      "Mathematics",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5648e13380c39e017600003f",
    "name": "Peter's Age",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56948e24b510d4e1d3000022",
    "name": "AOP - Before",
    "approved": true,
    "tags": [
      "Algorithms",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Closures"
    ]
  },
  {
    "id": "56d67c7eecb553574900016c",
    "name": "Midpoint inception",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "56d9cfd3f3928b4edd000021",
    "name": "Thinking & Testing : From nothingness To nothingness",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "56f1b3c94d0c330e4a000e95",
    "name": "Find The  Minimum Number Divisible by Integers of an Array II",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Optimization",
      "Control Flow",
      "Basic Language Features",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "56f6b4369400f51c8e000d64",
    "name": "Thinking & Testing : Who are you?",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5711efdcdf94ddeeba0001d7",
    "name": "Interesting Pyramid",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "57121e6fcdbf63eb94000e51",
    "name": "Fastest Code : Count animals",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "573749a327aecf1bf10017fd",
    "name": "Hacker's job",
    "approved": true,
    "tags": [
      "Puzzles",
      "Networks",
      "Algorithms",
      "Logic",
      "Security",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings"
    ]
  },
  {
    "id": "574b448ed27783868600004c",
    "name": "Filtering Values For an Election",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Statistics",
      "Data",
      "Declarative Programming",
      "Programming Paradigms",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "576967bbb8ed4a7bca0015c1",
    "name": "T.T.T. #8: Reverse all",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "576a527ea25aae70b7000c77",
    "name": "Statistics in Kata 2: AND case - Ball bags",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Statistics",
      "Algorithms",
      "Data",
      "Logic",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "578c7a5d466bb4109800010d",
    "name": "Thinking & Testing  #37: Convert number",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5799fadd39f33a30d70002ea",
    "name": "Parsing musical notes into MIDI",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Parsing",
      "Algorithms",
      "Logic",
      "Strings",
      "Data Structures",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "57a1a89fcf1fa56b8600154a",
    "name": "Get n first prime numbers",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57a22f50bb99445c5e000171",
    "name": "Tree-D Printer",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "57ab3d89bb9944b733000a32",
    "name": "T.T.T.28: Crow drink water(乌鸦喝水)",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57c398c0210f3e6f150001fc",
    "name": "T.T.T.52: The Race Between Hare and Tortoise",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57d250e55dc38e288c000081",
    "name": "I guess this is a 6kyu kata #5: Whac-A-Mole",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5833f203b189a5564d000286",
    "name": "What's the next number",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "583ef2456e39941f810001c5",
    "name": "Find number in an array # 1",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5842777813ee50ef38000020",
    "name": "Operator Parser",
    "approved": true,
    "tags": [
      "Puzzles",
      "Parsing",
      "Algorithms",
      "Logic",
      "Strings",
      "Data Structures",
      "Compiler Theory"
    ]
  },
  {
    "id": "58502a571345ffd6de00000a",
    "name": "Grandpa's pants",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Logic",
      "Data Structures",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "585cec2471677ee42c000296",
    "name": "Shallowest path across the river",
    "approved": true,
    "tags": [
      "Algorithms",
      "Graphs",
      "Data Structures",
      "Parsing",
      "Logic",
      "Strings"
    ]
  },
  {
    "id": "58a64b48586e9828df000109",
    "name": "Simple Fun #130: Robot Walk",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58aa6141c9eb047fec000133",
    "name": "Simple Fun #143: Is Survivor Number?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "58add662ea140541a50000f7",
    "name": "Sierpinski triangle",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "58afb7cea9c97a83a50000e3",
    "name": "Simple Fun #163: Fantastic Person",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58cc070abd22e324b300002a",
    "name": "Find duplicates in array by properties keys in another array",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "58cd9292bd0fd35781000186",
    "name": "Very Basic Inheritance",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58d64595a1111ab7df000049",
    "name": "Detect my Konami code!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Design Patterns",
      "Design Principles"
    ]
  },
  {
    "id": "58ed139326f519019a000053",
    "name": "Northwest and Southeast corners ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "591baef1c4c557dc48000002",
    "name": "Simple Fun #286: Chemistry",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "599cdc2ab7a047241a000001",
    "name": "Happy Coding : Happy Coding?",
    "approved": true,
    "tags": [
      "Puzzles",
      "Fundamentals",
      "Games"
    ]
  },
  {
    "id": "599d636e607719edf600010a",
    "name": " Learning TypeScript. Classes & Interfaces. Getters",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59b03113504d303e41000035",
    "name": "Whole of Names",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "59c2e2a36bddd2707e000079",
    "name": "Solve For X",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Puzzles",
      "Games",
      "Mathematics"
    ]
  },
  {
    "id": "59e779513d09a7b1090000b1",
    "name": "One-Semicolon Matrix Multiplication",
    "approved": true,
    "tags": [
      "Puzzles",
      "Linear Algebra",
      "Algebra",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "5a0b1da9c9fc0ea9f0000081",
    "name": "Unique Anagrams",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Permutations",
      "Logic"
    ]
  },
  {
    "id": "5a0fb51eba2a14cb0a000062",
    "name": "C/C++ Puzzle: Arithmetic Maze",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5a2ef8b7b6486a7f2e00001c",
    "name": "Acute, Obtuse, or Right?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "5a59e029145c46eaac000062",
    "name": "Domino Tiling - 2 x N Board",
    "approved": true,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Dynamic Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5ac14ac220746b3073000078",
    "name": "Whiner",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Asynchronous"
    ]
  },
  {
    "id": "5ad1bc26443b6c47730000b5",
    "name": "Maze Solver",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5b1027fe5b07a105f4000092",
    "name": "Avoid trillion years of calculations !!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Performance",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Machine Learning",
      "Applied Computer Science"
    ]
  },
  {
    "id": "5c8dda57b0a26000015f1a7a",
    "name": "This square is perfect",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Theorem Proving"
    ]
  },
  {
    "id": "5e8de0515f68a50020683af9",
    "name": "Find the differences in two lines",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Logic"
    ]
  },
  {
    "id": "5f8584916ddaa300013e1592",
    "name": "Sequence of squared digits",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Sequences",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "60a38f4df61065004fd7b4a7",
    "name": "Squared Spiral #1",
    "approved": true,
    "tags": [
      "Algorithms",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Logic",
      "Sequences",
      "Arrays",
      "Data Types",
      "Performance"
    ]
  },
  {
    "id": "60aa29e3639df90049ddf73d",
    "name": "Binary Contiguous Array",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Data Structures",
      "Dynamic Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "614a4eaeeae33e003fde909b",
    "name": "Regex Series: Match All Except X",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "52f44932f85fada5a000322d",
    "name": "Gift Unwrapping",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Basic Language Features",
      "Data Structures"
    ]
  },
  {
    "id": "52f56c2be248dfbdc6000f87",
    "name": "Tree Reconstruction",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Trees",
      "Data Structures",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "5307ce667da4f26b1600080d",
    "name": "Arc Length",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Geometry",
      "Algebra"
    ]
  },
  {
    "id": "5378d0eba3abed845a000c03",
    "name": "String Compression Challenge",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5461aa1676f4d5e2d8000de4",
    "name": "Make Ruby Hashes Act Like JavaScript Objects",
    "approved": true,
    "tags": [
      "Refactoring",
      "Hashes",
      "Data Structures",
      "Objects",
      "Data Types"
    ]
  },
  {
    "id": "553d83abe29b91be2f00006c",
    "name": "Super Smaaassh Brotheerrrs!",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Objects",
      "Data Types"
    ]
  },
  {
    "id": "5592dd43a9cd0e43a800019e",
    "name": "Diagonals",
    "approved": true,
    "tags": [
      "Algorithms",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "55e079b1e00f75e1cd00013b",
    "name": "The 196-algorithm and Lychrel numbers",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5693239fb761dc8670000001",
    "name": "Additive Numbers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Parsing",
      "Logic",
      "Strings"
    ]
  },
  {
    "id": "56aa3fc68f9a4aae7f000005",
    "name": "WinH's Kata #2 - JavaScript Array-Parser",
    "approved": true,
    "tags": [
      "Algorithms",
      "Data Structures"
    ]
  },
  {
    "id": "56fa93d36883c783ec0001d1",
    "name": "\"console.log\" and the Lexical \"this\"",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5716ec6a794d30bd5f001a7e",
    "name": "Coding 3min : Half it II",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "572b82bf4903c13b1b001079",
    "name": "Pine's Deaf Grandma",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays",
      "Methods",
      "Functions",
      "Object-oriented Programming",
      "Control Flow",
      "Basic Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5769e0db6a3efea1b1000010",
    "name": "T.T.T. #9: Peaks and valleys",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57a06b07cf1fa58b2b000252",
    "name": "Is it a letter?",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57d2c32626427662e30004a6",
    "name": "Are You a One-Liner? #2:  multiplication table",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57d3ac3e9d8463b30e00000a",
    "name": "The Raul Kata",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "57de02e2f5ec16bda100074f",
    "name": "myjinxin's Fairy tales #001 : Aladdin's lamp and three wishes",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58255fde4ef190225a0001c0",
    "name": "Last 3 digits of m^n",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5857d5cff37aeca1b100011c",
    "name": "Snakes on a Plane - #2 Hard",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5886dbc685d5788715000071",
    "name": "Simple Fun #25: Comfortable Numbers",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58882bdb5edef0343400002a",
    "name": "Simple Fun #43: Ada Number",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "590005bab7c61748c0000039",
    "name": "Simple Fun #214: Pascal Matrix",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "59080216d296b7fc1d00006a",
    "name": "Simple Fun #233: Segment Sums Matrix",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "595c4b480bb139b96100005c",
    "name": "Simple Fun #340: Minimum Possible Maximum Gap",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "596ef174e4cab6813600004d",
    "name": "E.S.P.  Cards",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59eea9a13d09a75fd10002c5",
    "name": "Simple Fun #369: Count Binary Substring I",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59f77ab881b4efdd1c00017a",
    "name": "Stutter function",
    "approved": true,
    "tags": [
      "Algorithms",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings"
    ]
  },
  {
    "id": "5a05b4f7ffe75f1509000063",
    "name": "Move The Chains! ",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5a21dcc48f27f2afa1000065",
    "name": "Membership  (with restrictions)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5a392890c5e284a7a300003f",
    "name": "Tournament Cross Table with Sonneborn-Berger Score",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Sorting",
      "Algorithms",
      "Logic",
      "Formatting"
    ]
  },
  {
    "id": "5a3cbf29ee1aae06160000c9",
    "name": "Puzzle Fighter",
    "approved": true,
    "tags": [
      "Algorithms",
      "Games",
      "Logic"
    ]
  },
  {
    "id": "5a537ad4145c4615350000ff",
    "name": "Tricky Kotlin #7: Do multiple replacement",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Tips & Tricks",
      "Advanced Language Features"
    ]
  },
  {
    "id": "5a8328fefd57777fa3000072",
    "name": "Will it balance?",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a9da7d07ce110fea1000638",
    "name": "Are the twins even?",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5ac53c71376b11df7e0001a9",
    "name": "Champernowne's Championship",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Types",
      "Integers"
    ]
  },
  {
    "id": "5ae36e4f68e644d4a60000cd",
    "name": "Parenthesis detector",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5b09cd44ee196bf290000082",
    "name": "Heroes of Might & Magic II: Chain Lightning",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Objects",
      "Data Types",
      "Arrays",
      "Games",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5b13c699af73864aa7000031",
    "name": "FIXME: 1, 2, 3, 4",
    "approved": true,
    "tags": [
      "Bugs"
    ]
  },
  {
    "id": "5bbe26c718ea5d2ffa0000a2",
    "name": "Tap Into Mr. Mxyzinjin's Toy Safe",
    "approved": true,
    "tags": [
      "Puzzles",
      "Cryptography",
      "Security"
    ]
  },
  {
    "id": "5bcd76ef361e50e88600014f",
    "name": "Scrabble word calculator",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Games",
      "Puzzles",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5e452a0a5111c7001faa2a71",
    "name": "Topological Image Processing: 4-Connected Components",
    "approved": true,
    "tags": [
      "Algorithms",
      "Image Processing",
      "Graphics",
      "Logic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "5e74588a25ba6800325e9233",
    "name": "Area of largest rectangle in grid",
    "approved": true,
    "tags": [
      "Algorithms",
      "Games",
      "Logic",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "5ea91813b4702500282042c3",
    "name": "Church Booleans - Prefix is Overrated",
    "approved": true,
    "tags": [
      "Algorithms",
      "Puzzles",
      "Games",
      "Combinators",
      "Functional Programming",
      "Combinatory Logic",
      "Functions",
      "Declarative Programming",
      "Programming Paradigms",
      "Computational Science",
      "Theoretical Computer Science",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Design Patterns"
    ]
  },
  {
    "id": "5f134651bc9687000f8022c4",
    "name": "Repetitive Sequence  - Easy Version ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Data Structures"
    ]
  },
  {
    "id": "5f2dcbbd1b69a9000f225940",
    "name": "A Scandal in Bohemia",
    "approved": true,
    "tags": [
      "Algorithms",
      "Decoding",
      "Logic",
      "Ciphers",
      "Cryptography",
      "Security",
      "Basic Language Features",
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "61e173ccbc916700267ef2ae",
    "name": "Triple Crown",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "52b21970f49607a660000b8f",
    "name": "Santa's Secret Sorting  Sequence ",
    "approved": true,
    "tags": [
      "Algorithms",
      "Hacking Holidays",
      "Sorting",
      "Logic"
    ]
  },
  {
    "id": "52cda638f87aa2b141000935",
    "name": "No 'Math' expression evaluator",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "52f863119ac9ced78b0006ff",
    "name": "ruby + accumulate",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "53006ec8c7c0f4f5e00002c3",
    "name": "Fancy Schmancy Sort",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Sorting",
      "Logic",
      "Utilities",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "530a59904beff5e6bc000046",
    "name": "Approximate e",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5365c93f8d004c94c90002e7",
    "name": "Making Change: Part 2",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5398beaf53f51088a9000fa7",
    "name": "Implementing the Array Object",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "54554526126a00dbc2000823",
    "name": "Sum Up to Target  Non Adjacents elements",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures",
      "Recursion",
      "Algorithms",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "5455697f02fc70135d0008ff",
    "name": "Touchdown?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "54f0d905d49112f3a300055a",
    "name": "Mastermind Hint Pegs",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Games"
    ]
  },
  {
    "id": "55633765da97b266e3000067",
    "name": "Elo rating - one game, one pair",
    "approved": true,
    "tags": [
      "Algorithms",
      "Games"
    ]
  },
  {
    "id": "55e81884a60c4ec2ba00003b",
    "name": "[Riddle made code] Two Spies",
    "approved": true,
    "tags": [
      "Puzzles",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "561d54055e399e2f62000045",
    "name": "Multiples of Ten in a Sequence Which  Values  Climb Up",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Control Flow",
      "Basic Language Features",
      "Data Structures",
      "Sorting",
      "Memoization",
      "Design Patterns",
      "Design Principles"
    ]
  },
  {
    "id": "56748c679c14c10b6e000022",
    "name": "80's Kids #8: The Secret World of Alex Mack",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "567e8f6d8c3d42c057000053",
    "name": "Parse and  count",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "568f9d15bb0d0bf2a8000009",
    "name": "Can you test it for me?",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "571249a0159cde165f00088a",
    "name": "Coding 3min : Count animals",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "571d7ea72b97f286520009bb",
    "name": "Coding 3min : Excel Puzzle #2",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57238e345b21bb8c4b0000fc",
    "name": "Translate anything into French !",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "572a428aca1f70dbab001318",
    "name": "Smart Toaster",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5768b217b8ed4a77c0000c46",
    "name": "T.T.T.#6: nth user",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "576d37f8b1abc4a01c00015a",
    "name": "Kobayashi-Maru-Test",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "578e8fb075ffd1891e000a6a",
    "name": "Milliseconds",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "57a0f354e298a77602000159",
    "name": "Star Triangle",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57cd273ee35eb97735000004",
    "name": "Isn't that a letter too?",
    "approved": true,
    "tags": [
      "Puzzles",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "57df83328a8b8d004600039a",
    "name": "myjinxin's Fairy tales #005 : The little match girl ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57fea63854685b1189000169",
    "name": "Gather generics",
    "approved": true,
    "tags": [
      "Bugs"
    ]
  },
  {
    "id": "582cb38ecd8583b168000114",
    "name": "[BF] Sort string",
    "approved": true,
    "tags": [
      "Algorithms",
      "Esoteric Languages",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "583d71ff28a0c08ee70003fc",
    "name": "Defeat the Elemental Titans",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5901b2f47591f339b5000059",
    "name": "Lexographic sort with a twist",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types",
      "Sorting",
      "Data Structures"
    ]
  },
  {
    "id": "590cb67bc69e3a31d0000042",
    "name": "Learning TypeScript. Classes & Interfaces. Abstract classes",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "591074c7ea12ad515500007e",
    "name": "Simple Fun #255: Visits On Circular Road",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "591d0fd7c09ee0021400005b",
    "name": "Simple Fun #289: Sum The Difference",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "594cc999d3cc8c883a00003b",
    "name": "Simple Fun #323: Bears And Apples",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5962b98c2e8c8b02fa0000b4",
    "name": "Pirate Island Conquer Part 2",
    "approved": true,
    "tags": [
      "Puzzles",
      "Arrays",
      "Data Types",
      "Games"
    ]
  },
  {
    "id": "5977b5bcfd72c6a99f0000c4",
    "name": "Robozzle simulator",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games",
      "Interpreters",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5980de1a17d1fee3db000059",
    "name": "Coffee machine ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games",
      "Advanced Language Features"
    ]
  },
  {
    "id": "59b7b7f0623654c2ce000021",
    "name": "Iterate function",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Advanced Language Features"
    ]
  },
  {
    "id": "59bdd2ed623654184100000f",
    "name": "Proving Trivial Tautologies",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "59c0cd4f46038781010000ac",
    "name": "Maximum and minimum",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59cc2829a7deeb33710005ef",
    "name": "Ransom Note!",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "59ff9d24ffe75f5361000050",
    "name": "Lua is easy: Lesson 6 - Hash",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5a08b22b32b8b96f4700001c",
    "name": "Power tower modulo m",
    "approved": true,
    "tags": [
      "Refactoring"
    ]
  },
  {
    "id": "5a1060d3502672a75d00013d",
    "name": "Who can still  win the Formula One World Championship?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5a1eef6e8ba914408700013e",
    "name": "Mnemonic Lookup",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Objects",
      "Data Types"
    ]
  },
  {
    "id": "5a5071b380eba804a8000058",
    "name": "One Line Task: String Isomorphism",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Optimization"
    ]
  },
  {
    "id": "5a7f6b615084d75df6000032",
    "name": "Bitcoin statistics",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Statistics",
      "Algorithms",
      "Data",
      "Logic",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5a8c4851fd57771903000039",
    "name": "[BF] Memory Limited : Print Last/First Chars (Using only 3 cells)",
    "approved": true,
    "tags": [
      "Puzzles",
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types",
      "Games"
    ]
  },
  {
    "id": "5ace43e046b4cbb3e2000170",
    "name": "Chocolate Party",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Sorting",
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5b036114de4c7facd70000d4",
    "name": "A Man  and his Earthly Measurement",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Geometry",
      "Algebra"
    ]
  },
  {
    "id": "5b275c459212cbe08d0000a6",
    "name": "At Least n Items",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5b2cd515553292a4ff0000c2",
    "name": "Highest Perfect Square with Same Digits",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Performance",
      "Permutations"
    ]
  },
  {
    "id": "5b34ca5791c746079c000067",
    "name": "Concurrent task execution",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Concurrency",
      "Computational Science",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "5b574980578c6a6bac0000dc",
    "name": "Chess Aesthetics",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5b98dfa088d44a8b000001c1",
    "name": "Fluid Volume of a Heightmap",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5bb5e174528b2908930005b5",
    "name": "Last and rich in circle",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic"
    ]
  },
  {
    "id": "5bba2a9940196db222000022",
    "name": "Data Structure #0 True or False",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5c2cea87b0aea22f8181757c",
    "name": "RegEx Like a Boss #4 CodeGolf : Prime length",
    "approved": true,
    "tags": [
      "Algorithms",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5c8b3e55b9d1190016bd3cca",
    "name": "Program Verification #2: Fibonacci numbers",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Theorem Proving"
    ]
  },
  {
    "id": "5e5e8b84549a650011e843b0",
    "name": "The Fiscal Code",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types",
      "Objects",
      "Formatting"
    ]
  },
  {
    "id": "5f2ef12bfb6eb40019cc003e",
    "name": "Folding a cube",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5fa50a5def5ecf0014debd73",
    "name": "Create the QR-Code",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Encoding"
    ]
  },
  {
    "id": "605f4035f38ca800072b6d06",
    "name": "Function Algebra",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "528a6312f51e7ae494000aea",
    "name": "Occurrences in a string",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Utilities"
    ]
  },
  {
    "id": "52cc2bbafb9a9985a700061f",
    "name": "Number.prototype.toDecimal",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Utilities"
    ]
  },
  {
    "id": "52d9b893b2fcb0b76c000029",
    "name": "Movie Agent",
    "approved": true,
    "tags": [
      "Algorithms",
      "Scheduling",
      "Logic",
      "Rules"
    ]
  },
  {
    "id": "558d5c71c68d1e86b000010f",
    "name": "Vampire numbers less than 1 000 000",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "55e4419eb589793709000044",
    "name": "Closest Neighbouring Points I",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Structures",
      "Data Types"
    ]
  },
  {
    "id": "561e5fb89be196932b00003c",
    "name": "Find two doubles for the given sum and product",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Types",
      "Arithmetic"
    ]
  },
  {
    "id": "56dc5a773e5dd6dcf7001356",
    "name": "Thinking & Testing : Sum of 15(Hetu Luosliu)",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5743aa63cce789b2e600034f",
    "name": "Fake website #2: Choose a best server to create website",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57698ec6dd8944888e000110",
    "name": "Increasing Numbers with N Digits",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "57723e8010a0a66d1b0000a0",
    "name": "Vault experience (2): Hack my terminal!",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5793cdce39f33a70160000f5",
    "name": "Basic markdown to HTML",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals"
    ]
  },
  {
    "id": "579f22eee298a765f8000269",
    "name": "The Snake in the Square",
    "approved": true,
    "tags": [
      "Puzzles",
      "Graphs",
      "Data Structures",
      "Games",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "57dab71714e53f4bc9000310",
    "name": "myjinxin katas #001 : Rotate, Remove, Rerurn",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57fa8d4a2c7f926c2200017f",
    "name": "Matrices II: Serious mathematics",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Structures",
      "Algebra",
      "Linear Algebra",
      "Arrays",
      "Data Types",
      "Lists"
    ]
  },
  {
    "id": "5817ce17628854663100052a",
    "name": "String polynomial converter",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "582110dc2fd420bf7f00117b",
    "name": "Devil's Sequence",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "582d4b425f8677cba9000135",
    "name": "PHP in Action #3 - HTTP POST Method, Input Sanitation and Input Validation [Fundamentals]",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "584bc27869ebc5dec7000085",
    "name": "Braille Reader ",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Strings",
      "Logic",
      "Case/Switch Statements",
      "Conditional Statements",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "58595b6f5a8a0713e6000eed",
    "name": "Length of the longest sequence of consecutive integers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "58603c898989d15e9e000475",
    "name": "Master your primes: sieve with memoization",
    "approved": true,
    "tags": [
      "Algorithms",
      "Memoization",
      "Design Patterns",
      "Design Principles",
      "Optimization"
    ]
  },
  {
    "id": "5895326bcc949f496b00003e",
    "name": "Simple Fun #84: Box Blur",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58a6b5f28c08b1e9c40001e7",
    "name": "Challenge Fun #12: Visible Points",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58afc931c6ffb8906100002d",
    "name": "Simple Fun #164: Judge Votes ",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "58d9b332ac20339ecd00015c",
    "name": "Recursive Ninja: Warlords edition",
    "approved": true,
    "tags": [
      "Algorithms",
      "Basic Language Features",
      "Fundamentals",
      "Control Flow",
      "Data Structures",
      "Recursion",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science",
      "Optimization"
    ]
  },
  {
    "id": "58e2c062542a419083000033",
    "name": "Java format Unicode encoder/decoder",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Encoding",
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types",
      "Unicode",
      "Character Encodings",
      "Formats"
    ]
  },
  {
    "id": "5902d5946557c979d7000066",
    "name": "Simple Fun #222: Gold Mine Race",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59073712f98c4718b5000022",
    "name": "Simple Fun #229: Penalty Shots",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "590748ba155e0c1554000001",
    "name": "Simple Fun #230: Axis Aligned Bounding Box",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "591e8c715b1d254f9e00005e",
    "name": "Simple Fun #296: Round And Round",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5927cea3af58a6f111000024",
    "name": "One Line Task: Super Even",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "592a5f9fa3df0a28730000e7",
    "name": "Dark Souls: Prepare To Die - Soul Level",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5945f0c207693bc53100006b",
    "name": "Distinct contiguous elements in every window of size k",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Search",
      "Logic",
      "Performance"
    ]
  },
  {
    "id": "5947d86e07693bcf000000c4",
    "name": "ASCII Fun #3: Puzzle Tiles",
    "approved": true,
    "tags": [
      "Algorithms",
      "ASCII",
      "Character Encodings",
      "Formats"
    ]
  },
  {
    "id": "595bd047b96bed1f59000001",
    "name": "Simple Fun #339: Maximum Product 2",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5977ae37fd72c64008000081",
    "name": "YaCG:  #2  One Trick, One Taker.",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Games",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "59ad0147485a4d9d3f0000a9",
    "name": "Magic Compare",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59c6fa2886a6fd5f820000b4",
    "name": "Template Haskell: Tuple maker",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Metaprogramming",
      "Programming Paradigms",
      "Advanced Language Features"
    ]
  },
  {
    "id": "59cca512d751dfafd8000026",
    "name": "Find The Max Sum Of Contiguous-Submatrix In a Matrix - Challenge Version",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59db31847997cb6d9c000097",
    "name": "Simple Fun #361: Who Is The Hero? I",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59df8cdc49aaab7061000297",
    "name": "Numberless Number Representation",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arithmetic",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "59dfa63727ee00ac4700023d",
    "name": "Equation Discovery",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5a514690d39ec5ab30000119",
    "name": "The Park Ranger's Umbrella",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Fundamentals"
    ]
  },
  {
    "id": "5a54e64fc93142abc6000e19",
    "name": "Shorten Me: Array Declaration X (O-I-II)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5a5ed3d1e626c5140f00000e",
    "name": "Cricket Scores",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5a69c355d8e145757200008b",
    "name": "Shorten Me: Mad Mathematician's Algorithm VI (Power)",
    "approved": true,
    "tags": [
      "Puzzles",
      "Fundamentals",
      "Games"
    ]
  },
  {
    "id": "5a77f76bfd5777c6c300001c",
    "name": "Domino Tiling - 5 x 2N Board",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Dynamic Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5a9d43ceba1bb52492000080",
    "name": "Multicast IP Address to MAC address mapping",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Parsing",
      "Algorithms",
      "Logic",
      "Strings"
    ]
  },
  {
    "id": "5b26047b9e40b9f4ec00002b",
    "name": "Equivalent Dice",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Performance",
      "Numbers",
      "Data Types",
      "Arithmetic",
      "Mathematics",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "5b6d9e478adeae4d62000064",
    "name": "Seeing Shows at the Edinburgh Fringe!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Objects"
    ]
  },
  {
    "id": "5bf71b94e50d1b00590000fe",
    "name": "Counting ASCII Art Squares",
    "approved": true,
    "tags": [
      "Puzzles",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Games"
    ]
  },
  {
    "id": "5c1556f37f0627f75b0000d5",
    "name": "Secret Agent Time Travel Calculations",
    "approved": true,
    "tags": [
      "Algorithms",
      "Dates/Time",
      "Data Types",
      "Conditional Statements",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Ranges"
    ]
  },
  {
    "id": "5c7fdf0b00718714fd002bd2",
    "name": "I'm now 360 degree different from the past",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Theorem Proving",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "5c86de12bc56292fb465c77f",
    "name": "OddsAndEvens: Addition",
    "approved": true,
    "tags": [
      "Algorithms",
      "Theorem Proving"
    ]
  },
  {
    "id": "5d1eb2db874bdf9bf6a4b2aa",
    "name": "Averaging in an Infinite Array",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5ed056c9263d2f001738b791",
    "name": "Group-by and Sum",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5f4cedd11263340029e42111",
    "name": "[BF] Print the rest of the Alphabet",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5f9d63c2ac08cb00338510f7",
    "name": "Cyclic Permutation Spotting",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Recursion",
      "Algorithms",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "5fafdcb2ace077001cc5f8d0",
    "name": "Weigh The List #2",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "6012457c0aa675001d4d560b",
    "name": "Expressing Integers as Sum of Powers of Three",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "60576b180aef19001bce494d",
    "name": "Checkerboard Resolution",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Algebra",
      "Mathematics"
    ]
  },
  {
    "id": "60b9c96dce6b05000eccac7d",
    "name": "[BF] Insert Asterisks",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "60df63c6ce1e7b0023d4af5c",
    "name": "Subsequence Sums",
    "approved": true,
    "tags": [
      "Algorithms",
      "Optimization",
      "Dynamic Programming",
      "Programming Paradigms",
      "Sequences",
      "Arrays",
      "Data Types",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "52e77537ba20f9d51f000486",
    "name": "Combining Records",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "538dc8eb8ca4a3d1c400088f",
    "name": "isInt32(int, byteLength)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Integers",
      "Data Types",
      "Numbers",
      "Bits",
      "Binary",
      "Validation",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "53d8080c22fd98002b0001b4",
    "name": "Haskell scanl function",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "547296ab4481cf300d000573",
    "name": "Church numbers (ii)",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "54ab259e15613ce0c8001bab",
    "name": "self_converge",
    "approved": true,
    "tags": [
      "Algorithms",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Recursion",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "54f1b7b3f58ba8ee720005a8",
    "name": "Constructing finite fields using binary polynoms",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Structures",
      "Algebra",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "5595cd8f1fc2033caa000052",
    "name": "Logic Detective",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Expressions",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "559a9a9ed391015e0700010f",
    "name": "Chocolate problem",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types",
      "Fundamentals"
    ]
  },
  {
    "id": "55d6afe3423873eabe000069",
    "name": "Cracking the Vigenère cipher,  step 1: determining key length",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Cryptography",
      "Security",
      "Ciphers",
      "Logic"
    ]
  },
  {
    "id": "560cd60f215a80dc00000049",
    "name": "Expressive Objects",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Objects",
      "Data Types"
    ]
  },
  {
    "id": "561c34b31dbb1b11640000de",
    "name": "Non Decomposable Primes as Sums of Perfect Squares",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Memoization",
      "Design Patterns",
      "Design Principles"
    ]
  },
  {
    "id": "56b71974bd06e679a800090b",
    "name": "Easy, but Crazy Calculator",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Fundamentals",
      "Data Types",
      "Algebra"
    ]
  },
  {
    "id": "56f214580cd8bc66a5001a0f",
    "name": "Thinking & Testing : Love Forever",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5700c79dc155575b31000265",
    "name": "Shortest code : Balance Attraction",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5735b2b413c205fe39000c68",
    "name": "Shorten IPv6 Address",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5737f14449fc581de9001845",
    "name": "Inner Calls In Recursion I",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5742e725f81ca04d64000c11",
    "name": "Probable Prime or Composite (Much bigger primes)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5763a557f716cad8fb00039d",
    "name": "Graphics Series #3: Repair the LED display",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57761dd0c0276bebab000134",
    "name": "T.T.T.11: Three increasing numbers",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57a06e21e298a7b5ae000229",
    "name": "Is it whitespace?",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57c9359540e302d32700013a",
    "name": "Person type - string representation",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57ca7e9b40e30297d800005c",
    "name": "Scytale encoder/decoder (ancient Spartans cipher)",
    "approved": true,
    "tags": [
      "Refactoring",
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Encryption",
      "Cryptography",
      "Security",
      "Decryption"
    ]
  },
  {
    "id": "57d0695142e44e65e8001346",
    "name": "Infinite list of 1's",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "57df37d31dbd8f298b000165",
    "name": "myjinxin's Fairy tales #004 : Ali Baba and the Forty Thieves III",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57f026cfe77282a4d8000200",
    "name": "Faulty Data Recovery",
    "approved": true,
    "tags": [
      "Algorithms",
      "Data",
      "Arrays",
      "Data Types",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Structures"
    ]
  },
  {
    "id": "58086b6301cf6dcf780005c0",
    "name": "From..To..Series #6: from 1 to arr.length-2. Find the balance points in the array",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5817030088ca96c0b7000083",
    "name": "Find character",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5826ba6822be6e6c82000a36",
    "name": "what John is going to do today?",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5827a4f5ffe0cbcbe600009f",
    "name": "Sloppy Censorship",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "582cff1e37c5585e1400000e",
    "name": "Word Segmentation",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5846aaffdbb1b19d300001fb",
    "name": "Date formatter",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "584d930461e47d4e900000d3",
    "name": "Make a 1 to n sequence",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "585e6eb2eec14124ea000120",
    "name": "Check the status of the generator expression",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58691792a44cfcf14700027c",
    "name": "RPS Knockout Tournament Winner",
    "approved": true,
    "tags": [
      "Algorithms",
      "Games",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Design Patterns",
      "Design Principles",
      "Objects",
      "Data Types",
      "Classes",
      "Basic Language Features",
      "Fundamentals",
      "Logic"
    ]
  },
  {
    "id": "588d5898277e86e2ce000070",
    "name": "JSON Account Updater",
    "approved": true,
    "tags": [
      "Fundamentals",
      "JSON",
      "Formats"
    ]
  },
  {
    "id": "58901ac726bd581274000096",
    "name": "Doubly Linked List",
    "approved": true,
    "tags": [
      "Algorithms",
      "Data Structures",
      "Logic",
      "Fundamentals"
    ]
  },
  {
    "id": "58a2f983562e1e8516000019",
    "name": "My Family (I)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Sets",
      "Arrays",
      "Data Types",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "58ce4e9b360ced9470000106",
    "name": "Reflection in PHP #4 - Puzzle Challenge [Assessment]",
    "approved": true,
    "tags": [
      "Puzzles",
      "Reflection",
      "Metaprogramming",
      "Programming Paradigms",
      "Advanced Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "58d91d5f024c724b50000300",
    "name": "Singly Linked List - Swap Nodes",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Linked Lists",
      "Lists",
      "Data Structures",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "58db721b2f449efaf5000038",
    "name": "License Plate Recognition",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58dbea57d6f8f53fec0000fb",
    "name": "Beggar Thy Neighbour",
    "approved": true,
    "tags": [
      "Algorithms",
      "Games"
    ]
  },
  {
    "id": "58eb35b19925753a750000eb",
    "name": "Simple Drawing Board",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "590926c5579da9e62000003b",
    "name": "Simple Fun #236: Farey Sequence",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "590b93d05902b81f1c0001a3",
    "name": "Computing the complex exponential function",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "591445324670baed3200008d",
    "name": "Learning TypeScript. Classes & Interfaces. Singletons",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Singleton",
      "Design Patterns",
      "Design Principles",
      "Object-oriented Programming"
    ]
  },
  {
    "id": "5934c24ed953868340000014",
    "name": "Simple Fun #316: Buy Fruits",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5938a6a57b952e5b0d000005",
    "name": "Code Adventurer Guild: BeiJing",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "595afed8c52e25d92c000072",
    "name": "Unique(ish)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "59653de51f13e49374000145",
    "name": "Traffic Lights Series - Part 1",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59bbbb7c6236541ecd0000e4",
    "name": "Shrink the maze!",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Logic",
      "Puzzles",
      "Games",
      "Arrays",
      "Parsing"
    ]
  },
  {
    "id": "59c919326bddd238e9000103",
    "name": "Simple Fun #353: Lonely Frog II",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59cdb97172851e2824000094",
    "name": "Algorithm Fun: Find The Unknown Number - Part II",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59eb80eea95427d81a0000fc",
    "name": "Tricky Kotlin #4: prevent StackOverflow",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Recursion",
      "Algorithms",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "59f0dc5ad4b369cec0000106",
    "name": "Lie Detector",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Types",
      "Integers",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "59f61aada01431e8c200008d",
    "name": "Constrained GCD",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5a077e8106d5b654b800004f",
    "name": "Each n-th element of list",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "5a179d4346d843ff1200000c",
    "name": "Untangle list deletion/insertion",
    "approved": true,
    "tags": [
      "Algorithms",
      "Theoretical Computer Science",
      "Optimization",
      "Mathematics",
      "Logic",
      "Numbers",
      "Performance"
    ]
  },
  {
    "id": "5a2d376ec5e2845ec20000bd",
    "name": "Find the lines!",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "5a4076f3e1ce0ee6d4000010",
    "name": "Custom Christmas Tree III: the center of leaves",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games",
      "Strings",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5a770d9a4a6b34ad84000065",
    "name": "Compile Time Prime Number Detection",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arithmetic",
      "Mathematics",
      "Logic",
      "Numbers",
      "Metaprogramming",
      "Programming Paradigms",
      "Advanced Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "5ac3c7ca034a0b3227001ad5",
    "name": "FromPascalToCpp",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Bugs"
    ]
  },
  {
    "id": "5af5c18786d075cd5e00008b",
    "name": "Eight ways to iterate over table",
    "approved": true,
    "tags": [
      "Algorithms",
      "Tables",
      "Data Structures",
      "Iterators",
      "Control Flow",
      "Object-oriented Programming",
      "Basic Language Features",
      "Fundamentals",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5b254b2225c2bb99c500008d",
    "name": "Promenade Fractions (from BIO 2016)",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5b609dbf6d0db7ca6300069e",
    "name": "Takeshi's Castle Spy: Knock Knock",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5be8e1bb88c754481f000466",
    "name": "One Line Task: Simple Moon Rating",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5c824b7b9775761ada934500",
    "name": "Right Truncatable Harshad numbers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5df7a5ddc6ba51002822cf00",
    "name": "How many Wagons Are in the Train?",
    "approved": true,
    "tags": [
      "Puzzles",
      "Algorithms",
      "Logic",
      "Games",
      "Lists",
      "Data Structures",
      "Linked Lists"
    ]
  },
  {
    "id": "5e320fe3358578001e04ad55",
    "name": "One line task: Is the King in check ?",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5e41c408b72541002eda0982",
    "name": "Multi Line Task: Hello World (Easy one)",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5e539724dd38d0002992eaad",
    "name": "Rectangle Cipher Puzzle",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Ciphers",
      "Algorithms",
      "Cryptography",
      "Logic",
      "Security",
      "Encryption"
    ]
  },
  {
    "id": "5e95b6e90663180028f2329d",
    "name": "RPG Simulator - Defeat the Demon Lord! [Part 1]",
    "approved": true,
    "tags": [
      "Algorithms",
      "Games"
    ]
  },
  {
    "id": "5f2f0754a28d9b0010f17e72",
    "name": "Frequencies of musical notes",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Parsing",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5f8219c1ae0eb800291c50c1",
    "name": "Divide into palindromes",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Fundamentals"
    ]
  },
  {
    "id": "5f845fcf00f3180023b7af0a",
    "name": "Minus 1:  is divisible?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Performance"
    ]
  },
  {
    "id": "60416d5ee50db70010e0fbd4",
    "name": "Nth Root Equals Digit Sum",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "605721e922624800435689e8",
    "name": "Generate All Possible Matches",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Recursion",
      "Algorithms",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "61055e2cb02dcb003da50cd5",
    "name": "Pair items from two lists of different lengths",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "615b636c3f8bcf0038ae8e8b",
    "name": "Kingdoms Ep2:  The curse (normal)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Basic Language Features",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "525d87d2a1b088366a000f7c",
    "name": "Hardy's taxi (generalized)",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "52af840e0b1d45d45f000078",
    "name": "Definitely Naughty or Probably Nice?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Hacking Holidays"
    ]
  },
  {
    "id": "52cc64baae8d3d803e0007a3",
    "name": "Natural compare",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5307f5c8588fe6026b000057",
    "name": "Approximate derivative",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5426006a60d777c556001aad",
    "name": "Dithering",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "55412f7a350768e824000154",
    "name": "Let's do the laundry!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Interfaces",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Inheritance",
      "Polymorphism"
    ]
  },
  {
    "id": "5547d1576ab6fc7cda000096",
    "name": "Give me my booleans, Mr. Hash!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Conditional Statements",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "55920ca0e215320784000039",
    "name": "Factors of triangle numbers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "55f9ee4d8f3bbabf2200000c",
    "name": "MONTE CARLO 3D",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Data Structures",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "566d5cf8001db71d7b000022",
    "name": "Bingo Number Caller",
    "approved": true,
    "tags": [
      "Algorithms",
      "Games",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "566ddc46e6a3a07ebe00003a",
    "name": "Find Similarities in Lists",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "569e0814422bda6cc1000046",
    "name": "Graphics 02: Drawing Circles",
    "approved": true,
    "tags": [
      "Algorithms",
      "Graphics",
      "Logic"
    ]
  },
  {
    "id": "56f6380a690784f96e00045d",
    "name": "Bridge Puzzle",
    "approved": true,
    "tags": [
      "Puzzles",
      "Recursion",
      "Algorithms",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "57035ec8e55d30a4390008cb",
    "name": "Array Cropper",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5706f1b4fb3008814d0013d2",
    "name": "Approving Kata",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57070eff924f343280000015",
    "name": "Coding 3min : Waiting for a Bus",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "571943d59906affd0b001078",
    "name": "Find the biggest piece of gold",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "572a0fd8984419070e000491",
    "name": "Pandigital Powers",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Algorithms",
      "Logic",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Optimization",
      "Declarative Programming",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "573012342713bf4cb4000e79",
    "name": "String to Integer Hash",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Encoding",
      "Logic"
    ]
  },
  {
    "id": "576260cc784ead319a00052d",
    "name": "Graphics Series #1: barcode EAN-13 part1",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "577ce2c97a3dbd74b7000059",
    "name": "Determine sizeof C datatype - Beginner (No prior C knowledge required)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Recursion",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "57946a671ace7f940a000031",
    "name": "Thinking & Testing  #38: What's the \"?\"",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57b2cef5d2a31c3965000a43",
    "name": "T.T.T.40: m to n % 9",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57b4da8eb69bfc1b0a000b44",
    "name": "Dodge The Birds",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57c671eaf8392d75b9000033",
    "name": "T.T.T.56: Make a monthly calendar board",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57dde8f7f6df9b27cd001324",
    "name": "myjinxin katas #002 : Hotel room number",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5820e17770ca28df760012d7",
    "name": "Sort a massive list of strings (hard)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Data Structures",
      "Logic",
      "Sorting"
    ]
  },
  {
    "id": "582b079bbbbc74bed7000095",
    "name": "Vectors #1",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Dynamic Arrays",
      "Arrays",
      "Functional Programming",
      "Data Types",
      "Declarative Programming",
      "Programming Paradigms",
      "Vectors",
      "Object-oriented Programming"
    ]
  },
  {
    "id": "5831caa9fe3801522300000c",
    "name": "Min value of each n elements -- Challenge version",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "583c9a256e3994d1bf000638",
    "name": "PPAP",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "583d6cf7c23341eee900025b",
    "name": "The maximum sum value of ranges -- Ultimate version",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5840cf83258e10d8c600005e",
    "name": "Find number in an array # 3",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "584425e1101928a1bc00003b",
    "name": "Two arrays -- Zero rows and zero columns",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "586d0fa8aa04283824000218",
    "name": "Extension GroupWhile  consecutive by the condition items",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "58790047446b034b8500002a",
    "name": "Kaprekar's Routine",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "58b626ee2da07adf3e00009c",
    "name": "Simple Fun #171: Get Candy Position",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5906bc3e59a2f7d14e000048",
    "name": "Simple Fun #227: Liquid Mixing",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59074d68cc21024b4300006d",
    "name": "One Line Task: Snail Coordinate",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5907f9032e5646e409000001",
    "name": "Simple Fun #232: Professional Categorization",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "590b85b745eaa415e10000b1",
    "name": "Learning TypeScript. Classes & Interfaces.  Setters",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5912950fe5bc241f9b0000af",
    "name": "Photoshop like - Magic Wand (select pixels by threshold)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Image Processing",
      "Graphics",
      "Logic"
    ]
  },
  {
    "id": "59138d93eefeaecdbe000031",
    "name": "Learning TypeScript. Classes & Interfaces. Inheritance",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "591d4aeea6007e95ba0000e7",
    "name": "Simple Fun #292: Primiest Number",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "592541dd071ba5bbd800001d",
    "name": "Simple Fun #304: Garbage Bomb",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59267e389b424dcd3f0000c9",
    "name": "Vending Machine - FSA",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5981821bcf492eb87b000034",
    "name": "Even  fusc fun",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5996c7bbbfccc757d300005e",
    "name": "[ BF ] [ Is UpperCase? ]",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "59a2666349ae65ea69000051",
    "name": "Tolkien's Book Cart",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "59a6d020485a4df315000117",
    "name": "Driving Circles",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59c35ba16bddd219ee000082",
    "name": "Perimeter of Fibonacci Rectangle",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "59c804d923dacc6c41000004",
    "name": "Draw a Circle.",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Logic"
    ]
  },
  {
    "id": "59ea10e87729993f87001647",
    "name": "Roman Numerals ",
    "approved": true,
    "tags": [
      "Puzzles",
      "Advanced Language Features",
      "Fundamentals",
      "Games"
    ]
  },
  {
    "id": "59ea65dc2a7accaf45000058",
    "name": "Prefix Permutation",
    "approved": true,
    "tags": [
      "Algorithms",
      "Performance"
    ]
  },
  {
    "id": "59f2e89601601434ae000055",
    "name": "Fix the pipes ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "5a6ccef6b17101c74900004e",
    "name": "Codenames - matrix conversions",
    "approved": true,
    "tags": [
      "Algorithms",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "5adf5b6a2f10c6c4bc000200",
    "name": "Happy Numbers (performance edition)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Performance"
    ]
  },
  {
    "id": "5ae164eda74eaf3ffe00010f",
    "name": "How long is the cable? ",
    "approved": true,
    "tags": [
      "Algorithms",
      "Exception Handling",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Logic",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5b72970db3d977e0f9000030",
    "name": "Crossed words",
    "approved": true,
    "tags": [
      "Puzzles",
      "Strings",
      "Data Types",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5b8ea6bbcc7c0335f80001a9",
    "name": "\"Shoot But As I've Seen It In My Imagination\"",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Arrays",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Algebra"
    ]
  },
  {
    "id": "5baf21542d15ec9453000147",
    "name": "Megamind",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Games"
    ]
  },
  {
    "id": "5c86f708f545a031075e6b2a",
    "name": "OddsAndEvens: Multiplication",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5c8f5d3a542ce10001c284c3",
    "name": "Magic is Commutative",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5c9d62cbf1613a001af5b067",
    "name": "Radix Tree",
    "approved": true,
    "tags": [
      "Algorithms",
      "Data Structures"
    ]
  },
  {
    "id": "5d6eef37f257f8001c886d97",
    "name": "Stable Weight Arrangement",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5d72704499ee62001a7068c7",
    "name": "Odder than the rest - 2",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5f8fb3c06c8f520032c1e091",
    "name": "Blobservation 2: Merge Inert Blobs",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Fundamentals",
      "Programming Paradigms"
    ]
  },
  {
    "id": "615da209cf564e0032b3ecc6",
    "name": "Regex matching all positive numbers below n",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "617ae98d26537f000e04a863",
    "name": "Mountain map",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "513e82ffc600c93cef000003",
    "name": "CoffeeScript Comprehensions",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Arrays",
      "Data Types",
      "Mapping",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "533ee21f69fcbb36110001d5",
    "name": "Digit-by-digit number",
    "approved": true,
    "tags": [
      "Refactoring"
    ]
  },
  {
    "id": "5431c3be70d4b064750003c4",
    "name": "Live and Let Dice ...roll",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Games",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "55675eb82a2ca0bcd300006d",
    "name": "[Geometry B -1] Point in a triangle?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Logic"
    ]
  },
  {
    "id": "557a5682f896b5c1eb000048",
    "name": "Secret Agent - Discriminate Missions",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Arrays",
      "Data Types",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "55a4f1f67157d8cbe200007b",
    "name": "Count the Islands",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Graphics",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "55a85659b0e763acc2000015",
    "name": "Broken Image - Puzzles #1",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "55f9439929875c58a500007a",
    "name": "Program hangs!",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56476f87ccf79c844800005e",
    "name": "Equation in form of objects' List",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5649f24d0bcc755765000084",
    "name": "Touching Rectangles",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals"
    ]
  },
  {
    "id": "567610d21541a88876000024",
    "name": "ThetaFormulation",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56c50206dd8e23e8bc0023b2",
    "name": "Gotta start somewhere - Code Tracker #1",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56c6ca817e38e9d1190005a7",
    "name": "Beautiful STAR",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "56d08f810f9408079200102f",
    "name": "Navigating a Maze",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "56d52f9901936c8d55000224",
    "name": "Crazy programmer 03: Must  praise",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "56df605f2ebcd54c4d000335",
    "name": "Receiving integers as bytes",
    "approved": true,
    "tags": [
      "Algorithms",
      "Data Types"
    ]
  },
  {
    "id": "56e02d5f2ebcd50083001300",
    "name": "Change detection decorator",
    "approved": true,
    "tags": [
      "Algorithms",
      "Decorator",
      "Design Patterns",
      "Design Principles",
      "Object-oriented Programming"
    ]
  },
  {
    "id": "56fb9da2fca8b9d7de00083f",
    "name": "Find the Most Probable Sum Value or Values, in Rolling N-dice of n Sides",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Algorithms",
      "Logic",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Numbers",
      "Statistics",
      "Data",
      "Data Types",
      "Optimization",
      "Declarative Programming",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "56fc7a29fca8b900eb001fac",
    "name": "Shortest Code: Collatz Array(Split or merge)",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57035af2d80ec6cdb40008ed",
    "name": "Shortest code : Tidy up the room",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5713a7ff8807941cf7000a13",
    "name": "Longest Repeated DNA Motif",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5716f027672b2063bb000517",
    "name": "Coding 3min : Half it III",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "575c29d5fcee86cb8b000136",
    "name": "Play PacMan : Devour all",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57d0dd58eca260728900140d",
    "name": "0 to 100, real quick!",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "580311daab6c20e1ba000a9d",
    "name": "Implement Array#transpose!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "580ee4f2df9127927c0000be",
    "name": "Rockin' Robin",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic"
    ]
  },
  {
    "id": "58216d66b81f7094e000001f",
    "name": "Find a word sequence",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "582c39d63fd1cc62790002a7",
    "name": "[BF] Quine",
    "approved": true,
    "tags": [
      "Puzzles",
      "Esoteric Languages"
    ]
  },
  {
    "id": "583d704a70407fcb43000443",
    "name": "Alfred's Laundry Robot",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "583dbc028bbc0446f500032b",
    "name": "Wood Cut",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5871690ba44cfc0834000303",
    "name": "Family Tree - Ancestors",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "58813b22647b4ccdb80000ca",
    "name": "Graph Operations, part 2: Your distance from a colleague",
    "approved": true,
    "tags": [
      "Algorithms",
      "Graphs",
      "Data Structures",
      "Logic"
    ]
  },
  {
    "id": "5884a4642a8d88df67000026",
    "name": "The Social Network",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Graphs",
      "Data Structures",
      "Algorithms",
      "Logic",
      "Design Patterns",
      "Design Principles"
    ]
  },
  {
    "id": "58a3b7185973c23795000049",
    "name": "Simple Fun #123: DPC Sequence",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58b8e11f60873d9068000110",
    "name": "One Line Task: Pyramid Matrix",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58e2f8d9f443daa190000031",
    "name": "Unofficial  FCC Challenge -- Basic Algorithm Scripting -- Reverse a String",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "590ac5d9d1d7061409000014",
    "name": "One Line Task: Strange Compare",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5922732862886e93d8000020",
    "name": "Simple Fun #298: \"Hoop\" Game",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "592eda9b780182b2f7000108",
    "name": "Convert SQL Query Output to CSV",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "5936c859b165cf66c2000045",
    "name": "Readable N choose K",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "595a1cd5ae807b48d7000034",
    "name": "Naive subarray",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic",
      "Data Structures",
      "Arithmetic",
      "Mathematics",
      "Numbers",
      "Performance"
    ]
  },
  {
    "id": "5970fc389f4a1ce8de000061",
    "name": "Drawing a cube",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "ASCII",
      "Character Encodings",
      "Formats",
      "Games"
    ]
  },
  {
    "id": "59aac10dd0a5ff951100002a",
    "name": "Sort array by sorting its smallest sub-array",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "59bb88b84603877db400003b",
    "name": "Good words",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59d323b723dacc7446000090",
    "name": "One Line Task: Chords",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "59e255c07997cb248500008c",
    "name": "How long each order will take",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5a03157f8ba914fcf50000d4",
    "name": "Who wins the card game?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Objects",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "5a0616c746d84380110000a8",
    "name": "Lua is easy: Lesson 5 - Arrays ",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a07620780171f61ff0000cb",
    "name": "When's the next train to Brighton? ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5a08c3c046d8437d6400004f",
    "name": "Palindromic Mnemonics",
    "approved": true,
    "tags": [
      "Algorithms",
      "Type Conversion",
      "Logic",
      "Data Types",
      "Objects"
    ]
  },
  {
    "id": "5a50a20fd39ec527b2000011",
    "name": "Tricky Kotlin #6: Reified generic argument for classes",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Advanced Language Features",
      "Tips & Tricks"
    ]
  },
  {
    "id": "5a89cdf1ba1bb5f3a300062e",
    "name": "Implementing a LINQ MinBy operator",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5a90f6d457c5624ecc000012",
    "name": "Next smaller pronic",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5aa41082fd8c060a51000043",
    "name": "(De)Serialize and (De)Compress!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Marshalling/Serialization",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5acf6061307eb22aff000162",
    "name": "Binary Tree Top Line",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5adadcb36edb07df5600092e",
    "name": "Count up the points for the 7 Wonders board game! Easy version",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5b029d9dde4c7f01600001ad",
    "name": "Fix the robot and save the secret Mars base",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Operators"
    ]
  },
  {
    "id": "5b258cf6d74b5b7105000035",
    "name": "Find the most adjacent integers of the same value in a grid",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5b48a8b20fb337dd040002ca",
    "name": "Bet payout calculator",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5b4fd549bdd074f9a200005f",
    "name": "Going backwards: Number from every possible sum of two digits",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5b598ad0578c6ae27e00002b",
    "name": "Thirsty Robot (Updated)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5c0add5385e9ff582900000c",
    "name": "Find the Location for the Wildlife Study",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "5ca3fcc8f7fb0800201ba88f",
    "name": "Introduction to bijection, cardinality, and infinite sets",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Theorem Proving",
      "Set Theory",
      "Mathematical Logic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Sets"
    ]
  },
  {
    "id": "5e10ae1cdf8a12001da16779",
    "name": "Phone Screen Organizer",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Objects"
    ]
  },
  {
    "id": "5e52946a698ef0003252b526",
    "name": "1 Dimensional cellular automata",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5ea2a798f9632c0032659a75",
    "name": "Pandas Series 102: Max From Common DataFrames",
    "approved": true,
    "tags": [
      "Fundamentals",
      "pandas",
      "Python Packages"
    ]
  },
  {
    "id": "5ecb44975864da0012572d5c",
    "name": "Web Scraping: Find Every Link to Another Wikipedia Article in a Wikipedia Article",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5efdde81543b3b00153e918a",
    "name": "Unusual Cipher",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Ciphers",
      "Algorithms",
      "Cryptography",
      "Logic",
      "Security"
    ]
  },
  {
    "id": "5f5bef3534d5ad00232c0fa8",
    "name": "Topology #0: Converging Coins",
    "approved": true,
    "tags": [
      "Algorithms",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "5fe26f4fc09ce8002224e95d",
    "name": "The Dots and Parentheses",
    "approved": true,
    "tags": [
      "Puzzles",
      "Algorithms",
      "Logic",
      "Games",
      "Strings",
      "Data Types",
      "Numbers"
    ]
  },
  {
    "id": "602d1d769a1edc000cf59e4c",
    "name": "Weather prediction",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "607218fd3d84d3003685d78c",
    "name": "Linear Color Gradient",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "619d3f32156bbd000896463c",
    "name": "100 prisoners and a light bulb",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "622a6a822494ab004b2c68d2",
    "name": "bread sandwiches",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Parsing",
      "Logic"
    ]
  },
  {
    "id": "5264c6495fda8eca2e000042",
    "name": "ISRC - Significant Figures",
    "approved": true,
    "tags": [
      "Algorithms",
      "Formats",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "52bd4ee7182a1f82720001e3",
    "name": "Rudolph to the rescue",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "52d4862dae18a44bf500016b",
    "name": "Lagrange Interpolation",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "537e2f99be93a055e5000012",
    "name": "Throttle a Function",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Advanced Language Features",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "548f0d3dcd683c394f0007d4",
    "name": "Football League Table System",
    "approved": true,
    "tags": [
      "Algorithms",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Fundamentals",
      "Programming Paradigms",
      "Arrays",
      "Data Types",
      "Methods",
      "Functions",
      "Control Flow"
    ]
  },
  {
    "id": "54be8c92f57794fc2f000aeb",
    "name": "Map With Empty Fallback",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "54e0816286522e95990007de",
    "name": "Context manager decorator",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Advanced Language Features"
    ]
  },
  {
    "id": "54fdc227762e2ec4c50004e8",
    "name": "Draw a line",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "551115c5ce486ce707000487",
    "name": "Hamming(7,4) code - Message encoding",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "551d9695bf4e5283c70005b9",
    "name": "The Student and the Fizzled Calculator (Check whether a product is smaller than a certain number)",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "552fc8d81b59b6b4820000a4",
    "name": "Arrays are Objects",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Objects"
    ]
  },
  {
    "id": "555c7fa8d8cb57834a000028",
    "name": "Intro to Statistics - Part 1: A Five figure summary",
    "approved": true,
    "tags": [
      "Algorithms",
      "Statistics",
      "Data",
      "Logic"
    ]
  },
  {
    "id": "56085481f82c1672d000001f",
    "name": "Finding the Closest Maximum Values of a Function to an Upper Limit",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Functions"
    ]
  },
  {
    "id": "561e77b73277d394e4000043",
    "name": "The Queen Of Hearts Challenge",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "56876fd23475fa415e000031",
    "name": "Chess position parser (FEN)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Parsing",
      "Logic",
      "Strings",
      "Unicode",
      "Character Encodings",
      "Formats"
    ]
  },
  {
    "id": "56898ff4c115980dd8000051",
    "name": "Library Opening Times",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57080dfa7700cd9e6d000365",
    "name": "Sweeping trees",
    "approved": true,
    "tags": [
      "Algorithms",
      "Trees",
      "Data Structures",
      "Graphs",
      "Logic",
      "Optimization"
    ]
  },
  {
    "id": "57104927d860a31eab000b5d",
    "name": "Shortest Code : Remove screws II",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5713338968e0cf779b00096e",
    "name": "Find Amount of Certain Combinations than its Sum of Elements Are Within a Given Range",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Control Flow",
      "Basic Language Features",
      "Data Structures"
    ]
  },
  {
    "id": "574ea183ff5b0ad83b0007bb",
    "name": "DOS era #1: Help!!!",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "577f57d7e555335c0d0003a9",
    "name": "Sales report",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57a7cb5f53ba3350c60000e7",
    "name": "Pagination control - Showing page numbers",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "57b1d750b69bfcf231000204",
    "name": "T.T.T.37: Reversal of Collatz",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57bd659c9d9dcf01460002a0",
    "name": "T.T.T.46: Removes 3 elements from an array to get the specified average",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57de888c758d9ebfd7000061",
    "name": "Angle between two planes",
    "approved": true,
    "tags": [
      "Algorithms",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Logic",
      "Fundamentals"
    ]
  },
  {
    "id": "57deb6a8f6df9befb2000013",
    "name": "myjinxin's Fairy tales #003 : Ali Baba and the Forty Thieves II",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5804acd4e053562b5f00004d",
    "name": "2-Sum Sums",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "58062572a4647eb3f50002e5",
    "name": "Product of Adjacent Grid Numbers",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "584290b1a87f76e8930000ae",
    "name": "One graph or multiple ones ?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Graphs",
      "Data Structures",
      "Data Types"
    ]
  },
  {
    "id": "58544b74c029e204ec000059",
    "name": "Visa application centre",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "585aa2473d357ba593000213",
    "name": "Is there a floating number here?",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "585e3bec6d36a5cad5000103",
    "name": "Generate BF Program from Target Output - Challenge Edition",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "586d9a71aa0428466d00001c",
    "name": "Happy traveller [#1]",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "586e6b54c66d18ff6c0015cd",
    "name": "Splitting the Workload (part II)",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "58a300b01e6f21b5dd001474",
    "name": "Refactor out a switch-statement using polymorphism",
    "approved": true,
    "tags": [
      "Refactoring",
      "Fundamentals",
      "Polymorphism",
      "Object-oriented Programming",
      "Prototype-based Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "58ea7328d986f6b1d3000025",
    "name": "Brian's Brain",
    "approved": true,
    "tags": [
      "Algorithms",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "5913f53a4ef30521ab00002e",
    "name": "Simple Fun #266: K Bits Digits",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Fundamentals"
    ]
  },
  {
    "id": "59264edbd771a7e7e60000b6",
    "name": "Simple Fun #306: Super Brain",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5951fad4e57e415138000046",
    "name": "Simple Fun #330: The Selling Price",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "598a48baae35d17bc500001d",
    "name": "Fame Of All",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5992757ab2555777fb000067",
    "name": "Integer to Nested Structure",
    "approved": true,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5993e6f701726f0998000030",
    "name": "Insane Increasing or Decreasing Numbers",
    "approved": true,
    "tags": [
      "Puzzles",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Games",
      "Performance"
    ]
  },
  {
    "id": "599cf86d01a4108584000064",
    "name": "Happy Coding : a Spy On the Train",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59cc4c5aaeb284b9a1000089",
    "name": "Simple Fun #357: Show The Digits",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "59ccf921a25c8c96460000ff",
    "name": "Find The Max Sum Of Contiguous-Submatrix In a Matrix - Ultimate Version",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59f74e427c7b62bc0d0000bf",
    "name": "Word Search Puzzle Challenge",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Search",
      "Puzzles",
      "Games",
      "Fundamentals"
    ]
  },
  {
    "id": "5a02d82ae4335ac3580021a4",
    "name": "Surf is Up!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5a2f92621f7f701e02000097",
    "name": "Meta-Kata: Duplicate Detector v0.1",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a329437ee1aae536b0001cb",
    "name": "One Line Task: Digits Average",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5a3f61bab6cfd7acbc000001",
    "name": "The largest \"mirror\"",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types",
      "Numbers",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "5a4d0beffd56cb02cf000108",
    "name": "Minesweeper: neighboring cells",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Graphs",
      "Data Structures",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5a7322e7b17101d2a3000a3c",
    "name": "[BF] Draw Triangle",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5a90bc1fba1bb5aae800007e",
    "name": "Continuation in arguments, part 1",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Continuations",
      "Control Flow",
      "Control States",
      "Basic Language Features"
    ]
  },
  {
    "id": "5af31e67252e668be2000120",
    "name": "Compose protocol packet",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Memory",
      "Formatting",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5b05867c87566a947a00001c",
    "name": "Minimum and Maximum Product of k Elements - Advanced",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Lists",
      "Data Structures",
      "Performance"
    ]
  },
  {
    "id": "5b1fa8d92ae7540e700000f0",
    "name": "can you guess what it is ?",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5b4e9d82beb865d4150000b1",
    "name": "I said the word WOULD instead of  WOULDN'T",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5b89e7ce5ed7d48a220000b5",
    "name": "Cross the Bridges",
    "approved": true,
    "tags": [
      "Algorithms",
      "Performance",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "5b8c055336332fce3d00000e",
    "name": "Recamán Sequence Sum",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5b983dcd660b1227d00002c9",
    "name": "Strange roman numbers",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5b9a6d77d16ffeea92000102",
    "name": "Ferry Loading",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5bc5c064eba26ef6ed000158",
    "name": "Silent Import",
    "approved": true,
    "tags": [
      "Puzzles",
      "Modules",
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5bc9bc4e703b2d2081000001",
    "name": "The Baby Years II - Poo Roulette",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "5c258f3c48925d030200014b",
    "name": "Toothpick Sequence",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Sequences",
      "Arrays",
      "Data Types",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "5c3d3b73c48b71654d5eb15c",
    "name": "Bob's Treasure Map",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5c6cabe8ea8d326d7e216029",
    "name": "One Line Task [Haskell]: 100 times...",
    "approved": true,
    "tags": [
      "Puzzles",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "5c8689c6a2fc6d518df4b59c",
    "name": "List concatenation is injective? Prove it!",
    "approved": true,
    "tags": [
      "Puzzles",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Lists",
      "Data Structures",
      "Theorem Proving"
    ]
  },
  {
    "id": "5cb99d1a1e00460024827738",
    "name": "Forgiving Numbers",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "5d5f5f25f8bdd3001d6ff70a",
    "name": "Histogram - V2",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5d9b52214a336600216bbd0e",
    "name": "Zombie Apocalypse: the Last Number Standing",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5db19d503ec3790012690c11",
    "name": "Architect's Dream: drawing curves, observing, thinking",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5e18743cd3346f003228b604",
    "name": "How many nines?",
    "approved": true,
    "tags": [
      "Puzzles",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5f1891d30970800010626843",
    "name": "Multiply to `n`",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Logic",
      "Algebra",
      "Performance"
    ]
  },
  {
    "id": "5f24315eff32c4002efcfc6a",
    "name": "Python Recipes #1 : Function Overloading",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Metaprogramming",
      "Programming Paradigms",
      "Advanced Language Features"
    ]
  },
  {
    "id": "5f5fffc4f6b3390029a6b277",
    "name": "Utf-8: Binary Encoding",
    "approved": true,
    "tags": [
      "Algorithms",
      "UTF-8",
      "Character Encodings",
      "Formats",
      "Unicode",
      "Decoding",
      "Logic",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5fbfa1f738c33e00082025e0",
    "name": "Yet another Collatz kata",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Sequences",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5ff369c8ee41be0021770fee",
    "name": "Table Builder",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Utilities",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "6021ab77b00bf1000dd276d3",
    "name": "[Code Golf] Leyland Numbers",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "61fef3a2d8fa98021d38c4e5",
    "name": "Card Game",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "52a401f1a65172ce8f00008d",
    "name": "Touchdown?",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "52f3cbc295d6bf9c3d00241b",
    "name": "Towers of Hanoi",
    "approved": true,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science",
      "Games"
    ]
  },
  {
    "id": "531d8fad5bb894fcf000041a",
    "name": "Time Interval",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Dates/Time"
    ]
  },
  {
    "id": "552024f62ff85203b5000d80",
    "name": "Sequences",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Fundamentals"
    ]
  },
  {
    "id": "552b1404db0236b2cb0006f4",
    "name": "Seating arrangement at a Polyglot Summit",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "554a0d57aa3632cb4e000051",
    "name": "Array#each_count",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Hashes",
      "Data Structures",
      "Metaprogramming",
      "Programming Paradigms",
      "Advanced Language Features"
    ]
  },
  {
    "id": "556032250449c422d200004a",
    "name": "Treasure hunt",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Maps",
      "Data Structures",
      "Map/Reduce"
    ]
  },
  {
    "id": "55e61967663140aafb0001d6",
    "name": "Primes in the Last Digits of Huge Numbers",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Data Structures",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "563b39ea56e3a20b70000048",
    "name": "GrandChild get the habit from Uncle",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Inheritance",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Polymorphism"
    ]
  },
  {
    "id": "56782b25c05cad45f700000f",
    "name": "Polynomial Evaluation - Binomial Form",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5683159a9b217ced2000003d",
    "name": "Darwin Theory",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56f3ca069821793533000a3a",
    "name": "Next level string padding",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Utilities"
    ]
  },
  {
    "id": "5701e26c86306aa45f001847",
    "name": "hidden key",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5706db5e4f2c295c0f000949",
    "name": "String formatter",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5710a8fd336aed00d9000594",
    "name": "Coding 3min : Remove screws II",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "571d946faa2dcbe939000df4",
    "name": "Fastest Code : Excel Puzzle #2",
    "approved": true,
    "tags": [
      "Algorithms",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "576af5056a3efe4b130020bd",
    "name": "Basic neural networks - Machine Learning #2",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Machine Learning",
      "Algorithms",
      "Applied Computer Science",
      "Logic",
      "Neural Networks",
      "Networks",
      "Games"
    ]
  },
  {
    "id": "5777c546886a0e215200008f",
    "name": "T.T.T.13: A game named \"Five,Ten,Fifteen,Twenty\"",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "579964fc4be912cdf70002b4",
    "name": "Training Random Testcases #2: Palindrome string",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "57a06c1b7cb1f3e15b00082b",
    "name": "Is it a digit?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "57a4a5ca72292daeea0001c3",
    "name": "T.T.T.21: Handle the text alignment",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57c500840fe14391e200082b",
    "name": "T.T.T.54: Playing Rock Paper Scissors with Doraemon",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57d60e5476da831f5600011e",
    "name": "#7: Fruit Ninja II",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57d775931a628290bf001935",
    "name": "Are You a One-Liner? #3:  A4 Paper",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57e0e52c8a8b8dfa6c0000b7",
    "name": "PHP in Action #2 - HTTP GET Method [Fundamentals]",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "580115e197917fe18c000027",
    "name": "DotNotation Transformer",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Hashes",
      "Data Structures"
    ]
  },
  {
    "id": "5820dc06b81f700f98000288",
    "name": "Simplify Unique",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "582806c7e03d81de07000975",
    "name": "Fill an array with numbers and their square",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Numbers"
    ]
  },
  {
    "id": "5831a1d3a31721767b000120",
    "name": "Hand-held text scanner",
    "approved": true,
    "tags": [
      "Puzzles",
      "Algorithms",
      "Logic",
      "Games"
    ]
  },
  {
    "id": "58687d7d81e0e8849c00006a",
    "name": "My daughter's math test questions -- Part 1",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "587385520e9cf3c355000108",
    "name": "Text IFS (Iterated Function System)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "5889fe09f32a8ec33c000014",
    "name": "Graph Operations, part 3: Friendly departments at work",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Graphs",
      "Data Structures",
      "Algorithms",
      "Logic",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "58958ef541c9794213000090",
    "name": "Simple Fun #90: Rows Rearranging",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58980e288927f7f6e300001b",
    "name": "Simple Fun #98: Day Of Week",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58981e716551af31b100063f",
    "name": "Simple Fun #101: Regular Months",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58982a388927f70d8b000111",
    "name": "Simple Fun #103: New Holiday",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "589c8e6f7bbf64ca8d00073d",
    "name": "Graph Operations, part 4: Is it connected?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Graphs",
      "Data Structures",
      "Logic",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "589e2af835999cbe2f000229",
    "name": "Magic Dice: Who wins?",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "58b3a0d6eea87e6b76000044",
    "name": "Simple Fun #168: RSA Super Key Generator",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58e6d83e19af2cb8840000b5",
    "name": "Knight's Attack! ",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5910b92d2bcb5d98f8000001",
    "name": "Identify frames in an image ",
    "approved": true,
    "tags": [
      "Algorithms",
      "Image Processing",
      "Graphics",
      "Logic"
    ]
  },
  {
    "id": "591b3ca0e0f838dfea0000bf",
    "name": "How deep do these trees even go?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Trees"
    ]
  },
  {
    "id": "594a2d1ba8a4a534920000c1",
    "name": "Simple Fun #322: Scratch lottery III",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5959df61cc30ac2f03000046",
    "name": "Simple Fun #338: The Sum Of Prime Distance",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "596d2447c4a959794d000007",
    "name": "One Line Wonder: Sum All Even Fibonacci Numbers",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "59a8dc83ba7b60426b000059",
    "name": "Vector Operations and Functionals",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Linear Algebra",
      "Algebra",
      "Dynamic Arrays",
      "Arrays",
      "Functional Programming",
      "Data Types",
      "Declarative Programming",
      "Programming Paradigms",
      "Vectors"
    ]
  },
  {
    "id": "59b4cf87bf10a4cf59000060",
    "name": "Miracle Sort",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "59b6ae2e5227dd0fbc000005",
    "name": "Power Laws",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59c2ff946bddd2a2fd00009e",
    "name": "Card-Chameleon, a Cipher with Playing Cards",
    "approved": true,
    "tags": [
      "Algorithms",
      "Cryptography",
      "Security",
      "Games"
    ]
  },
  {
    "id": "59cc72741a68b79dde00000d",
    "name": "Find The Max Sum Of Contiguous-Submatrix In a Matrix - Simple Version",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59d168926bddd2ff46000030",
    "name": "Config Parsing: INI",
    "approved": true,
    "tags": [
      "Algorithms",
      "Parsing",
      "Logic",
      "Strings"
    ]
  },
  {
    "id": "59e625bf3d09a7471d00020e",
    "name": "One-Semicolon Fibonacci Stream",
    "approved": true,
    "tags": [
      "Puzzles",
      "Algorithms",
      "Logic",
      "Streams",
      "IO"
    ]
  },
  {
    "id": "59eaf81cfc3c4907a1000082",
    "name": "One Line Task: Are All Pair Sum Equals to 10?",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "59f1fbfba5e12902ba000128",
    "name": "Simple Fun #370: Four Sum",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a15b54bffe75f31990000e0",
    "name": "Seventh JSON of a seventh JSON",
    "approved": true,
    "tags": [
      "Fundamentals",
      "JSON",
      "Formats",
      "Recursion",
      "Algorithms",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "5a1ac2a0f72158e049000c46",
    "name": "BIO 2013 : Watching the Clock",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5a21bd361f7f7098e800000c",
    "name": "Building  an Adaboost model with Sklearn (Introductory Machine Learning)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Machine Learning",
      "Applied Computer Science",
      "Logic"
    ]
  },
  {
    "id": "5a2ab51ea5812ee2820025ba",
    "name": "Shortest Path in Perfect City",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5a61f333fd56cb42a2000057",
    "name": "NMEA parse",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5ad4ac83c4623d039800013d",
    "name": "NASM: Does this string contain numbers?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals"
    ]
  },
  {
    "id": "5ae24f79c5a452e1780000ad",
    "name": "Guitar Tab Transcriber",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "5ae8e14c1839f14b2c00007a",
    "name": "Make a spanning tree",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Graphs",
      "Data Structures",
      "Trees"
    ]
  },
  {
    "id": "5b035bb186d0754b5a00008e",
    "name": "Reversi Win Checker",
    "approved": true,
    "tags": [
      "Algorithms",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5b13530f828fab68820000c4",
    "name": "Parametric to Rectangular Equation",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5b6f3284b3d9774bff000026",
    "name": "Magic Highschool: Your first potion",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5b925cd69cc49d4d87000117",
    "name": "one line task : date converter (not that date, the other one)",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "5c607bb95a40bc7b4b9ecc27",
    "name": "Guess the number - Monad Edition",
    "approved": true,
    "tags": [
      "Algorithms",
      "Monads",
      "Data Structures",
      "Functional Programming",
      "Puzzles",
      "Games",
      "Logic"
    ]
  },
  {
    "id": "5c9df2e8837747001090d307",
    "name": "The difference between 11 and 21 in Ping-Pong",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5cb9dc6f98b230001cbe2cea",
    "name": "A random fact about filtering",
    "approved": true,
    "tags": [
      "Puzzles",
      "Theorem Proving"
    ]
  },
  {
    "id": "5d617c2fa5e6a2001a369da2",
    "name": "Queue Battle",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5dda85e6bc74f90001820813",
    "name": "Generalizing fold",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Recursion",
      "Algorithms",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "5ec9e176721b990029ebce83",
    "name": "Optical character recognition ",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Graphics"
    ]
  },
  {
    "id": "5ee044344a543e001c1765b4",
    "name": "Blind Numbers",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5f0ea61fd997db00327e6c25",
    "name": "Operating System Scheduling #1 :   FCFS scheduling",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5f1ab7bd5af35f000f4ff875",
    "name": "Classify a floating point number",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Floats/Doubles",
      "Basic Language Features",
      "Binary"
    ]
  },
  {
    "id": "5f3e7df1e0be5a00018a008c",
    "name": "Manage an Orderbook",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5fc8fd994e1e830009510e92",
    "name": "Longest Path in a Grid",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "60815326bbb0150009f55f7e",
    "name": "Graph-like Sequence",
    "approved": true,
    "tags": [
      "Algorithms",
      "Graphs",
      "Data Structures",
      "Sorting",
      "Logic"
    ]
  },
  {
    "id": "6146a6f1b117f50007d44460",
    "name": "Sequence Duality and \"Magical\" Extrapolation  (Binomial Transform)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Sequences",
      "Arrays",
      "Data Types",
      "Mathematics",
      "Logic",
      "Numbers",
      "Algebra"
    ]
  },
  {
    "id": "618647c4d01859002768bc15",
    "name": "Hat Game",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "511e8bd10d8baa23fb000001",
    "name": "Simple CoffeeScript Classes",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5416fac7932c1dcc4f0006b4",
    "name": "Lucas-Lehmer Test for Mersenne Primes",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Integers"
    ]
  },
  {
    "id": "548113c7d68e97048a00026a",
    "name": "NATO Phonetic Alphabet Ruby",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5540b8b79bb322607b000021",
    "name": "Spreadsheet Cell Name Conversions",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Numbers",
      "Integers"
    ]
  },
  {
    "id": "559323e59ddea3c94800006f",
    "name": "Submatrix",
    "approved": true,
    "tags": [
      "Algorithms",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "55d4f2a0eae6b0c15b000100",
    "name": "Obfuscation confusion - Bug Fixing #10",
    "approved": true,
    "tags": [
      "Bugs",
      "ES2015",
      "Babel"
    ]
  },
  {
    "id": "55e84ce709a1e37e420000df",
    "name": "A Challenging Sequence.",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Data Structures",
      "Mathematics",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "55fbb7063097cf0b6b000032",
    "name": "Cut me in Pieces but in The Way I Like",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "56e0f1dc09eb083b07000028",
    "name": "Thinking & Testing : How many blocks?",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "56f7eb14f749ba513b0009c3",
    "name": "Thinking & Testing : Safe position",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5719b28964a584476500057d",
    "name": "Fastest Code : Half it IV",
    "approved": true,
    "tags": [
      "Algorithms",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5761bb4f3665fe9315000003",
    "name": "Hangman - Puzzles #7",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "57818d719fb2a5871f00005b",
    "name": "Triangle Waveform",
    "approved": true,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Games"
    ]
  },
  {
    "id": "57a852c353ba334961001480",
    "name": "Say `Hi` - Person type",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57a8afa072292dccfe000270",
    "name": "T.T.T.22: Left? Right? Both?",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57acb629bb9944f732000bab",
    "name": "T.T.T.30: Mr. smile67 has no WLAN",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57b127051fae8a1d1b000104",
    "name": "T.T.T.34: Five boxes",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57b2e6de1fae8a30fa000219",
    "name": "T.T.T.41: The maximum profit",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58008f9897917feeec000a3e",
    "name": "Hungarian Cardinal Numerals",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "583726b8aa6717a718000002",
    "name": "Word Spiral",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5843cc2e6312cec12a000014",
    "name": "PHP in Action #4 - Mailing Scripts",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "585aad11f59b3c25500001d4",
    "name": "Ping Pong",
    "approved": true,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "585de868851516395e0003d3",
    "name": "URL building",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5876ef01b09010a6a400000f",
    "name": "Benford's Law",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "58a65c82586e98266200005b",
    "name": "Simple Fun #134: Fix Progression",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58a6a56942fd72afdd000161",
    "name": "Simple Fun #139: Black And White",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58afab67a9c97af7e8000071",
    "name": "Challenge Fun #15: Number Of Decodings",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58bcdf9a7288983803000042",
    "name": "Word Search Grid",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Search",
      "Algorithms",
      "Logic",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58e0534a95923f0820000013",
    "name": "How many working days",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "58e83205fd89ea48bd00002a",
    "name": "Make Object Into Iterable Array",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "590aa48a319e7b634400003c",
    "name": "Simple Fun #245: Count Increasing Sequences",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59112b6424d75b2123000061",
    "name": "Simple Fun #257: String Concatenation Process",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "591ad38f41b059d5cd000092",
    "name": "Compare Number",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "591cac98a6007e87d900013a",
    "name": "Change case",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "591f3a2e4e5471989000013d",
    "name": "Parsing goto statements",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5927db23fb1f934238000015",
    "name": "Find primes in range (complexity matters)",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "592ceef6af58a64c7f00003c",
    "name": "GA-DE-RY-PO-LU-KI cypher vol 4 - Missing key madness",
    "approved": true,
    "tags": [
      "Algorithms",
      "Encryption",
      "Cryptography",
      "Logic",
      "Security",
      "Performance"
    ]
  },
  {
    "id": "595ef0c7458ad5facc000019",
    "name": "Simple Fun #341: Minimum Bonus",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5978a3a7558e79786a00003b",
    "name": "YaCG:  #3 \"no elephant were harmed...\"",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Games",
      "Arrays",
      "Data Types",
      "Sorting",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59b85549afcda2beb80000ab",
    "name": "Retrieve Ether Balance",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59c9f72672851eb0ec000099",
    "name": "Simple Fun #355: Possible Base",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59cbb97d1a68b74482000135",
    "name": "Sonic the Hedgehog Ring Counter",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a2f99948882f342f3000068",
    "name": "T-Bill investment",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5a34c8ce55519ecb15000012",
    "name": "Checkerboard King Combo Move",
    "approved": true,
    "tags": [
      "Algorithms",
      "Games",
      "Puzzles"
    ]
  },
  {
    "id": "5a47391c80eba865ea00003e",
    "name": "Bezier Curves",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a6f71185084d76d2000001b",
    "name": "Tricky Kotlin #8: Simple for-comprehension",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Advanced Language Features",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5a752a0b0136a1266c0000b5",
    "name": "Mistaking a forest for a tree",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5a77f725b17101edd5000020",
    "name": "(Insane) N Warriors and a Lamp",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Performance",
      "Logic"
    ]
  },
  {
    "id": "5a8d63930025e92f4c000086",
    "name": "Convergents of e",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a99d851fd5777f746000066",
    "name": "Simple cluster analysis",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5a9b5bec5ee396162000014b",
    "name": "Solve a 3×3 Lights Out game",
    "approved": true,
    "tags": [
      "Algorithms",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5aa22977fd8c06df8c0000af",
    "name": "PHP Immutable",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Immutability",
      "Mutability"
    ]
  },
  {
    "id": "5b2d5be2dddf0be5b00000c4",
    "name": "Constructing polynomials",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Performance"
    ]
  },
  {
    "id": "5b33e9c291c746b102000290",
    "name": "Array Hyperrectangularity ",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Arrays",
      "Data Types",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science",
      "Data Structures",
      "Lists"
    ]
  },
  {
    "id": "5b4a3153086e91a918000a17",
    "name": "Calculating with objects",
    "approved": true,
    "tags": [
      "Puzzles",
      "Advanced Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "5b7eb90e402fb7a20f00009c",
    "name": "How much Wood?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5bc001de6aab18fba5000066",
    "name": "Simple Fun #393: Lonely Frog V",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Puzzles",
      "Games",
      "Performance"
    ]
  },
  {
    "id": "5bc2c8e230031558900000b5",
    "name": "Rooks",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "5bfb0d9b392c5bf79a00015a",
    "name": "Blocky Octahedrons",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Arithmetic"
    ]
  },
  {
    "id": "5c2c0c5e2f172f0fae21729f",
    "name": "Kata 2019: Fibonacci Bus",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5d023b69ac68b82dd2cdf70b",
    "name": "Extract the Electrons",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5d653190d94b3b0021ec8f2b",
    "name": "Subsequence Product Sum",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Performance",
      "Dynamic Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5db2e08962f03600188654ad",
    "name": "Taylor Series",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "5e94456c4af7f4001f2e2a52",
    "name": "3-2-1 Fire!",
    "approved": true,
    "tags": [
      "Algorithms",
      "Games"
    ]
  },
  {
    "id": "5f304fb8785c540016b9a97b",
    "name": "Dating with hypergamy",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5f74a3b1acfbb20033e5b7d9",
    "name": "Strongly connected components",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Graphs",
      "Data Structures",
      "Performance"
    ]
  },
  {
    "id": "5ff296fc38965a000963dbbd",
    "name": "Directory tree",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "60790e04cc9178003077db43",
    "name": "Balanced parentheses string ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Dynamic Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "6112917ef983f2000ecbd506",
    "name": "Best place at concert",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Arrays",
      "Iterators",
      "Control Flow",
      "Object-oriented Programming",
      "Basic Language Features",
      "Fundamentals",
      "Programming Paradigms"
    ]
  },
  {
    "id": "615e5e9b9a7e1f0051199cb9",
    "name": "[Code Golf] Regex Series: Match All Special Charactes (ASCII)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5271b552aa23514d10000050",
    "name": "Organization Management Structure",
    "approved": true,
    "tags": [
      "Algorithms",
      "Structs",
      "Data Structures"
    ]
  },
  {
    "id": "55ff2ca7d49961915600000e",
    "name": "Crack the Encrypted Email",
    "approved": true,
    "tags": [
      "Algorithms",
      "Ciphers",
      "Cryptography",
      "Logic",
      "Security",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5622c008f0d21eb5ca000032",
    "name": "Primitive Pythagorean Triples",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Data Structures",
      "Algebra",
      "Geometry",
      "Control Flow",
      "Basic Language Features",
      "Memoization",
      "Design Patterns",
      "Design Principles",
      "Hashes"
    ]
  },
  {
    "id": "56a8f83d96d99a315a0000a0",
    "name": "Happy Little Trees",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Objects",
      "Data Types"
    ]
  },
  {
    "id": "56de4d58301c1156170008ff",
    "name": "Thinking & Testing : Wind whispers",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "571dd22c2b97f2ce400010d4",
    "name": "Find Product Partitions With Maximum or Minimum Score",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Algorithms",
      "Logic",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Declarative Programming",
      "Programming Paradigms",
      "Optimization"
    ]
  },
  {
    "id": "574655d3b5d0affdac0003f9",
    "name": "Fake website #4: Design a strict user registration verification function",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5769ac186f2dea6304000172",
    "name": "Bouncy Numbers with N Digits",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "576d4721b1abc4be4300043b",
    "name": "Graphics Series #4: Fireworks",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5779209a311a2459ad000385",
    "name": "T.T.T.14: Find the largest \"X\"",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5780c47a9fb2a5308f000124",
    "name": "Mahjong winning hand Validation #1: DA SI XI(大四喜)",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings"
    ]
  },
  {
    "id": "57aaaada72292d3b8f0001b4",
    "name": "The Sum and The Rest of Certain Pairs of Numbers have to be Perfect Squares (more Challenging)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Optimization",
      "Logic",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Data Structures"
    ]
  },
  {
    "id": "57b68a8f20b1042eb900000e",
    "name": "BitMath: Multiplication",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "57c9313cf8392dd5480000fa",
    "name": "T.T.T.59: The language from the distant planet",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57fd8d7187b8012f4700062a",
    "name": "Combinations with identicals",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Permutations",
      "Logic"
    ]
  },
  {
    "id": "580dd5e1c1680cde9a00009d",
    "name": "Arrays and Procs #1",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5810ad962b321bac8f000178",
    "name": "Deal a Shuffled Deck of Cards",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "581baf45de29fe25a30000e9",
    "name": "Number abbreviation",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5824719bb81f70aba70014a5",
    "name": "Turn positive triangle into an inverted triangle. How many points need to be moved at least?",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58326ae9ea9e320bf5000083",
    "name": "How many new friends John has?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58456ab6fc7d0f019b000123",
    "name": "How many palindromes can you find ? (performance)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Performance",
      "Data Types"
    ]
  },
  {
    "id": "584acd331b8b758fe700000d",
    "name": "Progress of a challenge",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "584e4cfee82520410f000001",
    "name": "Christmas mission: Distribute gifts #3",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "584f6d272ddeec19bf00018a",
    "name": "PHP in Action #5 - PHPMailer Intro",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "584f7b27d8912ab46e0000d5",
    "name": "Christmas mission: Distribute gifts #5",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58b34b2951ccdb84f2000093",
    "name": "Earth-mover's distance",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Arrays"
    ]
  },
  {
    "id": "58db8dc3ac225602610000f2",
    "name": "Infinite Diceworks: MeanMaxing your rolls",
    "approved": true,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Dynamic Programming",
      "Programming Paradigms",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science",
      "Statistics",
      "Data"
    ]
  },
  {
    "id": "58dc420210d162048a000085",
    "name": "Basic physics problem - Space -Kinematics",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Physics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "58e004f995923fd6470000ca",
    "name": "Everybody hates Mondays",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "58f2fa092598e9cf0b0003eb",
    "name": "Top N closest points",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic"
    ]
  },
  {
    "id": "58febc23627d2f48de000060",
    "name": "Set Closure Generator",
    "approved": true,
    "tags": [
      "Algorithms",
      "Streams",
      "IO"
    ]
  },
  {
    "id": "590c37d79f4b9f21ef000013",
    "name": "Simple Fun #248: Gift Safety",
    "approved": true,
    "tags": [
      "Puzzles",
      "Fundamentals",
      "Games"
    ]
  },
  {
    "id": "5913ffb2cb1475215c000039",
    "name": "Simple Fun #267: Count Triangles",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "591837f2e76dc9be4b000024",
    "name": "Unicode Madness: 東方名確認　～ Eastern Title Validator.",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Character Encodings",
      "Formats",
      "Unicode"
    ]
  },
  {
    "id": "592666d54bf5501e5c0000c1",
    "name": "DynamicMethod using MSIL",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "592d7b3f8a124edf080007ea",
    "name": "No Return #3: Solve the Equation",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "592e3b99166edbd005000065",
    "name": "Simple Fun #313: Create +- Triangle",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59665001dc23af735700092b",
    "name": "Midtown Navigator",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "596e7c6960de9525c9000155",
    "name": "What happened to the vowels? ",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "596f90c2f468ae8daa00002f",
    "name": "BF basics #4: Sort the input",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Sorting"
    ]
  },
  {
    "id": "598820d3e84986bef1000005",
    "name": "Decathlon World Championship",
    "approved": true,
    "tags": [
      "Algorithms",
      "Objects",
      "Data Types",
      "Logic"
    ]
  },
  {
    "id": "598c84db8ba6103bc40000ad",
    "name": "Lattice Paths, But...?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "599266b417bc9785f2000001",
    "name": "Tri-Bicolor Tiling",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "59c1cba96bddd2b3cb000017",
    "name": "Simple Fun #348: Rotate Clocks",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59c5c02423daccae7700017d",
    "name": "One Line Task: Date Of Solar Calendar",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "59cabf6baeb28482b8000017",
    "name": "Sinus Scroller",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "59eabd1f7905df607900001b",
    "name": "Simple Fun #367: Flip Cards",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "59f04228e63f8ceb92000038",
    "name": "# 2 Sequences: Pure Odd Digit Perfect Cubic (P.O.D.P.C)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Arrays",
      "Control Flow",
      "Basic Language Features",
      "Memoization",
      "Design Patterns",
      "Design Principles"
    ]
  },
  {
    "id": "59f14f8ea41dfd7e6c0000fd",
    "name": "Simple Fun #371: Four Sum II",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Performance"
    ]
  },
  {
    "id": "59f7679d3640cef20e0000a0",
    "name": "One-Semicolon Cartesian Product",
    "approved": true,
    "tags": [
      "Puzzles",
      "Algorithms",
      "Logic",
      "Set Theory",
      "Mathematical Logic",
      "Mathematics",
      "Sets"
    ]
  },
  {
    "id": "5a036ce38ba91443fa0000b0",
    "name": "Guava against Million dollar error",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a1fe6b1ffe75f9f5a00009f",
    "name": "Pitch Class Set - Transpositions/Inversions",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5a3525a4b6486a5096000040",
    "name": "Alice's christmas tree",
    "approved": true,
    "tags": [
      "Puzzles",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5a5519858803853691000069",
    "name": "Multisize Nonogram Solver",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Optimization",
      "Games",
      "Multi-Dimensional Arrays",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5a60b017fd56cb469e000279",
    "name": "Mad Mathematician's Calculator (Basic Version)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5a7baed40136a177b300001c",
    "name": "Canvas Fun #3: Draw Screen Unlock Pattern",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5aa7ce59373c2e3ed30000cb",
    "name": "Arithmetic Progression of Primes",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5b216555a454c8eaa2000019",
    "name": "Has the Largest Product Horizontal or Vertical Direction? Find it!!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Algebra",
      "Performance"
    ]
  },
  {
    "id": "5b442a063da310049b000047",
    "name": "NxN Connect X",
    "approved": true,
    "tags": [
      "Algorithms",
      "Games",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5b756dc4049416c24f000762",
    "name": "Probability to Win an Infinite Tennis Game",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5b77b030f0aa5c9114000024",
    "name": "Fix arithmetic progression",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5bb4a6662d15ec6c64000157",
    "name": "Vertical symmetry on coordinate plane",
    "approved": true,
    "tags": [
      "Puzzles",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Geometry",
      "Algebra"
    ]
  },
  {
    "id": "5bb9053a528b29a970000113",
    "name": "Combinations xor sum",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5bc2c578a10a5b0b97000063",
    "name": "Collision Detection - 2D Point in 2D Rectangle",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Geometry",
      "Algebra",
      "Game Design",
      "Games"
    ]
  },
  {
    "id": "5bc6f4534be9777fae000028",
    "name": "Or And",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Performance"
    ]
  },
  {
    "id": "5bc8c9db40ecc7f792002308",
    "name": "3 litres and 5 litres",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5c4be30af3c54800102aa217",
    "name": "New Function",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Performance"
    ]
  },
  {
    "id": "5c65e43ed8b7573144ce9f6f",
    "name": "Differentiate a function",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5c9a6e225ae9822e70abc7c1",
    "name": "Clone Graph",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "5cb9f138b5c9080019683864",
    "name": "Binary Simulation",
    "approved": true,
    "tags": [
      "Algorithms",
      "Performance",
      "Fundamentals",
      "Logic"
    ]
  },
  {
    "id": "5cc47f8c4b8fea001de6d226",
    "name": "Multiples of 3, you say?",
    "approved": true,
    "tags": [
      "Puzzles",
      "Theorem Proving"
    ]
  },
  {
    "id": "5d7169ce7bf8d000180c7fe9",
    "name": "Mystery Class",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5e297e9f63f1db003317cbac",
    "name": "Paint Tiles",
    "approved": true,
    "tags": [
      "Algorithms",
      "Dynamic Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5f874da45e9ce2001988c6bd",
    "name": "Ch02 - effective plusNat",
    "approved": true,
    "tags": [
      "Refactoring",
      "Fundamentals"
    ]
  },
  {
    "id": "5fd8bd0e23708100225415dc",
    "name": "How much Kata should I complete?",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "60512be8bbc51a000a83d767",
    "name": "Guess Operator",
    "approved": true,
    "tags": [
      "Puzzles",
      "Algorithms",
      "Logic",
      "Arithmetic",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Integers",
      "Games"
    ]
  },
  {
    "id": "60b744478e8d62003d327e6a",
    "name": "The Cantor ternary set",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "53165ceea8fbdb4e0c00015b",
    "name": "Quantum Bogosort",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "53b30ccc4a24088126000c45",
    "name": "Array.prototype.splice(from, count, insertItems...) - Advanced",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Utilities"
    ]
  },
  {
    "id": "543b9113def6343e43000875",
    "name": "Cantor's pairing function",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5550f37131caf073b8000025",
    "name": "[Geometry A-1.1] Modify point location detector to handle zero-length vectors and precision errors [DRY]",
    "approved": true,
    "tags": [
      "Refactoring",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Algorithms",
      "Logic",
      "DRY",
      "Programming Principles"
    ]
  },
  {
    "id": "55bfce089ff4227c1a00002b",
    "name": "Human like commands - Puzzles #2",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Strings",
      "Data Types",
      "Arrays",
      "Maps",
      "Data Structures",
      "Map/Reduce",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "55edf7644b1368e39400000b",
    "name": "Throw from list - Error Handling #3",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "56a36b618e2548ddb400004d",
    "name": "Mahjong - #2  Seven-pairs",
    "approved": true,
    "tags": [
      "Algorithms",
      "Games",
      "Logic"
    ]
  },
  {
    "id": "56d2eada54d686d034000516",
    "name": "Angular date formatter",
    "approved": true,
    "tags": [
      "Algorithms",
      "Angular",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "56eb717c2caf7923bf001bf5",
    "name": "Horse racing(田忌赛马)",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "56efff4a49cd0c58a0000b8c",
    "name": "Handy Toolbox for Kata authors",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5707bf345699a1e98800004b",
    "name": "Valid Chess Moves",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5708c90cd531cdfecf00147c",
    "name": "Slay Achilles!",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57450805fd21f01f790002b6",
    "name": "Fake website #3: Choose a cool color for the web site",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "575ed46e23891f67d90000d8",
    "name": "Play PacMan 2 : The way home",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "579294724be9121e4d00018f",
    "name": "Determine Results of Pole Vault Competition",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Objects",
      "Sorting",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "57ad7e10e298a7b65c000712",
    "name": "T.T.T.31: Chinese poetry and calligraphy(中国诗词与书法)",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57b840b2a6fdc7be02000123",
    "name": "Circles: Count the Circles Having a Given Internal Point.",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Algorithms",
      "Logic",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Optimization",
      "Declarative Programming",
      "Programming Paradigms",
      "Exception Handling"
    ]
  },
  {
    "id": "57e0954f7db0a256710009f5",
    "name": "myjinxin katas #003 : Crossword puzzle",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57eada2fccc3b8b66100002e",
    "name": "Quipu Calculator",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "581a65e83280d61ccb000877",
    "name": "Recipe DSL",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Domain Specific Languages",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "582f79acaeb69a632d00015b",
    "name": "Smith number",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "583e108cfcf9a7cb20000079",
    "name": "Cream of the crop",
    "approved": true,
    "tags": [
      "Algorithms",
      "Performance"
    ]
  },
  {
    "id": "586e2bc03f3675a4e70000e1",
    "name": "Happy traveller [#2]",
    "approved": true,
    "tags": [
      "Algorithms",
      "Optimization",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "589d1c08cc2e997caf0000e5",
    "name": "Simple Fun #112: Array Erasing",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "58e8561f06db4d4cc600008c",
    "name": "What Would They Have in Common?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Strings",
      "Data Structures",
      "Sorting",
      "Performance"
    ]
  },
  {
    "id": "58fea8ec184b6daa58000031",
    "name": "Simple Fun #207: Save Pepe",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58fec262184b6dc30800000d",
    "name": "Simple Fun #210: Maximize Points",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59015f8cc842a3e7f10000a4",
    "name": "Simple Fun #220: Simplified Array",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5902f769dbf4ccbdd900005d",
    "name": "Simple Fun #224: Blindfolded",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "59252121fb1f93fc8200013a",
    "name": "Simple Fun #302: Find The Max Sum",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5927aabdf3a75890a10000ee",
    "name": "Simple Fun #310: Array Conversion",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59915e75f8222dc4d10000df",
    "name": "BrainQuine",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59bcd995bf10a4206d00004d",
    "name": "\"AURUM RECLUDIT CUNCTA\"",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "59e6189641b48b8e6c001c33",
    "name": "Counting Nested Functions",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "59e9576d7905dff72600001e",
    "name": "Simple Fun #365: Remove Number Game I",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59f29911bee845b000000083",
    "name": "One Line Task: 1 Two 3 Four 5!",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5a2cb53cee1aaef2fa000037",
    "name": "The Newest Function",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5a4af7ae880385882c000067",
    "name": "One Line Task: The Order Of Ribbons",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5a756e3cb17101764900011f",
    "name": "[BF] Compare Two Strings",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5a7671e6373c2e8c3e00008d",
    "name": "Golden Section Search",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5aba8546379d20b9970001e4",
    "name": "Reserve tables in the restaurant",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5b128f646e9f58d6980000bf",
    "name": "BrainF**k Test ? ",
    "approved": true,
    "tags": [
      "Puzzles",
      "Esoteric Languages",
      "Games",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5b33fee525c2bb5753000168",
    "name": "3D Cellular  Neighbourhood ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Data Structures",
      "Arrays",
      "Data Types",
      "Mathematics",
      "Numbers",
      "Lists"
    ]
  },
  {
    "id": "5b6dac711db5cef31100005b",
    "name": "Can I have cake?",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5b75aa794eb8801bd0000033",
    "name": "Rummy: Find Lowest Scoring Hand",
    "approved": true,
    "tags": [
      "Algorithms",
      "Games"
    ]
  },
  {
    "id": "5b8335facb56883418000077",
    "name": "What's a beet farmer to do?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5be539ccb062f9a90e0000ac",
    "name": "Simple Fun #401: Who Will Get The Autographed Photo Of  Mr. Mxyzinjin?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5d401e07ebdcd9001259d0d4",
    "name": "Simple String Find with Regex",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "5d5300a06b760900018d1b25",
    "name": "Text Door Neighbors - Phone Keypad",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5db039743affec0027375de0",
    "name": "Present XML data the SQL way",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5eb0ce255179590016d613ce",
    "name": "Triple negation",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Logic"
    ]
  },
  {
    "id": "5fb44fbd98799a0021dca93a",
    "name": "Lambda Calculus: Lists as folds I",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "603928e6277a4e002bb33d5a",
    "name": "Binary relation optimization",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "60b05d49639df900237ac463",
    "name": "Pig Game",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "6175064bf1c7eb002038df72",
    "name": "Regex Series: Generate a Password Validator",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "534a924d0d03add9ce000ba2",
    "name": "new Deck() of Cards",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "54c8df9c331458279e00145e",
    "name": "The ugly truth about reduce (ii)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "551719daa5808b91e4000445",
    "name": "Shortest Common Superstring",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "55833364a2e09a6887000166",
    "name": "Lempel–Ziv–Welch",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "55c24ce1fb411bbdd1000009",
    "name": "Dictionary sequence",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "55f10facf351f5e236000014",
    "name": "Topological Sort",
    "approved": true,
    "tags": [
      "Algorithms",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "56135a61f8b29814340000cd",
    "name": "Product Partitions I",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "56896d1d6ba4e91b8c00000d",
    "name": "AdFly Encoder and Decoder",
    "approved": true,
    "tags": [
      "Algorithms",
      "Ciphers",
      "Cryptography",
      "Logic",
      "Security"
    ]
  },
  {
    "id": "569e8353166da6908500003d",
    "name": "Rearrangement of Numbers to Have The Minimum  Divisible by a Given Factor",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Types",
      "Functions",
      "Sorting",
      "Declarative Programming",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "56cd5d09aa4ac772e3000323",
    "name": "Play  FlappyBird :  Advance  Bravely",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "56d3f1743323a8399200063f",
    "name": "Egg Drops",
    "approved": true,
    "tags": [
      "Puzzles",
      "Recursion",
      "Algorithms",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science",
      "Dynamic Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "56e6d4c466d4428e29000f65",
    "name": "■□ Pattern □■ : Hourglass",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "570f1c56cd0531d88e000832",
    "name": "The fibfusc function -- Part 2",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5717293a672b20c4b30008d0",
    "name": "Fastest Code : Half it III",
    "approved": true,
    "tags": [
      "Algorithms",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57187fdd938fcd76a600090d",
    "name": "Coding 3min : Half it IV",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "571936be938fcde87f001dbc",
    "name": "solve from sums",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "571c128782661cdcca000932",
    "name": "Dice roll - D&D #1",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "572ced1822719279fa0005ea",
    "name": "Building Chains Using  the Arithmetic Derivative of a Number",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Functions",
      "Optimization",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "578c52b484ac6913b0000055",
    "name": "Thinking & Testing  #36: Sort in order",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "578cff57daa01a037d000998",
    "name": "Return True in 6 Different Ways",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Logic",
      "Puzzles",
      "Games",
      "Basic Language Features"
    ]
  },
  {
    "id": "57bfb0b1a02b27cb57000207",
    "name": "T.T.T.50: I'm not a rat, don't let me dig so many holes!",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57fd829e98f76d18fa0004e9",
    "name": "Heathrow to London",
    "approved": true,
    "tags": [
      "Algorithms",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Logic"
    ]
  },
  {
    "id": "58076cf50b5a776505000b97",
    "name": "From..To..Series #5: from word1 to word2. How many steps should shift",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "581d1d669ae06274d5000074",
    "name": "Permutation by number",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Strings",
      "Permutations"
    ]
  },
  {
    "id": "58341551565e129399000460",
    "name": "The Wolf of Wall Street",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5845921ca87f76501a000101",
    "name": "Find number in an array # 6",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58477f76ad2567b465000153",
    "name": "Complete the photo pattern",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "584b6aabbbae42108e000078",
    "name": "7-game series probabilities",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5864ab9c83f7e6333a0002a8",
    "name": "Dream Or Reality",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5869d40ddbca9a6221000132",
    "name": "All Star Code Challenge #32",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "586b1b91c66d181c2c00016f",
    "name": "Vending Machine Problems [#1]",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Optimization",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5897f94ff3d2143f480000af",
    "name": "Check passwords",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "589a785f77c96080b7000050",
    "name": "Simple Fun #104: Points Collision",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58b617f15705ae68cc0000a9",
    "name": "Tiptoe through the circles",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Graphs",
      "Data Structures",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "58bd011fd0efbec33400001f",
    "name": "Challenge Fun #19: Black Hole",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "58c62573ea6572a69d000006",
    "name": "Simple Fun #197: Dividing marbles",
    "approved": true,
    "tags": [
      "Algorithms",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58fae1eb2bffa7a570000039",
    "name": "Find match row and column position in a given string",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59182a2f40ef95046400003c",
    "name": "Learning TypeScript. Advanced Types. Union Types",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59191c935ffc306999000076",
    "name": "Simple Fun #277: Line Intersections",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "591aab3440ef95642f0000b0",
    "name": "Simple Fun #285: Path To File",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "591c075a94414c1617000063",
    "name": "Simple Fun #288: Turns On Road",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "591d56c8ff832ae47a000036",
    "name": "Simple Fun #293: Broken Jigsaw",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "592993301fad491f26000072",
    "name": "Canvas Fun #2: Draw Rectangles",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "592c6d71d2c6d91643000009",
    "name": "Carpet shop",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5933d213cff4acb19300006c",
    "name": "Escape the Mines or die !",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Monads",
      "Data Structures",
      "Functional Programming",
      "Graphs"
    ]
  },
  {
    "id": "59558556768165924500009d",
    "name": "Hello new meta-class!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Metaprogramming",
      "Programming Paradigms",
      "Advanced Language Features"
    ]
  },
  {
    "id": "5963a29980509479cd000075",
    "name": "Implement the (Unnormalized) Cardinal Sine",
    "approved": true,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "596557071f13e4e86a000019",
    "name": "Pirate Island Conquer Part 3",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5980d4e258a9f5891e000062",
    "name": "IPv4 subnet to list",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Networks",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "598944304b4375ef57000050",
    "name": "The Matrix background",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5992e103b1429877bb00006b",
    "name": "Numbers with Collatz Starting Patterns",
    "approved": true,
    "tags": [
      "Puzzles",
      "Algorithms",
      "Logic",
      "Games",
      "Mathematics",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "59951f21d65a27e95d00004f",
    "name": "Circular Limited Sums",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Fundamentals",
      "Mathematics",
      "Numbers",
      "Dynamic Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "599846fbc2bd3a62a4000031",
    "name": "Unique digit sequence II - Optimization problem",
    "approved": true,
    "tags": [
      "Refactoring",
      "Optimization",
      "Memoization",
      "Design Patterns",
      "Design Principles",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59bf6c18afcda2c45100008a",
    "name": "Simple Fun #345: The Original Numbers",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "59c13f288bcb77dbfe00091f",
    "name": "Rock, Paper, Scissors Smart Contract",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59e1254d0863c7808d0000ef",
    "name": "Fouriest transformation",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5a0127028ba91430e80000a8",
    "name": "Subsequences",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5a02a758ffe75f8da5000030",
    "name": "Hanoi Tower Array",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5a1a46ef80171fc2b0000064",
    "name": "Shakespearean Tug of War",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arithmetic",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5a3832c18882f32aca0000d2",
    "name": "Counter: Pythonize your Java!! (VERBOSE)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5a40aa008f27f2aba800003a",
    "name": "Christmas mission: Distribute gifts #7",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5a42c4cf8f27f25c3700009f",
    "name": "Racing #2: Accelerated Drag Race",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Games",
      "Data Types"
    ]
  },
  {
    "id": "5a813e740025e902720000a0",
    "name": "[BF] Reverse Multiple Strings",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5aa859ad4a6b3408920002be",
    "name": "Hypercube Lists",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Lists",
      "Data Structures",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science",
      "Optimization"
    ]
  },
  {
    "id": "5ae5f2bd73ea5863790005b6",
    "name": "Calculate snooker break total",
    "approved": true,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5b535628a8eb75ab2c000062",
    "name": "Variadic Parameter Pack Count",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Metaprogramming",
      "Programming Paradigms",
      "Advanced Language Features"
    ]
  },
  {
    "id": "5bc5cfc9d38567e29600019d",
    "name": "Data Analysis Following Migration",
    "approved": true,
    "tags": [
      "Algorithms",
      "Dates/Time",
      "Data Types",
      "Validation",
      "Logic"
    ]
  },
  {
    "id": "5bccff463d36b0f6a8001a21",
    "name": "Forming a Magic Square",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5bcf52022f660cab19000300",
    "name": "Refactor a node-based calculator (DRY)",
    "approved": true,
    "tags": [
      "Refactoring",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5be1a67d3c8b50482400002a",
    "name": "Luna's journey(s) home",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5be38d02ce5afae72f00000f",
    "name": "Simple Fun #400: Who Is Sitting On My Laptop???",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5c8607124c6e850009ff5ef7",
    "name": "Modular operations on Finite data type",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Arithmetic",
      "Mathematics",
      "Logic"
    ]
  },
  {
    "id": "5d0e57ec1c5fdd000146b7d9",
    "name": "Verified Horner's method",
    "approved": true,
    "tags": [
      "Algorithms",
      "Theorem Proving",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Recursion",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "5d325ae1dddb56dc5b740738",
    "name": "Mad robot problem",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5d8108a41e94580023bd6419",
    "name": "ATM Heist",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5da558c930187300114d874e",
    "name": "The Doppelganger Enigma",
    "approved": true,
    "tags": [
      "Bugs",
      "Advanced Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "5e7bc286a758770033b56a5a",
    "name": "Arithmetic Expression Placeholders",
    "approved": true,
    "tags": [
      "Algorithms",
      "Expressions",
      "Basic Language Features",
      "Fundamentals",
      "Logic",
      "Advanced Language Features",
      "Data Types",
      "Arithmetic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "5eecd4a5e5d13e000150e249",
    "name": "Lambda Calculus: Lists",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Lambdas",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5f42c19b4c2cc4001037e7cd",
    "name": "Enumerate consecutive runs",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5fad08d083d5600032d9edd7",
    "name": "The Bubbly Interpreter",
    "approved": true,
    "tags": [
      "Puzzles",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "607c60d84dcfb40056991042",
    "name": "Wait without blocking",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "60a58520c42fb60055546ce5",
    "name": "Survivors Ep.5",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Strings",
      "Basic Language Features",
      "Advanced Language Features"
    ]
  },
  {
    "id": "616ee43a919fae003291d18f",
    "name": "Knights",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "616eedc41d5644001ff97462",
    "name": "Kingdoms Ep.3: Archery Tournament",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Basic Language Features"
    ]
  },
  {
    "id": "55d3671f6f432dc888000013",
    "name": "2048!",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "55e47815d7055e1a97000128",
    "name": "Closest Neighbouring Points II",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "567cd2664b9255bfeb000001",
    "name": "Integer division",
    "approved": true,
    "tags": [
      "Algorithms",
      "Integers",
      "Data Types",
      "Numbers",
      "Arithmetic",
      "Mathematics",
      "Logic",
      "Operators",
      "Fundamentals"
    ]
  },
  {
    "id": "569d754ec6447d939c000046",
    "name": "Count The Hits Adding Contiguous Powers!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Functions",
      "Permutations",
      "Sorting",
      "Declarative Programming",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "56b85fc4f18876abf0000877",
    "name": "Recursive Floor Sequence",
    "approved": true,
    "tags": [
      "Algorithms",
      "Sequences",
      "Arrays",
      "Data Types",
      "Numbers"
    ]
  },
  {
    "id": "56e127d4ef93568228000be2",
    "name": "Thinking & Testing : Substring Magic",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "56ec6016a9dfe3346e001242",
    "name": "Geometric Mean II",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Algorithms",
      "Logic",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Optimization",
      "Declarative Programming",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "5705da6ccb7293991300055f",
    "name": "Shortest Code : Waiting for a Bus",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5715508de1bf8174c1001832",
    "name": "Find the Longest Increasing or Decreasing  Combination in an Array",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Algorithms",
      "Logic",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Optimization",
      "Declarative Programming",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "571bf8dd7beb0a327a001315",
    "name": "Implement Hash#safe_dig",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "572e5895914b5b158d001562",
    "name": "Delegates in our life",
    "approved": true,
    "tags": [
      "Algorithms",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Fundamentals",
      "Programming Paradigms"
    ]
  },
  {
    "id": "57adadd36b34faea6b00031b",
    "name": "Vault experience (3): Populate the vaults",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57b2a9631fae8a30fa000013",
    "name": "T.T.T.39: Cut rope",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "580ee34f2f3779849900003a",
    "name": "Arrays and Procs #2",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "582087e5b81f7063a7000242",
    "name": "arrayToString and stringToArray",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5827ba50c983ca5d8b000a0d",
    "name": "Encryption and decryption--Matrix pair",
    "approved": true,
    "tags": [
      "Algorithms",
      "Encryption",
      "Cryptography",
      "Logic",
      "Security",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58330aacc5637ad7290003d2",
    "name": "Vending Machine",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "584e936ae82520a397000027",
    "name": "Generate  Numbers From Digits #2",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Control Flow",
      "Basic Language Features",
      "Logic",
      "Strings",
      "Data Types",
      "Data Structures",
      "Declarative Programming",
      "Programming Paradigms",
      "Mathematics",
      "Numbers",
      "Arithmetic",
      "Optimization",
      "Permutations"
    ]
  },
  {
    "id": "5854bd26f157c4bb2f0000aa",
    "name": "Easy Peer-to-Peer Telephone Game",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "586fa9ddc66d18e2e10000ce",
    "name": "Exception Handling (with restrictions)",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Exception Handling",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "5876a9f6b09010b1b4000191",
    "name": "This isn't what you think!  The Misadventures of Bob the Highly Paid Consultant #2",
    "approved": true,
    "tags": [
      "Bugs",
      "Design Patterns",
      "Design Principles"
    ]
  },
  {
    "id": "5879f95892074d769f000272",
    "name": "Easy Cyclist's Training",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "58982f2c341b1f69d5000086",
    "name": "Challenge Fun #6: LRC to SubRip",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58ad0159c9e5b0399b0001b8",
    "name": "Simple Fun #153: Knight Rescue",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "58d5f464ba74621747000068",
    "name": "Mission: Hidden Message",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings"
    ]
  },
  {
    "id": "5906b55bdfeb0d090900004b",
    "name": "Simple Fun #226: Airline Seating",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "590c581df06c49ea5e000078",
    "name": "One Line Task: Theatre Square",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "591289f4e5bc248ecc000084",
    "name": "Chess Fun #12: Possible Rook Moves",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "59243a9825ac8e993e000060",
    "name": "Roleplaying Combat Simulator",
    "approved": true,
    "tags": [
      "Algorithms",
      "Games",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "592e5d8cb7b59e547c00002f",
    "name": "Simple Fun #314: Lucky Candies",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Dynamic Programming",
      "Programming Paradigms",
      "Performance"
    ]
  },
  {
    "id": "594ecda58e7871156c00006f",
    "name": "Sloth",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "595dab6c5834558a5d0000cd",
    "name": "Is this  a good batch of stout? (Student's t test)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Statistics",
      "Data",
      "Logic"
    ]
  },
  {
    "id": "59896b4de4769bea02000019",
    "name": "I Love Polynomials!",
    "approved": true,
    "tags": [
      "Algorithms",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Types",
      "Basic Language Features"
    ]
  },
  {
    "id": "59928e2889d6a01970000051",
    "name": "Insane Tri-Bicolor Tiling",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Fundamentals",
      "Mathematics",
      "Numbers",
      "Performance"
    ]
  },
  {
    "id": "59b53be0bf10a4b39300001f",
    "name": "Permutation-free Strings",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Dynamic Programming",
      "Programming Paradigms",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "59e0d7acf703c453df000123",
    "name": "Simple Fun #364: Not Too Random",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a00f7758ba914dedc00002f",
    "name": "Convert a string to an integer with any specified base",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Numbers"
    ]
  },
  {
    "id": "5a05969cba2a14e541000129",
    "name": "Path Finder #5: there's someone here",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5a441468b6cfd74948000134",
    "name": "Racing #3: Emergency Stop",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Games",
      "Data Types"
    ]
  },
  {
    "id": "5a4e8708e626c50537000131",
    "name": "Lost in the Woods",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5a5c5a1ab3bfa8728d00008d",
    "name": "Cryptic Cave: Episode 1",
    "approved": true,
    "tags": [
      "Puzzles",
      "Reverse Engineering",
      "Security",
      "Games",
      "Esoteric Languages",
      "Optimization"
    ]
  },
  {
    "id": "5a78515c0136a1bf3e000047",
    "name": "Find the X from Equation",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Fundamentals"
    ]
  },
  {
    "id": "5a79fb17e7bdcde9ad000c3f",
    "name": "Troll Mystery Encoding",
    "approved": true,
    "tags": [
      "Puzzles",
      "Encoding",
      "Algorithms",
      "Logic",
      "Decoding",
      "Games"
    ]
  },
  {
    "id": "5b16bbd2c8c47ec58300016e",
    "name": "Product-Sum Numbers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Types",
      "Arithmetic"
    ]
  },
  {
    "id": "5b16dedba29cab331e000055",
    "name": "[BF] primes",
    "approved": true,
    "tags": [
      "Puzzles",
      "Esoteric Languages",
      "Games"
    ]
  },
  {
    "id": "5b88f8535ed7d4eec00000f3",
    "name": "Build a pile of cubes [Code-golf]",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Puzzles",
      "Games",
      "Performance"
    ]
  },
  {
    "id": "5c06e93aa8af371a56000064",
    "name": "drop from end",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures",
      "Performance"
    ]
  },
  {
    "id": "5c356d3977bd7254d7191403",
    "name": "Train of dominoes",
    "approved": true,
    "tags": [
      "Puzzles",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "5c4a0fe93c3cc13c8b23d802",
    "name": "Bifid cipher",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5c7fe5c859036f142eccaabb",
    "name": "String formatting, type-safely",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5c84a95c71c5210f2930c481",
    "name": "Nat in the mirror",
    "approved": true,
    "tags": [
      "Algorithms",
      "Theorem Proving"
    ]
  },
  {
    "id": "5d2351b313dba8000eecd5ee",
    "name": "Total Primes - Advanced Version",
    "approved": true,
    "tags": [
      "Algorithms",
      "Performance"
    ]
  },
  {
    "id": "5dc49700c6f56800271424a5",
    "name": "Escape!",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5dcf96055ca66e0032b9b958",
    "name": "Trifid Cipher Encoder",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Ciphers",
      "Algorithms",
      "Cryptography",
      "Logic",
      "Security",
      "Encoding",
      "Encryption"
    ]
  },
  {
    "id": "5e3cd88fa5b6a8001fa84ed5",
    "name": "Drinker paradox",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Theorem Proving",
      "Mathematical Logic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5ea9b14c9b7bf50001b88e55",
    "name": "relating binary relations",
    "approved": true,
    "tags": [
      "Puzzles",
      "Composition",
      "Design Principles"
    ]
  },
  {
    "id": "5eb8aefefaa14a0001c915e8",
    "name": "Prove that any Inverse of an Involutive Function is itself",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5f552e07f6b3390015803f39",
    "name": "The Ceiling is Falling",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5f85a89a30b05d000f5e9e64",
    "name": "Ch02 - beside",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "6112e90fda33cb002e3f3e44",
    "name": "[Code Golf] Luhn Check Digit",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "6122439b01ef9f00089b299a",
    "name": "Vector addition",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "6155e74ab9e9960026efc0e4",
    "name": "Subarrays with an odd number of odd numbers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Performance"
    ]
  },
  {
    "id": "61e2f2cded0d77001693ad0b",
    "name": "Factorial Lambda Calculus",
    "approved": true,
    "tags": [
      "Algorithms",
      "Lambdas",
      "Functional Programming",
      "Functions",
      "Declarative Programming",
      "Programming Paradigms",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "621f89cc94d4e3001bb99ef4",
    "name": "Don't give me five! Really!",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Fundamentals",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Optimization"
    ]
  },
  {
    "id": "528da9e9be46d138960006be",
    "name": "Four Gate Push",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "52a8f768a8ddc5070c000ca2",
    "name": "Hash Hacker",
    "approved": true,
    "tags": [
      "Algorithms",
      "Hacking Holidays"
    ]
  },
  {
    "id": "5389e2b687c26dcc530008e5",
    "name": "sliceBits(int, from, count)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Bits",
      "Binary",
      "Integers",
      "Data Types",
      "Numbers"
    ]
  },
  {
    "id": "55f0a7d8c44c6f1438000013",
    "name": "Find the Biggest Triangle",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Sorting"
    ]
  },
  {
    "id": "562518e2059c742d6900007d",
    "name": "Sparse array split function",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Sparse Arrays",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "56546460730f15790b000075",
    "name": "Conic Classification",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Logic",
      "Control Flow",
      "Basic Language Features",
      "Data Structures",
      "Mathematics",
      "Algorithms",
      "Numbers",
      "Geometry",
      "Algebra",
      "Declarative Programming",
      "Programming Paradigms",
      "Linear Algebra"
    ]
  },
  {
    "id": "56797325703d8b34a4000014",
    "name": "Approximate  Fractions",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Functions",
      "Strings"
    ]
  },
  {
    "id": "56b468a9b2230c6385000031",
    "name": "Solving Linear Equations N x N (Gauss, Part 1/2)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Data Structures",
      "Linear Algebra",
      "Algebra",
      "Mathematics",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "56d30dadc554829d55000578",
    "name": "Z-algorithm",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "56ea1ba7b131af1152001cae",
    "name": "Write a letter to your friend  (给远方的朋友写封信)",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57636ce99aa148b6a3000d1c",
    "name": "Graphics Series #2: barcode EAN-13 part2",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "578f660b75ffd1a588000041",
    "name": "Traffic Police I",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57a9692dbb9944516d000209",
    "name": "T.T.T.24: Chinese surname (《百家姓》)",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57aa89327cb1f34d5300003c",
    "name": "T.T.T.25: Tree and vine",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57c535f82b8520076700017d",
    "name": "T.T.T.55: Find a matrix in a matrix",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57dc535fd8f9291a0300030d",
    "name": "Sliding tile puzzle - Worker",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5804454d87226e44a10001d1",
    "name": "Implement String#transpose",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "5816c46581f76d63bb000198",
    "name": "Find the \"center\" point",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "581c02edc221fbabee0000e5",
    "name": "Fill in operator. Correct the arithmetic expression",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58599c35994864e9ee00017f",
    "name": "Open Knight's Tour problem",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "586912a72d52094d060000d3",
    "name": "My daughter's math test questions -- Part 3",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58756f1054486312c5000a64",
    "name": "Let's Play Darts: Beat The Power!",
    "approved": true,
    "tags": [
      "Algorithms",
      "Games",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "587c23f6289b36bd1900003e",
    "name": "Prime Fun #2",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5889a0706069af1cb9000176",
    "name": "Simple Fun #57: Runners Meetings",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5896fc74b3ce5ae5fb00001d",
    "name": "Computational Geometry 101: Perimeter and Area of an arbitrary shape (2D)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5898227e341b1f427b000037",
    "name": "Simple Fun #102: Missed Classes",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "589aa12dcb4fabf6e9000611",
    "name": "Simple Fun #108: Task Maker",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "589b81791491932da40000a3",
    "name": "Find out a rest after \"rm -f\"",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58a3ea0a8bdda5093800000e",
    "name": "Simple Fun #128: Doubly Not Less",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58b3c7b9917a5cb4aa0000c5",
    "name": "Challenge Fun #16: Overlap Point",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59269e371a640c0e98000085",
    "name": "X plus Y Card problem",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "596fd97f65ad2fc072000037",
    "name": "Converter",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "59762a55832dc5f20300004f",
    "name": "parse phone number",
    "approved": true,
    "tags": [
      "Algorithms",
      "Parsing",
      "Logic",
      "Strings"
    ]
  },
  {
    "id": "597c82c5213e128eed000072",
    "name": "The Ice Cream Vendors Dilema",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "59818a732f584fed00000022",
    "name": "Odd? Even? Big fusc fun ",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "599de99d55342a28f5000b76",
    "name": "Escaping The Matrix (Reloaded)",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Exception Handling",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "59a8dda8dbe3b0b6f700008d",
    "name": "Haskellish Syntax",
    "approved": true,
    "tags": [
      "Puzzles",
      "Metaprogramming",
      "Programming Paradigms",
      "Advanced Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "59c27053dcc40582a90000f0",
    "name": "Number Triangle",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59e2111ce508138c4e00002f",
    "name": "[BF] Divmod",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Esoteric Languages",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "59e9e185a95427b27000000d",
    "name": "[B]izz [F]uzz",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Esoteric Languages",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5a0af37ec374cb092e0000df",
    "name": "ASCII Fun #5: Days in Prison",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a15d44fffe75f2eeb000144",
    "name": "File Size Trouble!",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Numbers",
      "Integers",
      "Arrays",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals"
    ]
  },
  {
    "id": "5a1ec0688ba9148cc0000049",
    "name": "One Line Task: Conversion between Kilobyte and KibiByte",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5a4064598f27f2b3c4000047",
    "name": "Custom Christmas Tree II: Triangle Sum",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games",
      "Strings",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5a42497e55519ef5c5000015",
    "name": "Mad Mathematician's Calculator (Hardcore Version)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5a436b18c5e28457bb00005d",
    "name": "The Strongest Tree in the Forest",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "5a4497cfee1aaee13800009d",
    "name": "Happy New Year, 2018 !!",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Fundamentals"
    ]
  },
  {
    "id": "5a561ce6145c468f8b00005d",
    "name": "Stop it, HTML!",
    "approved": true,
    "tags": [
      "Puzzles",
      "Fundamentals",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5a5b6e0898e1379df700102c",
    "name": "PokerHelper lvl. 1",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5a781006ba1bb5e572000053",
    "name": "[BF] To UpperCase",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5a78bc01fddc4a903a001a5d",
    "name": "Compile Time Prime Number Detection (Performance Version)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Metaprogramming",
      "Programming Paradigms",
      "Advanced Language Features"
    ]
  },
  {
    "id": "5a832817b17101c11a000032",
    "name": "[AI] Play Me : CodeWarsRunner I (Introduction)",
    "approved": true,
    "tags": [
      "Puzzles",
      "Artificial Intelligence",
      "Machine Learning",
      "Algorithms",
      "Applied Computer Science",
      "Logic",
      "Games",
      "Dynamic Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5ab584381aaf06ac7900001c",
    "name": "Connect Four: Unlimited Edition",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Games",
      "Arrays",
      "Data Types",
      "Graphs",
      "Data Structures",
      "Game Boards"
    ]
  },
  {
    "id": "5ac374eeb42182f11a00002d",
    "name": "100m dash sprint time (SUVAT)",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5b1d0685da48c294e3001b31",
    "name": "Distance to the safe-zone moving towards its center",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5bb3a707945bd500450001cb",
    "name": "Hackermann",
    "approved": true,
    "tags": [
      "Puzzles",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Recursion",
      "Algorithms",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science",
      "Iterators",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5bbecf840441ca6d6a000126",
    "name": "Shuffle It Up II",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Performance",
      "Numbers",
      "Data Types",
      "Arithmetic",
      "Mathematics",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "5bc048de9b84f478ae000907",
    "name": "Simple Fun #394: Lonely Frog VI",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Puzzles",
      "Games",
      "Performance"
    ]
  },
  {
    "id": "5c178c8430f61aa318000117",
    "name": "Chess Fun # 13 : RegEx Like a Boss #1 : Valid  Pawn Moves",
    "approved": true,
    "tags": [
      "Algorithms",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings"
    ]
  },
  {
    "id": "5c82b661562a2074bbeac980",
    "name": "Tear me apart and merge the pieces together",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Theorem Proving",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "5c867173a2fc6d5263f4b4ea",
    "name": "Pattern in the mirror and bisimulation for real",
    "approved": true,
    "tags": [
      "Algorithms",
      "Theorem Proving"
    ]
  },
  {
    "id": "5cc29e3128b420000c85cc19",
    "name": "EM implies LPO, LPO implies LLPO",
    "approved": true,
    "tags": [
      "Algorithms",
      "Theorem Proving",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5cf2faa867455c0029536212",
    "name": "Pipe and Tap chaining operators",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Programming Paradigms",
      "Functional Programming",
      "Declarative Programming"
    ]
  },
  {
    "id": "5cf3e6d3c6c7fc00269fc475",
    "name": "Forcing an Option",
    "approved": true,
    "tags": [
      "Puzzles",
      "Advanced Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "5d09430767455c0019eb5a3f",
    "name": "van Eck sequences",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5d7b9ed14cd01b000e7ebb41",
    "name": "Crontab Parser",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5da74bf201735a001180def7",
    "name": "Rotate 1 / 8th",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5dd9b16ce5e5cb002928d95f",
    "name": "One Line Task: Fix",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Recursion",
      "Algorithms",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5e453b6476551c0029e275db",
    "name": "Semi-Thue Systems - The Word Problem [Part 1]",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5e924bda0a365a0033b12782",
    "name": "The most untyped typed language?",
    "approved": true,
    "tags": [
      "Puzzles",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5e998b42dcf07b0001581def",
    "name": "Odd + Even = Odd? Even * Anything = Even? Prove it!",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5e9c8a54ae2b040018f68dd9",
    "name": "I hate business trips",
    "approved": true,
    "tags": [
      "Algorithms",
      "Optimization"
    ]
  },
  {
    "id": "5f0f14348ff9dc0035690f34",
    "name": "Combinations on semicircle",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5f4af9c169f1cd0001ae764d",
    "name": "Wrap a cube with paper nets",
    "approved": true,
    "tags": [
      "Puzzles",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "605da8dc463d940023f2022e",
    "name": "QR-Code Message Encoding",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "60f9f0145a54f500107ae29b",
    "name": "Find the nth Term of a Sequence",
    "approved": true,
    "tags": [
      "Algorithms",
      "Sequences",
      "Arrays",
      "Data Types",
      "Algebra",
      "Mathematics",
      "Logic"
    ]
  },
  {
    "id": "6108f2fa3e38e900070b818c",
    "name": "Snafooz solver",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Logic",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "610bfdde5811e400274dbf66",
    "name": "Dobble: Identify the missing cards",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Games",
      "Puzzles",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "613f13a48dfb5f0019bb3b0f",
    "name": "Number of players for knockout/round-robin hybrid contest (easy mode)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Permutations",
      "Logic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "6158805b7b10b80007ce2c72",
    "name": "one line task : find the nearest vowel for all",
    "approved": true,
    "tags": [
      "Puzzles",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "617dcb2f242452004a77c653",
    "name": "Merging vectors without reallocation",
    "approved": true,
    "tags": [
      "Bugs",
      "Language Syntax",
      "Fundamentals",
      "Refactoring"
    ]
  },
  {
    "id": "619eab98d0ff910032a0debb",
    "name": "Score a Cross Country World Championship Race",
    "approved": true,
    "tags": [
      "Puzzles",
      "Sorting",
      "Algorithms",
      "Logic",
      "Objects",
      "Data Types"
    ]
  },
  {
    "id": "53be6d8a926c33630b0005c1",
    "name": "URI codec (encode/decode)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Encoding",
      "Logic",
      "Decoding"
    ]
  },
  {
    "id": "55064222d54715566800043d",
    "name": "Maximum clique",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "551e7db324b7a4d89d00030d",
    "name": "Mandelbrot set explorer",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5602c713f75452a7c500005c",
    "name": " Tangent Lines to a Circle from an External Point",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Geometry",
      "Algebra",
      "Data Types"
    ]
  },
  {
    "id": "5614adad2283aa822f0000b3",
    "name": "Product Partitions II",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "56e8f0d5b131af66ec00018e",
    "name": "■□ Pattern □■ : Christmas tree",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "570176b0d1acef5778000fbd",
    "name": "Car Rental Business Needs Statistics and Programming",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Algorithms",
      "Logic",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Declarative Programming",
      "Programming Paradigms",
      "Strings",
      "Statistics",
      "Data"
    ]
  },
  {
    "id": "57503baa87f0bf184c0012e6",
    "name": "DOS era #2: Attrib",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "577ccfad311a2442f00001ab",
    "name": "Graphics Series #6: Traffic lights check",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5781dd349fb2a52d03000024",
    "name": "Mahjong winning hand Validation #2: DA SAN YUAN(大三元)",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings"
    ]
  },
  {
    "id": "57c786e858da9e5ed20000ea",
    "name": "T.T.T.57: Reverse a number",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57c7a717fa9fc5bcd00001c9",
    "name": "T.T.T.58: Simple face recognition system",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57c8d7f8484cf9c1550000ff",
    "name": "Checkout Line Pricing",
    "approved": true,
    "tags": [
      "Algorithms",
      "Design Principles"
    ]
  },
  {
    "id": "57ec8487c7fe1316ac000b05",
    "name": "not So Easy: Create a page index of an article",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "580a8f039a90a3654b000032",
    "name": "Author Disambiguation: a name is a Name!",
    "approved": true,
    "tags": [
      "Algorithms",
      "Puzzles",
      "Games",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5817ff3ad4f64f4192000225",
    "name": "Spider man and his enemy",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "583fd0398a20113a83000061",
    "name": "Find number in an array # 2",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5848b18f6512c537b9000046",
    "name": "1D function inverter",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "584b7c39e6f3ab8910000004",
    "name": "N-game series probabilities",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5858fd43c1d5b4399f000138",
    "name": "Beginners Spy Kit",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Encryption",
      "Algorithms",
      "Cryptography",
      "Logic",
      "Security",
      "Decryption",
      "Mathematics",
      "Numbers",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "585b7bd53d357b12280003a3",
    "name": "Combination Lock",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5872a121056584c25400011d",
    "name": "Write your own pseudorandom number generator!",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "587a45b954a6780e37000176",
    "name": "Prime Fun #1",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "589d26f3e8afb7532f000078",
    "name": "Challenge Fun #7: N To The N",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "589d3938b6c071e4de000011",
    "name": "Simple Fun #117: Winner String",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58c61a1e8a452631c5000003",
    "name": "Simple Fun #196: Counterfeit Dollar",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5909467de494bbf3d40000d1",
    "name": "Simple Fun #239: Permutation Cycle",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "591748b3f014a2593d0000d9",
    "name": "Data mining #2",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Machine Learning",
      "Applied Computer Science"
    ]
  },
  {
    "id": "591918cd071575ee740000a1",
    "name": "Simple Fun #276: Book Partition",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "591b3cbc40ef9503700000ef",
    "name": "Simple Ruby code formatter",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Formatting",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59260882a475b5d3e2000028",
    "name": "Meta Mad Libs",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "592685a68270ccd7950001f8",
    "name": "Simple Fun #307: Shaolin Kungfu",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5927caedaf58a600ff00000b",
    "name": "Simple Fun #311: Missing Term",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5985a7b9911b68632500001f",
    "name": "BF basics #7: Words Counter",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "599d3a52a8b7539663000052",
    "name": "Happy Coding : Don't Break My Heart",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59c0765d70a3b708f00000c8",
    "name": "Simple Fun #346: Red Alert",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59c3b95cdcc405e2c900009b",
    "name": "Monosyllabic Oragoo",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59dc6a967905dfb7530000aa",
    "name": "Simple Fun #362: Who Is The Hero?  II",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59e74fb5fc3c49f1e2000028",
    "name": "Implementing complex numbers",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5a02612c32b8b90abd000052",
    "name": "Simple Fun #375: Minimal Subtractor II",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic",
      "Performance"
    ]
  },
  {
    "id": "5a13d36046d843105e000106",
    "name": "Simple Fun #381: Find d = a + b + c II",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Performance",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5a1c18d8697598a8ab00009a",
    "name": "Slot Machine Calculator",
    "approved": true,
    "tags": [
      "Puzzles",
      "Arrays",
      "Data Types",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "5a1fcf37c374cbe4fd000076",
    "name": "The islands",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5a749d835084d7a423000057",
    "name": "[BF] Sum 0 to N",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "5a829dd1373c2e987a000080",
    "name": "Proteinogenic amino acids",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a9fb5147c7a53e6c30000d0",
    "name": "Unshackle the Beast (uncontrolled components in ReactJS)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "React",
      "Babel",
      "Frameworks"
    ]
  },
  {
    "id": "5ac62974348c2203a90000c0",
    "name": "Transposing Guitar Tabs",
    "approved": true,
    "tags": [
      "Algorithms",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5aca2aceb4f6352a4100004f",
    "name": "Largest Palindromic Product",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Optimization"
    ]
  },
  {
    "id": "5b05a8dd91cc5739df0000aa",
    "name": "Math expression [HARD][CODE-GOLF]",
    "approved": true,
    "tags": [
      "Puzzles",
      "Parsing",
      "Algorithms",
      "Logic",
      "Strings",
      "Numbers",
      "Data Types",
      "Operators",
      "Fundamentals",
      "Games"
    ]
  },
  {
    "id": "5b49dbe76ac800b9f9000087",
    "name": "Implement ternary operator",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5b4a9158f1d553b3be0000c0",
    "name": "Cramer, thanks for your contribution!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Arrays",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Algebra"
    ]
  },
  {
    "id": "5b5f7f7607a266914200007c",
    "name": "Combinations in a Set Using Boxes",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Performance",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Machine Learning",
      "Applied Computer Science",
      "Arithmetic",
      "Memoization",
      "Design Patterns",
      "Design Principles"
    ]
  },
  {
    "id": "5b713d7187c59b53e60000b0",
    "name": "Next Higher Value  # 1 ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Arrays",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Algebra"
    ]
  },
  {
    "id": "5bb429a97631f02eec00001f",
    "name": "Are you Licensed to write JS?",
    "approved": true,
    "tags": [
      "Puzzles",
      "Metaprogramming",
      "Programming Paradigms",
      "Advanced Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "5bd36d5e03c3c4a37f0004f4",
    "name": "Limited number of instances",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Metaprogramming",
      "Advanced Language Features"
    ]
  },
  {
    "id": "5be4d000825f24623a0001e8",
    "name": "Almost Isosceles Integer Triangles  With Their Angles  With Asymptotic Tendency",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Performance",
      "Numbers",
      "Data Types",
      "Arithmetic",
      "Mathematics",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science",
      "Geometry",
      "Algebra"
    ]
  },
  {
    "id": "5c0c5ec84e8f1804b9000296",
    "name": "Ordered set",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Data Structures"
    ]
  },
  {
    "id": "5c1b23aa34fb628f2e000043",
    "name": "'Magic' recursion call depth number",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5c41e4591c07201f788a470d",
    "name": "Lisp Combination Trees",
    "approved": true,
    "tags": [
      "Algorithms",
      "Trees",
      "Data Structures",
      "Recursion",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "5c6ce4fda6aee247b380acff",
    "name": "One Line Task [Haskell]: Weak Primality Test",
    "approved": true,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Arithmetic"
    ]
  },
  {
    "id": "5c87e641a2fc6d2b42f4b610",
    "name": "Typeclass is garbage",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Polymorphism",
      "Object-oriented Programming",
      "Prototype-based Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5c99553d5c67244b60cb5722",
    "name": "Langton's Ant - Advanced Version",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Performance"
    ]
  },
  {
    "id": "5e8a8f8a18f8ed0010f55280",
    "name": "Fermat was wrong",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Theorem Proving"
    ]
  },
  {
    "id": "5e90c3814af7f4002e2535af",
    "name": "Show that there are two types that are unequal",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "6004cb552b8bc80017fe26b1",
    "name": "Clock hands cross  [Code Golf]",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "6012ec6c4a83590017a38312",
    "name": "C typeof",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Types"
    ]
  },
  {
    "id": "601ae2a5f6d6bb0012947f27",
    "name": "Rob the one-armed bandit",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Algorithms",
      "Logic",
      "Cryptography",
      "Security"
    ]
  },
  {
    "id": "6025224447c8ed001c6d8a43",
    "name": "Function Overloading for Types",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Data Types",
      "Methods",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "61211f9d27e72200567dfd3d",
    "name": "Min or Max - Tricky Version",
    "approved": true,
    "tags": [
      "Puzzles",
      "Fundamentals",
      "Games",
      "Binary",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "527f782024b930114700076e",
    "name": "Tower of Hanoi",
    "approved": true,
    "tags": [
      "Puzzles",
      "Recursion",
      "Algorithms",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "5567a3eec36c96a414000060",
    "name": "Earliest Occurring Unique Value  in Stream",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Optimization",
      "Data Structures"
    ]
  },
  {
    "id": "55df9798b87f0f87d100019a",
    "name": "Primes with  Two, Even and  Double  Even Jumps",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Structures"
    ]
  },
  {
    "id": "55f307bef98d9c4adc000006",
    "name": "Lambda term reduction",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Trees",
      "Data Structures"
    ]
  },
  {
    "id": "56369dd44ac96691150000f3",
    "name": "Moving Slice Enumerator",
    "approved": true,
    "tags": [
      "Algorithms",
      "Iterators",
      "Control Flow",
      "Object-oriented Programming",
      "Basic Language Features",
      "Fundamentals",
      "Programming Paradigms"
    ]
  },
  {
    "id": "56dd3dd94c9055a413000b22",
    "name": "Thinking & Testing : Nebula or Vortex",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "56f4202199b3861b880013e0",
    "name": "Thinking & Testing :  Archery contest",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "571a7c0cf24bdf99a8000df5",
    "name": "Minimal Cost Binary Search Trees",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Binary Search Trees",
      "Trees",
      "Binary",
      "Data Structures"
    ]
  },
  {
    "id": "574dae97dab13c892d000fcb",
    "name": "Captcha parser",
    "approved": true,
    "tags": [
      "Algorithms",
      "Parsing",
      "Logic",
      "Strings"
    ]
  },
  {
    "id": "57531a8605067f3b8d001083",
    "name": "Every nth array element. (Advanced)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "578205fe0a8eb285eb0000b2",
    "name": "Mahjong winning hand Validation #3: LV YI SE(绿一色)",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings"
    ]
  },
  {
    "id": "579a21b37cb7a10213001634",
    "name": "WOW-signal!",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Formats",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals"
    ]
  },
  {
    "id": "57b06eb0bb9944d42c0001ab",
    "name": "T.T.T.33: Grandfather clock",
    "approved": true,
    "tags": [
      "Algorithms",
      "Games"
    ]
  },
  {
    "id": "57c3a4431170a30b4e00017f",
    "name": "T.T.T.53: Fighting for love! Knights of the round",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57c4f4ac0fe1438e630007c6",
    "name": "Gnomes and Hats: A Horror Story",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "57d12a82264276650c0002d9",
    "name": "Car Door Roulette - Harder Version",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "57d8c55ebfcdc548af000430",
    "name": "I guess this is a 6kyu kata #10: Emotion of sentences",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57e88fd93d1cb559280000b6",
    "name": "T.T.T.61: Alien's magic",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57f46250bd7b5434b7000ab8",
    "name": "NSA's Little Puzzle ",
    "approved": true,
    "tags": [
      "Puzzles",
      "Ciphers",
      "Algorithms",
      "Cryptography",
      "Logic",
      "Security"
    ]
  },
  {
    "id": "5842f943c5c9b0f7140001e1",
    "name": "Find number in an array # 5",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "584d9a8fd2d637cccf00017a",
    "name": "Football Season",
    "approved": true,
    "tags": [
      "Algorithms",
      "Permutations",
      "Logic"
    ]
  },
  {
    "id": "5850bff5b76e6599aa00011a",
    "name": "Christmas mission: Distribute gifts #4",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "587bdb09289b362ff50000e4",
    "name": "Becoming a Real spy",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Algorithms",
      "Logic",
      "Encryption",
      "Cryptography",
      "Security",
      "Decryption",
      "Bits",
      "Binary"
    ]
  },
  {
    "id": "58804f03912e5d0d4b000031",
    "name": "Office Mission #4: Smart-workload feature",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58b03e48a965cb194f0002bd",
    "name": "Gradient interpolation",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58d5c86f8582321a51001665",
    "name": "Arrive to the Sum!",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5901438ce593353de6000055",
    "name": "Simple Fun #216: Count Rectangles",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "590a853a093675b283000008",
    "name": "Simple Fun #242: Caesar Box Cipher Encoding",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "590c3b1ff06c49a024000001",
    "name": "Simple Fun #249: Subtraction By Regrouping",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "596c942361c22e6ae2000450",
    "name": "Simple Fun #343: Add Spaces Between 1 To n",
    "approved": true,
    "tags": [
      "Puzzles",
      "Algorithms",
      "Logic",
      "Games"
    ]
  },
  {
    "id": "5976575438480829ff000041",
    "name": "Punch Card - Reward System",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "597737709e2c45882700009a",
    "name": "Electron configuration of chemical elements",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Objects",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Strings"
    ]
  },
  {
    "id": "5993dcfca6a7632807000017",
    "name": "Domino Tiling - 3 x N Board",
    "approved": true,
    "tags": [
      "Puzzles",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Dynamic Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "59953009d65a278783000062",
    "name": "Insane Circular Limited Sums",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "59c721061a68b7e58a00002e",
    "name": "Simple Fun #350: Count Pairs",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59ddd52ee50813492c0000b1",
    "name": "Simple Fun #363: Rabbit Hunt",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5a0b9d8232b8b90c2d000087",
    "name": "Simple Fun #378: The Simplest Problem",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a2950621f7f70c12d000073",
    "name": "Compression : impossible",
    "approved": true,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Integers"
    ]
  },
  {
    "id": "5a3c7c151f7f70b19a00006f",
    "name": "Concatenation substring",
    "approved": true,
    "tags": [
      "Algorithms",
      "Performance"
    ]
  },
  {
    "id": "5a647ae4d8e145fd66000073",
    "name": "Romanize Russian Road Signs",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5a861de7ba1bb560580001c9",
    "name": "Gigabyte Streaming",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Streams",
      "IO"
    ]
  },
  {
    "id": "5a8aabe0fd577773ae0000a5",
    "name": "[BF] Memory Limited : Repeat Input (Using only 12 cells)",
    "approved": true,
    "tags": [
      "Puzzles",
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types",
      "Games"
    ]
  },
  {
    "id": "5aba8a75206a29494000021b",
    "name": "HyperReduce",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Map/Reduce",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5b3bec086be5d8893000002e",
    "name": "The Rubik's Cube",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Algorithms",
      "Logic",
      "Geometry",
      "Algebra",
      "Mathematics"
    ]
  },
  {
    "id": "5b7bcf77a077ab0125000b9c",
    "name": "[BF] RGB Hexadecimal to Decimal",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic",
      "Strings",
      "Data Types",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "5be0af91621daf08e1000185",
    "name": "Following Sierpinski's Footprints",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Performance",
      "Numbers",
      "Data Types",
      "Arithmetic",
      "Mathematics"
    ]
  },
  {
    "id": "5c084eee38b1d345970000cd",
    "name": "Pimp my Library",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5c0ce510316a58fa7f000025",
    "name": "Psychic Guesser for the guessing game",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5c1905cc16537c7782000783",
    "name": "Domino Tiling - 2 x N Board -- Challenge Edition!",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5c23d88a9cf13392250003bc",
    "name": "Basic Scheme Math Composition of Functions",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5c930224c4661143a6666add",
    "name": "A special set of matrices with unique representation",
    "approved": true,
    "tags": [
      "Algorithms",
      "Theorem Proving",
      "Mathematics",
      "Logic",
      "Numbers",
      "Linear Algebra",
      "Algebra"
    ]
  },
  {
    "id": "5ca13f1def39600014b37faf",
    "name": "Simple macro with define-syntax-rule",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Macros",
      "Advanced Language Features"
    ]
  },
  {
    "id": "5d2477487c046b0011b45254",
    "name": "The  Takeuchi function",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5dc424122c135e001499d0e5",
    "name": "Readable Specification Pattern",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Design Patterns",
      "Design Principles"
    ]
  },
  {
    "id": "5dd08d43dcc2e90029b291af",
    "name": "Socialist distribution (performance edition)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Performance"
    ]
  },
  {
    "id": "5e10444e4225f3000123b9db",
    "name": "Duality in Boolean logic",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Theorem Proving",
      "Logic"
    ]
  },
  {
    "id": "5e9900b311efe00001996e26",
    "name": "Every symmetric transitive relation is reflexive... right?",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5e9ed1864f12ec003281e761",
    "name": "Markdown 101: Code Format Corrector",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Lists",
      "Data Structures",
      "Formats"
    ]
  },
  {
    "id": "5ed7625f548425001205e290",
    "name": "Hint a Type",
    "approved": true,
    "tags": [
      "Algorithms",
      "Data Types",
      "Recursion",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "5f666648a1e519002d72cf94",
    "name": "[BF] Simple square root",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5fdb81b71e47c6000d26dc4b",
    "name": "Trees to Parentheses, and Back",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Trees",
      "Data Structures"
    ]
  },
  {
    "id": "5ff131130e1ea3002b3d4256",
    "name": "Brackets paired, Type-safely",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "60720642a8fb1a0027fbc614",
    "name": "Iterators",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Data Structures"
    ]
  },
  {
    "id": "60f3639b539c06001a076267",
    "name": "Spreading Spores Graph",
    "approved": true,
    "tags": [
      "Algorithms",
      "Linear Algebra",
      "Algebra",
      "Mathematics",
      "Logic",
      "Numbers",
      "Graphs",
      "Data Structures",
      "numpy",
      "Python Packages"
    ]
  },
  {
    "id": "610561dcd20017000f164d55",
    "name": "Mini Spreadsheet",
    "approved": true,
    "tags": [
      "Algorithms",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "6152be7b9aa70a0033906a18",
    "name": "Simple Hash",
    "approved": true,
    "tags": [
      "Algorithms",
      "Hashes",
      "Data Structures"
    ]
  },
  {
    "id": "61619bff52747c000dd2b159",
    "name": "Let's learn COBOL [Fix my noob mess] # 2",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "61aa487e73debe0008181c46",
    "name": "Robot on a Table",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "61df69c0856e3400577413a0",
    "name": "Probation Officer - Prescription Drug Review",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Dates/Time"
    ]
  },
  {
    "id": "61e2edfeaf28c2001b57af98",
    "name": "Subsequence Sums II",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "52962fcbdbad8fa3c900076a",
    "name": "Sting like a bee, float like a sponge?",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "53b57b649c1553d7440002ec",
    "name": "Bresenham's line Algorithm",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "56e2ede2c92c6cb1370012ba",
    "name": "■□ Pattern □■ : Snake",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "56e8d06029035a0c7c001d85",
    "name": "■□ Pattern □■ : Heart",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "56eb6abd8535c2d8d0001ac7",
    "name": "Unsecure login - Hack this code #1",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Security",
      "Strings",
      "Data Types",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5736bda2fe240a8bfb000402",
    "name": "Duplicate Array#transpose functionality",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5747a976eb737c50190000f7",
    "name": "Fake website #5: Design an accurate user level calculation function",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5782477f0a8eb293b3000020",
    "name": "Mahjong winning hand Validation #4: JIU LIAN BAO DENG(九莲宝灯)",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings"
    ]
  },
  {
    "id": "57ba699e6bb0349c040006d4",
    "name": "T.T.T.43: The appellation of the Chinese people's age and his zodiac（中国人的年龄和他的生肖称谓）",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57ce3d87f5f4ef590000001b",
    "name": "T.T.T.60: Break all the rules",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58160117c6b6d598ca001d29",
    "name": "Add a pair of parentheses to an arithmetic expression",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58223a9f70ca2844e0000592",
    "name": "Hangŭl Unicode From Jamo Values",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Encoding"
    ]
  },
  {
    "id": "58224b5334c53a4294000b5a",
    "name": "Map and  Filter to Get a Special Sequence of Integers",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Algorithms",
      "Logic",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Optimization",
      "Declarative Programming",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "587a63c6a2bdc30e37000a77",
    "name": "Candy count",
    "approved": true,
    "tags": [
      "Refactoring",
      "Arrays",
      "Data Types",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "589d60c8665341ee730000fb",
    "name": "Challenge Fun #9: Overlapping Images",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58aa50372223a30e4f000068",
    "name": "Challenge Fun #13: First Operation Character",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58bc7ba5955a48179c000326",
    "name": "Weighted Grading System",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Objects",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "58f1e4a2445a4ccef600006d",
    "name": "象棋 (Xiangqi/Chinese Chess) Board Validator",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Basic Language Features",
      "Strings",
      "Data Types",
      "Rules"
    ]
  },
  {
    "id": "58f5f479bc60c6898d00009e",
    "name": "Connect Letters",
    "approved": true,
    "tags": [
      "Puzzles",
      "Algorithms",
      "Logic",
      "Dynamic Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "590bb4bd0d363131ab000085",
    "name": "Computing the complex Gamma function",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5916c87540ef95d8e1000007",
    "name": "Learning TypeScript. Advanced Types. Intersection Types",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5919237fcdee8ddd25000082",
    "name": "Simple Fun #278: Remove K",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "591a9c88658902e22f0001be",
    "name": "Simple Fun #284: Making A String",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59799cb9429e83b7e500010c",
    "name": "Matunga coins",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Performance"
    ]
  },
  {
    "id": "59a67e34485a4d1ccb0000ae",
    "name": "Three Dots--Play game Series #8 ",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "59ae1dd8485a4dff9f000020",
    "name": "Happy Coding : Dance Pad I",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Performance"
    ]
  },
  {
    "id": "59b8a1bc4f98a8f844000087",
    "name": "Minimum exact p  ",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Statistics",
      "Data"
    ]
  },
  {
    "id": "59ba03b65227ddead20000d7",
    "name": "Tap into Mr. Mxyzinjin's Stream",
    "approved": true,
    "tags": [
      "Puzzles",
      "Cryptography",
      "Security"
    ]
  },
  {
    "id": "59caff63d751dfac45000026",
    "name": "Simple Fun #356: Snake Chess",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59cf17a9a25c8c08f400000b",
    "name": "Simple Fun #359: Cut The Number",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Performance"
    ]
  },
  {
    "id": "59dad2177997cb2a1300008d",
    "name": "Simple Fun #360: Calculate 1 to n Using The Fewest Numbers",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5a178f5206d5b6310d000055",
    "name": "Simple Fun #382: Counting Sheep",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a1e1089c9fc0ed14100001b",
    "name": "Tap Into Mr. Mxyzinjin's Safe",
    "approved": true,
    "tags": [
      "Puzzles",
      "Cryptography",
      "Security"
    ]
  },
  {
    "id": "5a322c57ee1aae68e6000074",
    "name": "Hex Converting Visualisation",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5a53d0f8145c46d9fb0002eb",
    "name": "Mountain View",
    "approved": true,
    "tags": [
      "Algorithms",
      "ASCII",
      "Character Encodings",
      "Formats"
    ]
  },
  {
    "id": "5a620d23cadebf5a090000e9",
    "name": "Simple Fun #390: What Day Is It Today?",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Fundamentals"
    ]
  },
  {
    "id": "5a773dd90136a132a000000b",
    "name": "[BF] Is Palindrome?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5a8f42da5084d7dca2000255",
    "name": "Assorted Rectangular Pieces Puzzle",
    "approved": true,
    "tags": [
      "Algorithms",
      "Puzzles",
      "Games",
      "Performance"
    ]
  },
  {
    "id": "5a9666914a6b3452e5000008",
    "name": "BrainGolf: Square Numbers",
    "approved": true,
    "tags": [
      "Puzzles",
      "Optimization"
    ]
  },
  {
    "id": "5adc571c88a0b777160000c8",
    "name": "Fortran for beginners: formatting",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Formatting",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5aefb889d2ee276a73000063",
    "name": "Calculator: The game--Play game Series #11",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5b044f0a3e9715078200029a",
    "name": "Marple logic game",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Logic"
    ]
  },
  {
    "id": "5b3cdb419c9a75664e00013e",
    "name": "Counting the Webdesigns based on Used Colours",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Performance",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Machine Learning",
      "Applied Computer Science",
      "Arithmetic"
    ]
  },
  {
    "id": "5ba0adafd6b09fd23c000255",
    "name": "Cody Block's Pro Skater",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Statistics",
      "Algorithms",
      "Data",
      "Logic"
    ]
  },
  {
    "id": "5c17c7e99830f977d100006a",
    "name": "[Scala] Language Features: Make It Type Check!",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5c23690b0b744394fa0000a1",
    "name": "Expected value #1",
    "approved": true,
    "tags": [
      "Puzzles",
      "Security",
      "Games"
    ]
  },
  {
    "id": "5c878cc8a2fc6d10eff4b691",
    "name": "Left, left! Right, right! Comp! Symmetric! Q!E!D!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Theorem Proving"
    ]
  },
  {
    "id": "5c8b4799133e6c0009c7b096",
    "name": "Program Verification #4: Exponentiation by squaring",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Theorem Proving"
    ]
  },
  {
    "id": "5cf8dc6acb266c00242d7ba3",
    "name": "Less is Not More",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5cfc008ee1021600281b4357",
    "name": "Converting forall to exists",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5cfe4465ac68b86026b09c77",
    "name": "Divisible by primes",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5e4de3b05d0b5f0022501d5b",
    "name": "Next polydivisible number in any base",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5e5fbcc5fa2602003316f7b5",
    "name": "Propositional SAT Problem",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "5ea1de08a140dc0025b10d82",
    "name": "Lisp-esque parsing [Code Golf]",
    "approved": true,
    "tags": [
      "Algorithms",
      "Parsing",
      "Logic",
      "Strings",
      "Optimization"
    ]
  },
  {
    "id": "5ee12f0a5c357700329a6f8d",
    "name": "Coping with NP-Hardness #3: Finding the Minimum Hamiltonian Cycle",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "601b1d0c7de207001c81980b",
    "name": "Approximate Solution of Travelling Salesman Problem",
    "approved": true,
    "tags": [
      "Algorithms",
      "Dynamic Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "6067346f6eeb07003fd82679",
    "name": "Advanced binary toggling puzzle",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Puzzles",
      "Games",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "60d0fd89efbd700055f491c4",
    "name": "Topology #0.1: Converging Coins (Performance edition)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Graphs",
      "Data Structures",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Search"
    ]
  },
  {
    "id": "60eb76fd53673e001d7b1b98",
    "name": "Counting hexagons",
    "approved": true,
    "tags": [
      "Puzzles",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "615bf5f446a1190007bfb9d9",
    "name": "Pandas Series 104: Flatten Rows From DataFrame",
    "approved": true,
    "tags": [
      "Fundamentals",
      "pandas",
      "Python Packages",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "61db0b0d5b4a78000ef34d1f",
    "name": "Bus ASCII-Art Animation",
    "approved": true,
    "tags": [
      "Puzzles",
      "Animation",
      "Graphics"
    ]
  },
  {
    "id": "5536552b372553087d000086",
    "name": "Little PL/SQL parser - get text literals",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types",
      "Data",
      "Utilities"
    ]
  },
  {
    "id": "5674788cadb5889b69000045",
    "name": "Lattice Point Interpolation",
    "approved": true,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Integers",
      "Arrays"
    ]
  },
  {
    "id": "569e0890bbc41f0e3800004b",
    "name": "Graphics 03: Drawing Ellipse, rotate by angle",
    "approved": true,
    "tags": [
      "Algorithms",
      "Graphics",
      "Logic"
    ]
  },
  {
    "id": "577bd442df78c172af0002f8",
    "name": "T.T.T.15: Sort the alarm clock",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5783abfda1b8d50c3c0001c0",
    "name": "Mahjong winning hand Validation #5: YI SE SI BU GAO(一色四步高)",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings"
    ]
  },
  {
    "id": "57877d09ba5c4b0574000146",
    "name": "Diophantine equation#2",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Fundamentals",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "578793c0ba5c4b3585000302",
    "name": "Mr. right & Mr. Wrong #1: Guess a number",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57961d4e4be9121ec90001bd",
    "name": "Constructing a car #3 - On-Board Computer",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Objects",
      "Data Types",
      "Logic",
      "Data Structures"
    ]
  },
  {
    "id": "57abda75e298a7f22f000022",
    "name": "T.T.T.29: Similarity evaluation of two strings",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57f8b50f5cae448cb70001fd",
    "name": "Permutations (partial)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Permutations",
      "Logic"
    ]
  },
  {
    "id": "57fb33039610ce3b490000f9",
    "name": "Working With Coloured Numbers II",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Algorithms",
      "Logic",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Optimization",
      "Declarative Programming",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "580716fae1136ee0e100123b",
    "name": "From..To..Series #4: from city1 to city2. How many time will spent?",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "582539ba4ef190f2e60000b2",
    "name": "programming beginner: Worst sort",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5898126a338749e7e5000063",
    "name": "Simple Fun #99: Curious Clock",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58bfa40c43fadb4edb0000b5",
    "name": "Challenge Fun #20: Edge Detection",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "58eac415a312f589530000be",
    "name": "Neutralization reaction",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "58f0f2e404247ee939000016",
    "name": "Computing the Normal Distribution Table",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Statistics",
      "Data"
    ]
  },
  {
    "id": "5914186c67f13c294f000006",
    "name": "Simple Fun #269: Hard Process",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5915648051f1d324ef00007a",
    "name": "A kata is a kata, you can't say it's only a half!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Basic Language Features"
    ]
  },
  {
    "id": "591575f6d64db0431c000009",
    "name": "Simple Fun #272: Throwing Dice",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5915a6b6f014a254080000a8",
    "name": "Simple Fun #275: Simulate Puzzle Game",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "591a70c6afbf2af72d0001fe",
    "name": "Simple Fun #281: Possible Palindrome",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "591d6489ff832a7c6a0000da",
    "name": "Simple Fun #294: Reduce Square Roots",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5922965c95af7fabb300000f",
    "name": "Simple Fun #300: Lucky Ticket",
    "approved": true,
    "tags": [
      "Algorithms",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5951c2025e26397ef6000001",
    "name": "Simple Fun #328: Sprinkler",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59535e88e996027100000006",
    "name": "Simple Fun #331: Mountaineering!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5959c8784787d0c51100020f",
    "name": "Get Indices of Item Weights",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Hashes",
      "Data Structures",
      "Objects",
      "Lists"
    ]
  },
  {
    "id": "59c205ee9f0cbc5eb000004d",
    "name": "Challenge Fun : Rotate Clocks",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59d513169f0cbce39b0000c8",
    "name": "Convexity of a polygon",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Dynamic Arrays",
      "Arrays",
      "Functional Programming",
      "Data Types",
      "Declarative Programming",
      "Programming Paradigms",
      "Vectors"
    ]
  },
  {
    "id": "59eca716da62db9152001bac",
    "name": "Basket of Fruits",
    "approved": true,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Games"
    ]
  },
  {
    "id": "5a30f669f28b82342e00007c",
    "name": "Connected blocks (second part)",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5a7d1f0eba1bb55755000071",
    "name": "[BF]  Character Counts",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5adf49bc88a0b7067a000127",
    "name": "Selecting evenly matched teams",
    "approved": true,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5b1371dfedd62cd047000023",
    "name": "BF for finding ASCII value",
    "approved": true,
    "tags": [
      "Puzzles",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5b4665ba19b10e641a000015",
    "name": "Formatting simple HTML",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic",
      "Strings",
      "Data Types",
      "Parsing"
    ]
  },
  {
    "id": "5b4f309dbdd074f9070000a3",
    "name": "Ten-pin bowling - score the frame",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5bbad85af6e30d9350000027",
    "name": "Odd Is Real",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Performance"
    ]
  },
  {
    "id": "5bbdee6acd4ec8ca520001e0",
    "name": "Find N-1 common letters",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5bdb9fa44a8a178df80000ee",
    "name": "Simple Fun #398: Draw the Stereoscopic Graphics of Building Blocks",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5c88365acab0b90014f24f8c",
    "name": "I~ transport lemmas so right, proving the wrong thing ",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5cbb64270840280001bb730b",
    "name": "Transitivity",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5cbcf4d4a0dcd2001e28fc79",
    "name": "Castle of Cubes",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5cbd5a3d9f1a4e0018503301",
    "name": "Yet another introduction to bisimulation, Chicken's style",
    "approved": true,
    "tags": [
      "Algorithms",
      "Theorem Proving"
    ]
  },
  {
    "id": "5df653efc6ba5100191e602f",
    "name": "Snake Cube Solver",
    "approved": true,
    "tags": [
      "Puzzles",
      "Recursion",
      "Algorithms",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science",
      "Geometry",
      "Algebra",
      "Mathematics"
    ]
  },
  {
    "id": "5e09b94c73aa2c0034abea8f",
    "name": "Line Safari - Find the end points",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5e4cf596dc3099002a30cbb1",
    "name": "Binding of Algebraic Data Types",
    "approved": true,
    "tags": [
      "Algorithms",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Data Types"
    ]
  },
  {
    "id": "5e889a3c0f55ed0032f1879f",
    "name": "Incidence Geometry #2",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Theorem Proving"
    ]
  },
  {
    "id": "5e889bcd0f55ed0023f11b2e",
    "name": "Incidence Geometry #3",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Theorem Proving"
    ]
  },
  {
    "id": "5f3db6f4c6197b00151ceae8",
    "name": "Right truncatable primes in a given base",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "600fd9143eed6f0013361d55",
    "name": "Assemblearning - Clamp",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "613dac1c78f04a000b455a74",
    "name": "Lorentz-Transform the Electric and Magnetic Fields",
    "approved": true,
    "tags": [
      "Algorithms",
      "Physics",
      "Logic",
      "Arrays",
      "Data Types",
      "Algebra",
      "Mathematics",
      "Geometry"
    ]
  },
  {
    "id": "6159b2ad19b85f0027bfe964",
    "name": "Let's learn COBOL [Fix my noob mess]",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "61618efa52747c000dd1347c",
    "name": "Millennium bug fix (COBOL)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Dates/Time",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "616a585e6814de0007f037a7",
    "name": "Cargo-Bot Interpreter",
    "approved": true,
    "tags": [
      "Algorithms",
      "Interpreters",
      "Logic",
      "Games"
    ]
  },
  {
    "id": "621ab012ed37430016df15c0",
    "name": "Rasterize a Triangle",
    "approved": true,
    "tags": [
      "Algorithms",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Logic",
      "Graphics",
      "Image Processing"
    ]
  },
  {
    "id": "538daad88ca4a39acb000705",
    "name": "new IntStorage(byteLength, ints).read(from, count);",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Bits",
      "Binary",
      "Numbers",
      "Data Types",
      "Integers"
    ]
  },
  {
    "id": "54fd8340b58689c43e001061",
    "name": "No Modulo Mk II",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Arithmetic"
    ]
  },
  {
    "id": "5543e329a69dcb81b9000111",
    "name": "Calculating Expected Utility",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5618716a738b95cee8000062",
    "name": "Square Cubic  Triples",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Data Structures",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Memoization",
      "Design Patterns",
      "Design Principles",
      "Hashes"
    ]
  },
  {
    "id": "56e94e87f6c72127f000086f",
    "name": "■□ Pattern □■ : Double-Spiral",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57b17c15b69bfca7ce000608",
    "name": "T.T.T.36: A missing number on the chessboard",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57be4f2e87e4483c800002ee",
    "name": "T.T.T.47: The boss is always right",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57fdcc3898f76d74730006d6",
    "name": "not So Easy: Count characters 2",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58330c230474d1a22800055d",
    "name": "[BF] Squares",
    "approved": true,
    "tags": [
      "Puzzles",
      "Esoteric Languages"
    ]
  },
  {
    "id": "586894bea44cfca1a3000085",
    "name": "My daughter's math test questions -- Part 2",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58943e3e8a8a238752000118",
    "name": "Simple Fun #82: Star Rotation",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "589d2fc12cae972688000137",
    "name": "Challenge Fun #8: Numbers Concatenation",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5919575c5ffc3080490000b9",
    "name": "Simple Fun #280: Digit One",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "591d4581c09ee0555c00004d",
    "name": "Simple Fun #291: Scheduling Denouncement",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "592aca6975b580142000098e",
    "name": "No Return #2: Test the Devices",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5934b1db00f77d7d84000016",
    "name": "Simple Fun #315: Stock God",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "597277844998c50c9a000051",
    "name": "Learning TypeScript. Mixins",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59cded999f0cbc69f700005d",
    "name": "Algorithm Fun: Find The Unknown Number - Part III",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59ed9b3a7905df9d89000078",
    "name": "Simple Fun #368: Number Of Possible Winners",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59ffd493ba2a14d16f0000d9",
    "name": "Simple Fun #373: The Possible Scores",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a0ddb08c374cb18e900006b",
    "name": "Auto Sorted Array - Easy",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a125226ffe75ff829000040",
    "name": "Simple Fun #379: Division",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5a24fff71f7f7051bd000097",
    "name": "Simple Fun #385: Multitask Windows",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a7954065084d7b87700003c",
    "name": "[BF]  Round a Number",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5adf4a1488a0b7b9cb000176",
    "name": "Scientific Computing in Fortran #1 - Introduction to Quaternion Algebra",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5ae337cd68e64445f900013c",
    "name": "ASCII Fun #6: Sorted Weights",
    "approved": true,
    "tags": [
      "Fundamentals",
      "ASCII",
      "Character Encodings",
      "Formats",
      "Games"
    ]
  },
  {
    "id": "5b8eef5574a4f499de000105",
    "name": "The Dollar Game",
    "approved": true,
    "tags": [
      "Algorithms",
      "Performance",
      "Logic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "5bb5880f3cc0597aae00003f",
    "name": "What's a beet counter to do?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Performance",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5c2ef8c3a305ad00139112b7",
    "name": "Kata 2019: Bonus Game II",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Dynamic Programming",
      "Programming Paradigms",
      "Performance"
    ]
  },
  {
    "id": "5c8cf813eca75e00015121b0",
    "name": "Maybe Injective",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5c91bfdaac8b333b7f2fb5c7",
    "name": "A special set of matrices closed under matmul and transpose",
    "approved": true,
    "tags": [
      "Algorithms",
      "Theorem Proving",
      "Mathematics",
      "Logic",
      "Numbers",
      "Linear Algebra",
      "Algebra"
    ]
  },
  {
    "id": "5cc10885658d6f001281038a",
    "name": "Exploring ways to evaluate and compile a trivial language",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Theorem Proving"
    ]
  },
  {
    "id": "5cf73c3c97d5f8001b935546",
    "name": "Running around in circles, optimizing the Double Negation",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5d19e7669dd9860024d3c5bc",
    "name": "Verified subsequence matching",
    "approved": true,
    "tags": [
      "Algorithms",
      "Theorem Proving"
    ]
  },
  {
    "id": "5d2b89d4b90c0a001f4a6456",
    "name": "Real Fibonacci",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Theorem Proving"
    ]
  },
  {
    "id": "5d838fa2f204c10021a88f1c",
    "name": "Forth Array",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5d95118fdb5c3c0001a55c9b",
    "name": "Spiral Column Addition",
    "approved": true,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5e0dce514225f30001ed98bc",
    "name": "Is nat equal to bool?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Theorem Proving",
      "Logic"
    ]
  },
  {
    "id": "5e8897a818f8ed002eedd1bd",
    "name": "Incidence Geometry #1",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Theorem Proving",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5e88a132a220140028506a43",
    "name": "Incidence Geometry #5",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Theorem Proving"
    ]
  },
  {
    "id": "5e88a329c398e20033afc236",
    "name": "Incidence Geometry #6",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Theorem Proving"
    ]
  },
  {
    "id": "5e88a6657912b20021d49d18",
    "name": "Incidence Geometry #8",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Theorem Proving"
    ]
  },
  {
    "id": "5e9981da9dd96e001f3b7c0c",
    "name": "Mathematical Analysis - Limits of Sequences #2",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Sequences",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5ea8056e449f540001a2dab2",
    "name": "Group Is Not Union Of Two Proper Subgroups",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5eec40dfe5d13e0001234d01",
    "name": "Verified leftpad (Theorem prover showdown #1)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Theorem Proving"
    ]
  },
  {
    "id": "5f148fcbe2c2e0002ec7c20e",
    "name": "Keep the balance",
    "approved": true,
    "tags": [
      "Algorithms",
      "Recursion",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science",
      "Trees",
      "Data Structures"
    ]
  },
  {
    "id": "609243c36e796b003e79e6b5",
    "name": "Web Polygons",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Data Structures",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Mathematics",
      "Numbers",
      "Geometry",
      "Algebra"
    ]
  },
  {
    "id": "6168a55ac9bd9b003e799673",
    "name": "Finite automation 2: NFA Runner",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55cc4912df1006e49c0000f4",
    "name": "Hide from the Sun",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "56411486f3486fd9a300001a",
    "name": "Integer Triangles  Having  One Angle The Double of Another One",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Geometry",
      "Algebra",
      "Memoization",
      "Design Patterns",
      "Design Principles",
      "Hashes",
      "Data Structures"
    ]
  },
  {
    "id": "56bb0aa60e8b298832000bfa",
    "name": "Graphics 04: Complete Function Grapher (~15 Lines of Code?!)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Graphics",
      "Fundamentals",
      "Algebra",
      "Data Types",
      "Compiler Theory"
    ]
  },
  {
    "id": "56f606236b88de2103000267",
    "name": "Thinking & Testing : The repair of parchment",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "571dc01dd3a1d22ecc0001ad",
    "name": "Coding 3min : Excel Puzzle #3",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5779cde582d7d004c30000d5",
    "name": "Graphics Series #5: The rope is burning",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57a369307cb1f385230002e2",
    "name": "Find the code and open the safe",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Security",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "57b5eb3aa4943572a100000f",
    "name": "T.T.T.42: Loners Are Disgraceful（孤独的人是可耻的）",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57bd18b7517c6dd910000265",
    "name": "T.T.T.45: College Students' \"money game\"（大学生的“金钱游戏”）",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57d7935d1a6282fa28000041",
    "name": "I guess this is a 6kyu kata #9: Squeeze two strings",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57f44ed37b70985e01000094",
    "name": "not So Easy: Replace character according to shape",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5848f4f2d8543bf3c7000602",
    "name": "Make an increasing sequence",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Dynamic Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "587fae1212fc6e1dc4000033",
    "name": "Office Mission #1: Select multiple tasks",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "593da1ddacdf048c93000023",
    "name": "Paragraph Setting: Align Left",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "596b1d44224071b9f5000010",
    "name": "D&D Character generator #2: psion power points",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59c4b77163b362cf5a000004",
    "name": "Simple Fun #349: Big Party",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Performance"
    ]
  },
  {
    "id": "59ea2a943d09a737c40000ff",
    "name": "Chocolate Celebration",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "5a00ea6ac9fc0e949f00001b",
    "name": "foldr",
    "approved": true,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "5a13703d38f5d243f1001860",
    "name": "Fill in an area",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5a26abdab6486ad96c000116",
    "name": "Preserve the order !",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Numbers",
      "Encoding",
      "Logic",
      "Decoding"
    ]
  },
  {
    "id": "5a529cced8e145207e000010",
    "name": "Full Metal Chemist #2: parse me...",
    "approved": true,
    "tags": [
      "Puzzles",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings",
      "Parsing",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5a79cdaffd5777dbb700010c",
    "name": "[BF]  N-th Fibonacci Number",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5b07eab9abe9560de40000d3",
    "name": "Scientific Computing in Fortran #3 - Discrete Fourier Transform",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5b47ba689c9a7591e70001a3",
    "name": "Multidimensional  Neighbourhood",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Data Structures",
      "Arrays",
      "Data Types",
      "Performance"
    ]
  },
  {
    "id": "5b74e28e69826c336e00002a",
    "name": "Next Higher Value #2",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Arrays",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Algebra"
    ]
  },
  {
    "id": "5bd806172040a1669f00015a",
    "name": "Simple Fun #397: The Distance Between Two Points in a Navigational Map",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5c87786accafc44db95eb8cc",
    "name": "Heterogeneous Equality on sized vectors",
    "approved": true,
    "tags": [
      "Puzzles",
      "Dynamic Arrays",
      "Arrays",
      "Functional Programming",
      "Data Types",
      "Declarative Programming",
      "Programming Paradigms",
      "Vectors",
      "Theorem Proving"
    ]
  },
  {
    "id": "5c8bd0997f1f6c5a24f48371",
    "name": "Just Be Injective",
    "approved": true,
    "tags": [
      "Algorithms",
      "Theorem Proving"
    ]
  },
  {
    "id": "5c8ca6e0eca75e0001511bc6",
    "name": "Two paths in the forest",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Theorem Proving"
    ]
  },
  {
    "id": "5cb758d83e6dce00149bb5cd",
    "name": "Give me the Corresponding Proper Fraction!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Performance",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Data Structures",
      "Strings",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "5cdce6056d6a44002999a062",
    "name": "Rewriting on any binary equivalence relation",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Theorem Proving",
      "Advanced Language Features"
    ]
  },
  {
    "id": "5cf39c3992613c0023e7b0b8",
    "name": "Serializing an Enum",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Programming Paradigms",
      "Design Patterns",
      "Design Principles"
    ]
  },
  {
    "id": "5cfd36ea4c60c3001884ed42",
    "name": "String counting",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5d0fc2427006cd00013b73d6",
    "name": "Ltac practice: The tarai function",
    "approved": true,
    "tags": [
      "Puzzles",
      "Theorem Proving",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5d40b336dc22a100215274dc",
    "name": "[Code golf] negb is involutive",
    "approved": true,
    "tags": [
      "Puzzles",
      "Theorem Proving",
      "Fundamentals"
    ]
  },
  {
    "id": "5e8aa432792ce30025db012e",
    "name": "Easy Fermat",
    "approved": true,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Theorem Proving"
    ]
  },
  {
    "id": "5e8eb40a802e03001ba0733a",
    "name": "Every group of order 4 is commutative",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Theorem Proving"
    ]
  },
  {
    "id": "5e91c0f2b89d48002eee828b",
    "name": "Golf [Code Golf]",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5e9983456a4f5d001ad74a63",
    "name": "Mathematical Analysis - Limits of Sequences #3",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Sequences",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5e9e9f39c58d260016b53116",
    "name": "Mathematical Analysis - Continuous function about an open interval",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5ea1f341014f0c0001ec7c5e",
    "name": "Uniqueness of limits in a metric space",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5ea24f59c3928c002e0be59c",
    "name": "Mathematical Analysis - Limits of Sequences #5",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Sequences",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5eaa05ce96ed2500292a6d29",
    "name": "n(n+1)(4n-1)/6",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5eaad37e96b2c400205f9905",
    "name": "Two definitions of Fibonacci words",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Theorem Proving"
    ]
  },
  {
    "id": "5eb07c4c77763300145aed45",
    "name": "Uniform convergence mean we can swap limits!",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5eb0c7163c435d002f65666e",
    "name": "A sum of consecutive odd primes is extra composite",
    "approved": true,
    "tags": [
      "Puzzles",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5eb52b7336f17a00010a3d2a",
    "name": "Prove that the sum of a nilpotent element and a unit is a unit",
    "approved": true,
    "tags": [
      "Puzzles",
      "Theorem Proving",
      "Algebra",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5eb718d0e7c54e001a6e03b8",
    "name": "Resolving the Goldbach conjecture! (Part 1)",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5eb806b4e7c54e00246f70e1",
    "name": "Diagonal subgroup",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5f3a44ecc856050001972c36",
    "name": "Classical Axioms: Peirce's Law-Equivalent",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5fe919c062464e001856d70e",
    "name": "Windmill Cycle",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Geometry",
      "Algebra",
      "Data Types",
      "Integers"
    ]
  },
  {
    "id": "603e0bb4e7ce47000b378d10",
    "name": "Polyomino symmetry",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "6046c38bf2bc170013d0cf01",
    "name": "functions $$$ of $$ multiple $ arguments",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "604a1de6d117a400159239e5",
    "name": "Random sampling in constant time",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "605f7759c8a98c0023833718",
    "name": "My friend time",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "60ae5db1639df90055068d20",
    "name": "A+A=B+B so A=B? Prove it in Haskell!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Theorem Proving",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "6223289a43585d00239bab01",
    "name": "Simple Counter",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "56d56177e59d0e0a5a000677",
    "name": "A simple Angular filter to convert the file size into a readable format",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Angular"
    ]
  },
  {
    "id": "57a92d54e298a7c95000000d",
    "name": "T.T.T.23: Silly birds",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "58574232c1d5b4a2930001a3",
    "name": "Myjinxin Must Die! V0.0.1",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58de2be7b4b74ca1c8000205",
    "name": "Infinite Diceworks: MeanMaxing your rolls (Quantum Mechanically)",
    "approved": true,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Dynamic Programming",
      "Programming Paradigms",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science",
      "Statistics",
      "Data"
    ]
  },
  {
    "id": "58f45bca609cf6ad1e000067",
    "name": "Challenge Fun #22: Count The Lies",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "590a9b4a319e7b920f000123",
    "name": "Simple Fun #244: Kuromasu Puzzle",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5990b52710038aa522000010",
    "name": "IBAN Validator",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "59b4ce36afcda2d82d000001",
    "name": "Cookie Creator",
    "approved": true,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Higher-order Functions",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "59b98874460387687a0000af",
    "name": "Where did my Ether go?",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a2e96f1c5e2849eef00014a",
    "name": "Prime Ant - Performance Version",
    "approved": true,
    "tags": [
      "Algorithms",
      "Performance",
      "Optimization"
    ]
  },
  {
    "id": "5a5191208803859da10001a7",
    "name": "Vonhyou's Math Class!",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5a51bd11b7e2a95b2b000d99",
    "name": "Completed Mahjong Hands",
    "approved": true,
    "tags": [
      "Algorithms",
      "Games",
      "Validation",
      "Logic",
      "Parsing",
      "Strings",
      "Search"
    ]
  },
  {
    "id": "5a712e89373c2e3d8c0001b2",
    "name": "Simple Fun #391: Word Game",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5a73e2940136a16f56000029",
    "name": "One Line Task: The Special Downward Step",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games",
      "Optimization",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5a85876357c562c96300019b",
    "name": "[AI] Play Me : CodeWarsRunner II (Acceleration)",
    "approved": true,
    "tags": [
      "Puzzles",
      "Artificial Intelligence",
      "Machine Learning",
      "Algorithms",
      "Applied Computer Science",
      "Logic",
      "Games",
      "Dynamic Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5acb89bc9df8b942fb00006b",
    "name": "Behind Enemy Lines",
    "approved": true,
    "tags": [
      "Puzzles",
      "Iterators",
      "Control Flow",
      "Object-oriented Programming",
      "Basic Language Features",
      "Fundamentals",
      "Programming Paradigms",
      "Sorting",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "5bea3ef088c75433f3000146",
    "name": "Extended Weekends - Challenge Edition",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Puzzles",
      "Games",
      "Performance"
    ]
  },
  {
    "id": "5c9c5b04cc9b0830cd270cb6",
    "name": "A bit of fun with proofs on inequalities",
    "approved": true,
    "tags": [
      "Algorithms",
      "Theorem Proving"
    ]
  },
  {
    "id": "5cc3d8c2312133001dea9b3d",
    "name": "Program Verification #5: The sum of a geometric progression",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Theorem Proving"
    ]
  },
  {
    "id": "5cca3e90701f0d000d5922bf",
    "name": "Factorial divisibility a.k.a. binomial coefficient",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Theorem Proving",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5cdbe45dc50527001d55af5f",
    "name": "Simplifying conditional statements, again",
    "approved": true,
    "tags": [
      "Puzzles",
      "Theorem Proving"
    ]
  },
  {
    "id": "5cfd36be4c60c3001b8fb38a",
    "name": "Evaluating the type safety of a toy language",
    "approved": true,
    "tags": [
      "Puzzles",
      "Theorem Proving"
    ]
  },
  {
    "id": "5d172f6bc193ae00117c914c",
    "name": "Uneval your Agda expression",
    "approved": true,
    "tags": [
      "Bugs",
      "Reflection",
      "Metaprogramming",
      "Programming Paradigms",
      "Advanced Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "5d1eae23c193ae0025b5d50b",
    "name": "Program Verification #6: Fast Fibonacci numbers",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Theorem Proving"
    ]
  },
  {
    "id": "5d64d9c0a5aad20001b2d9f8",
    "name": "Squared triangular numbers",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5dcae2ed8a71fb000f7d2b74",
    "name": "Hanabi: Giving Information",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5e030784d7721600190aa84b",
    "name": "Empty Place in a Binary Tree",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Theorem Proving",
      "Data Structures"
    ]
  },
  {
    "id": "5e388662a9ca160021b7a7c1",
    "name": "Kotlin Live Data",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5e59626530e9d00028bbe569",
    "name": "Times Three, Plus Five",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Theorem Proving"
    ]
  },
  {
    "id": "5e889e710f55ed0015f17e84",
    "name": "Incidence Geometry #4",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Theorem Proving"
    ]
  },
  {
    "id": "5e88a4ee3820e90017210927",
    "name": "Incidence Geometry #7",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Theorem Proving"
    ]
  },
  {
    "id": "5e997f77ea84170016600045",
    "name": "Mathematical Analysis - Limits of Sequences #1",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Sequences",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5e9985252d3a920029a7b020",
    "name": "Mathematical Analysis - Limits of Sequences #4",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Sequences",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5eac8d8845655d003300f5b5",
    "name": "Prove that a ^ 4 - b ^ 4 = (a - b) * (a + b) * (a ^ 2 + b ^ 2), using nats",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5eb2c73ff08e28002471b09e",
    "name": "New induction scheme on integers",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5ebc0adb01409100192bdc71",
    "name": "The integers and the rationals are not isomorphic as groups",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Theorem Proving"
    ]
  },
  {
    "id": "5f30a416542ae3002a9c4e18",
    "name": "Reflecting Light V2",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "605616d80aef19001bbe1020",
    "name": "Join until impossible",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "609a6ab739660a0056fb4a29",
    "name": "Sum over a database",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "60c034c1b3a07c0006e72b24",
    "name": "Voile's question: ∀ (n : ℕ), 1 = 2 * n -> false",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Theorem Proving",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "610b9a6a5474ea0056879f56",
    "name": "Impossible Palindrome Regex",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "616da8bc35b459005bcd83e3",
    "name": "All Expressions Matter",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic",
      "Numbers",
      "Data Types",
      "Basic Language Features"
    ]
  },
  {
    "id": "619ac5c50731c300274d7685",
    "name": "Autodigigrams – Part 1",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "61af4f553a27fa0057fcbc2d",
    "name": "Make a Sponge",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56f25b17e40b7014170002bd",
    "name": "Thinking & Testing : Digital swimming pool",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57ba9fdb56449dcb2a0000d8",
    "name": "T.T.T.44: A game of Grab the \"red envelope\"（抢红包游戏）",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58805dc3c0c9b68239000098",
    "name": "Office Mission #5: Recurring task",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "592791d2f3a7584c260000fc",
    "name": "Simple Fun #309: Python Snake",
    "approved": true,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "59cda1eda25c8c4ffd000081",
    "name": "Spidey Swings Across Town",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5a1d308632b8b908cf00009a",
    "name": "Ball Roll On Quartic Polynomial",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5a83081c86ee7dcc9f001b69",
    "name": "Gigabyte Storage",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Streams",
      "IO",
      "Data"
    ]
  },
  {
    "id": "5af4855c68e6449fbf00015c",
    "name": "Buying the Farm : Irrigation",
    "approved": true,
    "tags": [
      "Algorithms",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Logic",
      "Dynamic Arrays",
      "Arrays",
      "Functional Programming",
      "Data Types",
      "Declarative Programming",
      "Programming Paradigms",
      "Vectors"
    ]
  },
  {
    "id": "5b61e9306d0db7d097000632",
    "name": "Combinations in a Set Using Boxes II",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Performance",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Machine Learning",
      "Applied Computer Science",
      "Arithmetic"
    ]
  },
  {
    "id": "5b84e44d6aa40d1ca5000124",
    "name": "[BF] Metanumerics",
    "approved": true,
    "tags": [
      "Puzzles",
      "Optimization",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5c88f7c01131b81217fdaa6e",
    "name": "Reach the size that lies across this new divide",
    "approved": true,
    "tags": [
      "Bugs"
    ]
  },
  {
    "id": "5c8bc557802fcd5a53b3c75c",
    "name": "Simply typed lambda calculus type checker",
    "approved": true,
    "tags": [
      "Algorithms",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Compiler Theory",
      "Logic"
    ]
  },
  {
    "id": "5cbb6a5a0840280001bb734c",
    "name": "Playing with opacity",
    "approved": true,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5cdae5caf00ea9000e98dc27",
    "name": "Simplifying conditional statements",
    "approved": true,
    "tags": [
      "Puzzles",
      "Theorem Proving"
    ]
  },
  {
    "id": "5ce34289f999ed0029a91e30",
    "name": "Nat in the mirror, Full version",
    "approved": true,
    "tags": [
      "Algorithms",
      "Theorem Proving"
    ]
  },
  {
    "id": "5ce5b742035e19001425ec7c",
    "name": "Remember all the guardedness and termination, and let it sized",
    "approved": true,
    "tags": [
      "Algorithms",
      "Theorem Proving"
    ]
  },
  {
    "id": "5d02f11c92613c000f41a3a7",
    "name": "SKI-ing in Chicken's style",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Theorem Proving"
    ]
  },
  {
    "id": "5d2428590fb98b0018b7dc47",
    "name": "[Code golf] f (f (f b)) = f b",
    "approved": true,
    "tags": [
      "Puzzles",
      "Theorem Proving",
      "Fundamentals"
    ]
  },
  {
    "id": "5d2bd8e414a6ef001a0421d2",
    "name": "Real Chebyshev",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Theorem Proving"
    ]
  },
  {
    "id": "5d4d9488a3d80c00158b54b8",
    "name": "Exploding a Finite Algebraic Type",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5ddcfa7aaff39b0027d2c754",
    "name": "Verified Element Index",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Theorem Proving"
    ]
  },
  {
    "id": "5e3c1eb312676f001eb41f1c",
    "name": "But WHY is LEM unprovable?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Logic",
      "Theorem Proving"
    ]
  },
  {
    "id": "5e5d1e4dd8e2eb002dd73649",
    "name": "The treasure in the Toroid [Code Golf]",
    "approved": true,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Games"
    ]
  },
  {
    "id": "5e90debc151f6b002b405672",
    "name": "Prove that this sequence contains only integers",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5ea281b8888eba001fd3d77c",
    "name": "Mathematical Analysis - Lipschitz functions",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5ea4167a676dc90033f0b5f3",
    "name": "0.999... = 1? Prove it!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Sequences",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5eec4c435d804f000136a287",
    "name": "Verified unique elements (Theorem prover showdown #2)",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Theorem Proving"
    ]
  },
  {
    "id": "5eee3937ffe966002d3c1f6c",
    "name": "If n is even, then (n/2-1)*2 = n-2",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Theorem Proving"
    ]
  },
  {
    "id": "5f22c23ba72c3b000162a352",
    "name": "Confusing syntax",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Theorem Proving"
    ]
  },
  {
    "id": "5fc2a48cdb878a00267fd68b",
    "name": "Lisp macro: dosteps",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5fd8f7badda986000ae365fc",
    "name": "A Breadth-First Traversable",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5ffcbacca79621000dbe7238",
    "name": "Draw the borders I - Simple ascii border",
    "approved": true,
    "tags": [
      "Algorithms",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Logic",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "6204c419b5e27f001b91a207",
    "name": "[BF]  Insert in Between... STOP!",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "57a2e0dbe298a7fa4800003c",
    "name": "Mr. Right & Mr. Wrong #2: Who is Mr.Wrong?",
    "approved": true,
    "tags": [
      "Algorithms",
      "Games"
    ]
  },
  {
    "id": "5afbb8cc3e9715157d00013d",
    "name": "Scientific Computing in Fortran #2 - Quaternionic Transcendental Functions",
    "approved": true,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5b3ccd29a3cb7bd76500014f",
    "name": "Count chains of ones in subsequences",
    "approved": true,
    "tags": [
      "Algorithms",
      "Logic",
      "Optimization",
      "Performance"
    ]
  },
  {
    "id": "5b851c1c74e7304c95000110",
    "name": "Number of 2-element intersecting families of set",
    "approved": true,
    "tags": [
      "Bugs",
      "Sets",
      "Arrays",
      "Data Types",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "5c8feaf38cf201351776dd99",
    "name": "Coinduction Proof Principle",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Theorem Proving",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5ca40e41bfaf24001980d07a",
    "name": "Cardinality of N and N x N",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Theorem Proving",
      "Set Theory",
      "Mathematical Logic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Sets"
    ]
  },
  {
    "id": "5cc15c2628b42000147b6ed8",
    "name": "Nat in the mirror: \"Not finite\" implies \"Infinite\"",
    "approved": true,
    "tags": [
      "Algorithms",
      "Theorem Proving",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5cdcdefdf00ea9001ca2e8fa",
    "name": "Finding the maximal program",
    "approved": true,
    "tags": [
      "Puzzles",
      "Theorem Proving"
    ]
  },
  {
    "id": "5cf268e10fd3cb0022190bb8",
    "name": "Sum of squares without multiplying",
    "approved": true,
    "tags": [
      "Puzzles",
      "Theorem Proving"
    ]
  },
  {
    "id": "5d03d84ca535d50001845e9c",
    "name": "A special set of matrices with convertible representations",
    "approved": true,
    "tags": [
      "Algorithms",
      "Theorem Proving",
      "Mathematics",
      "Logic",
      "Numbers",
      "Linear Algebra",
      "Algebra",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "5e8886a24475de0032695b9e",
    "name": "2D Cellular Automata [Code Golf]",
    "approved": true,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5eb801967cd701001e52d668",
    "name": "Divisibility by 19",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5eb80c83eccaf80032feae69",
    "name": "Runtime analysis: Euclidean algorithm",
    "approved": true,
    "tags": [
      "Algorithms",
      "Theorem Proving"
    ]
  },
  {
    "id": "5ebba64d6d3d0c003305db14",
    "name": "If a^b + 1 is prime, then a is even",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Theorem Proving"
    ]
  },
  {
    "id": "5fff4fe1ffa782001ea74a3b",
    "name": "Brackets paired and sized, Type-safely",
    "approved": true,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "604064f13daac00013a8ef2a",
    "name": "Pick Until Match",
    "approved": true,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "60b49f44080926003a20bbed",
    "name": "Verified list maximum",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Theorem Proving"
    ]
  },
  {
    "id": "60be913cbe45db0025ca0289",
    "name": "[BF] to (LC) Compiler: A beginner's guide",
    "approved": true,
    "tags": [
      "Algorithms",
      "Esoteric Languages",
      "Compiler Theory",
      "Logic",
      "Esoteric",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "6198292d4694c10007832b70",
    "name": "Cobol bugfix - convert to intrinsic function",
    "approved": true,
    "tags": [
      "Bugs",
      "Fundamentals"
    ]
  },
  {
    "id": "5de035e4b0285b002248ff7c",
    "name": "Program Verification #7: Longest Common Subsequence",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Theorem Proving"
    ]
  },
  {
    "id": "5e0e17220d5bc9002dc4e9c4",
    "name": "Sports League Table Ranking (with Head-to-head)",
    "approved": true,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic",
      "Arrays",
      "Data Types",
      "Sorting",
      "Performance"
    ]
  },
  {
    "id": "5f9db4e2622f500033513a6a",
    "name": "Compiler to Lambda Calculus",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "60b9d5d64e0ae80031bdd9b4",
    "name": "Verified binary tree inversion",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Theorem Proving"
    ]
  },
  {
    "id": "61860eed193401003c624be0",
    "name": "Another random fact about filtering",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Theorem Proving",
      "Logic"
    ]
  },
  {
    "id": "61861ec3193401003c64ec32",
    "name": "Yet another random fact about filtering",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Theorem Proving",
      "Logic"
    ]
  },
  {
    "id": "61866a07193401003c701360",
    "name": "Multiples of some m, you say?",
    "approved": true,
    "tags": [
      "Fundamentals",
      "Theorem Proving"
    ]
  },
  {
    "id": "5b6894617dae89ae9e000001",
    "name": "Aliens have landed",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "596a6c6722407127d4000035",
    "name": "Secret Code",
    "approved": false,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Methods",
      "Functions",
      "Object-oriented Programming",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Programming Paradigms",
      "Puzzles",
      "Games",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features"
    ]
  },
  {
    "id": "60edafd71dad1800563cf933",
    "name": "Closure Counter",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Closures",
      "Basic Language Features",
      "Variables",
      "Functions",
      "Control Flow"
    ]
  },
  {
    "id": "5d378318e04cd7001ad72a27",
    "name": "Money Match: Double or Nothing",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Arithmetic"
    ]
  },
  {
    "id": "5e296e18ca02cc00297859bc",
    "name": "Learning NASM 1# - Which number is the larger? (Beginner)",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5843baa8673ea2668c0001e4",
    "name": "Card Counting",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5da48818dcf4d6002129a751",
    "name": "Total items belonging to the categories on all tree levels",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "60fb2e158b940b00191e24fb",
    "name": "How many double digits?",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "614ac445f13ead000f91b4d0",
    "name": "Value of x",
    "approved": false,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "6161847f52747c0025d0349a",
    "name": "Create N-dimensional array",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Multi-Dimensional Arrays",
      "Arrays",
      "Data Types",
      "Recursion",
      "Algorithms",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "59a77cad485a4d2dc900007a",
    "name": "Confidence Intervals",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Statistics",
      "Data"
    ]
  },
  {
    "id": "5ea2baed9345eb001e8ce394",
    "name": "Pandas Series 103: Filter Rows From DataFrames That Don't Satisfy Condition",
    "approved": false,
    "tags": [
      "Fundamentals",
      "pandas",
      "Python Packages"
    ]
  },
  {
    "id": "6059d4f5f1f73100138a7d9c",
    "name": "Arithmetic Formatter",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Formatting",
      "Algorithms",
      "Logic",
      "Arrays"
    ]
  },
  {
    "id": "60a3a5fa042b6000454b4d85",
    "name": "Squared Spiral #2",
    "approved": false,
    "tags": [
      "Puzzles",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Sequences",
      "Arrays",
      "Data Types",
      "Games"
    ]
  },
  {
    "id": "62204bb40e88a5004a662265",
    "name": "How Many are Divisible by x",
    "approved": false,
    "tags": [
      "Algorithms",
      "Performance"
    ]
  },
  {
    "id": "5966fb8bccb55fb44b000e51",
    "name": "Condensentences",
    "approved": false,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "61d84f21d2d2f20043437ba6",
    "name": "Details of an N-Dimensional Hyperrectangle",
    "approved": false,
    "tags": [
      "Puzzles",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "56f6ece09400f5a9550012cf",
    "name": "7 Wonders Science Scorer",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "6012ac739be54b001cb1e30b",
    "name": "Missing numbers in leading digits of perfect square sequences",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "621e323a98afab001628d9a0",
    "name": "Gambling Game Joker",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "56bbf464e8936f038e0002e6",
    "name": "Check my Sum",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5992cdb6b1429882cc000044",
    "name": "Member Detection",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Metaprogramming",
      "Programming Paradigms",
      "Advanced Language Features"
    ]
  },
  {
    "id": "5bb2e1bfad558fc09d000063",
    "name": "Read a UPC/Barcode Part 2",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "62275b5bf6c169002379fa65",
    "name": "Divide and maximize",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games",
      "Lists",
      "Data Structures",
      "Arrays",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5958e6fa8381121d07000026",
    "name": "Count the number of kanas!",
    "approved": false,
    "tags": [
      "Puzzles",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "597203197d5ab99d0c000043",
    "name": "Accumulator Calculator",
    "approved": false,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Numbers"
    ]
  },
  {
    "id": "5cf92c3092613c00130b987e",
    "name": "K-Reverse a single linked list",
    "approved": false,
    "tags": [
      "Algorithms",
      "Linked Lists",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "5e498a51dc30990025221647",
    "name": "Real World Applications of Sqrton",
    "approved": false,
    "tags": [
      "Puzzles",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5e78df9c1f936d00321485ab",
    "name": "Techno Barman",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5e921a2550beae0025322e79",
    "name": "Rotate 1 / 8th ( Infinity version )",
    "approved": false,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5f1e3fba8f51e10010cf446a",
    "name": "Create a REST API!",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings"
    ]
  },
  {
    "id": "589816a7d07028ac5c000016",
    "name": "Simple Fun #100: New Year Celebrations",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "59a21e4487c603603f000689",
    "name": "When do you need it?",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "5a54e01d80eba8014c000344",
    "name": "Prime Ant - Crazy Version",
    "approved": false,
    "tags": [
      "Algorithms",
      "Performance",
      "Optimization",
      "Memoization",
      "Design Patterns",
      "Design Principles"
    ]
  },
  {
    "id": "5c880b6fc249640012f74cd5",
    "name": "NegaFibonacci representation",
    "approved": false,
    "tags": [
      "Algorithms",
      "Arithmetic",
      "Mathematics",
      "Logic",
      "Numbers",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5cd70a12a13e860001ba0f76",
    "name": "W-types",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5d629a6c65c7010022e3b226",
    "name": "On the clock",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types",
      "Numbers"
    ]
  },
  {
    "id": "5db017dd3affec001f3775b1",
    "name": "Computer problem series #7: Indentation mix",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "60a8fb2b87cfaf00495dc8cf",
    "name": "Line Crossing Area",
    "approved": false,
    "tags": [
      "Puzzles",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Games"
    ]
  },
  {
    "id": "620e839683ba7e003ea49757",
    "name": "[BF] Area or Perimeter",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5befc5d6767c376e28000068",
    "name": "Code-breaking by  Letter Frequency",
    "approved": false,
    "tags": [
      "Puzzles",
      "Ciphers",
      "Algorithms",
      "Cryptography",
      "Logic",
      "Security"
    ]
  },
  {
    "id": "5c2256acb26767ff56000047",
    "name": "Knapsack problem - the max value with the lists of elements",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5c484258de6714599e6f732f",
    "name": "✪ Merge your Gantt chart bars",
    "approved": false,
    "tags": [
      "Algorithms",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "615e3cec46a119000efd3b1f",
    "name": "\"Dual Numbers\" and \"Automatic\" (nth) Derivatives",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Algebra",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "616fcf0580f1da001b925606",
    "name": "Synthesize Boolean Functions From Examples",
    "approved": false,
    "tags": [
      "Algorithms",
      "Boolean Logic",
      "Logic"
    ]
  },
  {
    "id": "5597ca93d5b5b37db8000066",
    "name": "(m, k)-Perfect Number",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Types",
      "Optimization",
      "Performance"
    ]
  },
  {
    "id": "55d1ab819da1dd50890000d2",
    "name": "Named parameters",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Variables"
    ]
  },
  {
    "id": "58942e951a8808bf560000b4",
    "name": "Simple handlebars engine #1",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5bdbc57f4a8a17814c000177",
    "name": "String To Spiral",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Games",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5c45e3b0a4db1e0922ddcad0",
    "name": "Elevator algorithm",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5c6db85fdf403c2a9271ce93",
    "name": "One Line Task [Haskell]: Dotted Numbers to Chunks of 2",
    "approved": false,
    "tags": [
      "Puzzles",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "5e4bbbc872d95500118b607f",
    "name": "Deferred calculations.  Simple version.",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5ecef4a6640dbb0032bc176d",
    "name": "Happy Numbers. Another performance edition.",
    "approved": false,
    "tags": [
      "Algorithms",
      "Performance"
    ]
  },
  {
    "id": "5f44257d01e9c60010a3b58a",
    "name": "Using Java libraries #1: Food to JSON and back",
    "approved": false,
    "tags": [
      "Fundamentals",
      "JSON",
      "Formats"
    ]
  },
  {
    "id": "6033fe27779179000a28cb57",
    "name": "Max Consecutive Sum",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "60c3dea7f24d000006ed3b4d",
    "name": "How many elemental forms?",
    "approved": false,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Performance",
      "Optimization"
    ]
  },
  {
    "id": "60df8c24fe1db50031d04e02",
    "name": "Alphabet wars - trench assault",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "61cd0378ab22ae0033905112",
    "name": "Probation Officer - Restitution Arrearage Calculator",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "61de6142b31ff7000cc27e10",
    "name": "Water pouring problem",
    "approved": false,
    "tags": [
      "Puzzles",
      "Numbers",
      "Data Types",
      "Algorithms",
      "Logic",
      "Performance"
    ]
  },
  {
    "id": "55325a23be80e56453000082",
    "name": "LU Decomposition",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Linear Algebra",
      "Algebra",
      "Mathematics",
      "Numbers",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "56d3a1413323a852590000df",
    "name": "Parse all my XML please - Angular #1",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Angular"
    ]
  },
  {
    "id": "5757c0606d632a1f9f001233",
    "name": "Train Timetables",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "589cb1801265302ae00000ab",
    "name": "Barbell weight",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Performance"
    ]
  },
  {
    "id": "5989db666ea59c8077000001",
    "name": "How many workers are needed",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "59f678b3d4b3699c18000011",
    "name": "Maze Keeper",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Puzzles",
      "Games",
      "Performance"
    ]
  },
  {
    "id": "5a17c8a846d843a1fb000087",
    "name": "Simple Fun #383: Counting Sheep II",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Performance"
    ]
  },
  {
    "id": "5b6381bc51f0b3974800004c",
    "name": "\"I said: Count them\", not \"Produce them\"- The Instructor has spoken.",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Performance",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Machine Learning",
      "Applied Computer Science"
    ]
  },
  {
    "id": "5c6d5da8b3c7662bfbe33231",
    "name": "Java Hacking: Hijack a JVM",
    "approved": false,
    "tags": [
      "Puzzles",
      "Security",
      "Reflection",
      "Metaprogramming",
      "Programming Paradigms",
      "Advanced Language Features",
      "Fundamentals",
      "Games"
    ]
  },
  {
    "id": "5e94241850beae003435e5a2",
    "name": "Pullbacks and pushouts",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5ea6a8502186ab001427809e",
    "name": "Game of Life in Reverse",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "60980c3b0d32c200143353d3",
    "name": "Goal expansion: anonymous predicates",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "60e8e2f7fba3b40055351189",
    "name": "Macromanage your code",
    "approved": false,
    "tags": [
      "Refactoring",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Macros",
      "Advanced Language Features"
    ]
  },
  {
    "id": "6174318832e56300079b7d4b",
    "name": "Break Caesar cipher variation :  PNG image",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Cryptography",
      "Security"
    ]
  },
  {
    "id": "61bde70751c562004b14c363",
    "name": "Circle",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "573b2776f5ce3fa09d000162",
    "name": "Tank coding #1 : simple AIM systems",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "57f40792bd7b541a3000033a",
    "name": "Swedish Tipping",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "58217d0b70ca289d24000965",
    "name": "How many e's are written when one counts up to n?  1. Chinese",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Integers",
      "Optimization"
    ]
  },
  {
    "id": "5a8316124a6b347259000009",
    "name": "[BF] Unix Timestamp to Weekday",
    "approved": false,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic",
      "Mathematics",
      "Numbers",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "5a8e42eefd57773658000001",
    "name": "[BF] Unix Timestamp to UTC Time (HH:MM:SS)",
    "approved": false,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic",
      "Mathematics",
      "Numbers",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "5afb26f7de4c7f42bb000529",
    "name": "RSA decryption challenge",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Cryptography",
      "Security",
      "Numbers",
      "Data Types",
      "Decoding",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5b02fa2d86d07558c40000c5",
    "name": "Pythagorean Triples",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5cacf1bd1c76fe00256b8983",
    "name": "Polynomial from Points",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Linear Algebra",
      "Algebra"
    ]
  },
  {
    "id": "5d6ef1abd6dca5002e723923",
    "name": "Cut/Paste errors",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5e9e1eb0a2b32800019a648a",
    "name": "Generalised Pell x^2-37y^2=3",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5ecd09549f23f6003241f03b",
    "name": "Candy thieves",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5f0bddf9a5500c0010fca854",
    "name": "Assembling a Circular Genome (Shortest Common Superstring)",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5fc42472a5d3ea002b37c4be",
    "name": "Connect the dots - clockwise or counterclockwise? [code golf]",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5ffb932cc36c99001736802a",
    "name": "Moving all zeroes to the end",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "616beb11ccceda002c421dec",
    "name": "Finite automation 3: Convert NFA to DFA",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "61833783045228000954ef11",
    "name": "Sum Diagonals Matrix Queries",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "6190fb8be0997600082bc96c",
    "name": "Virtual Columns in pandas dataframe - Python",
    "approved": false,
    "tags": [
      "Algorithms",
      "pandas",
      "Python Packages",
      "numpy",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "61aa4873f51ce80053a045d3",
    "name": "Give your kata a name",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "61e0c66deb372a0007421570",
    "name": "Fix this",
    "approved": false,
    "tags": [
      "Refactoring",
      "Recursion",
      "Algorithms",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "62270ecbf6c169004879eca1",
    "name": "flask webserver or something #1 [GET]",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "6088985e8d94ef0034d0f712",
    "name": "Finding Derivatives",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Parsing",
      "Strings"
    ]
  },
  {
    "id": "554003323fd6af1c4200004e",
    "name": "This is odd",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5935ecef7705f9614500002d",
    "name": "The most asked question on CodeWars",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "547fb94931cce5f5de00024f",
    "name": "Tug-o'-War",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "54809175ab03a2cecb000ae4",
    "name": "Dice Rolling",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5532686f0408dfe458000117",
    "name": "Count the likes",
    "approved": false,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Arrays",
      "Conditional Statements",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "53855e4dc25c8adbc5000316",
    "name": "Email Validation",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Data Types",
      "Validation",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5926d7494b2b1843780001e6",
    "name": "Add numbers",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "53a8beaca9198e77b9000309",
    "name": "Squeaky Clean",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Utilities",
      "Formatting",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "58f475735e78fde4a2000011",
    "name": "02. Sum of array's elements",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "602db3215c22df000e8544f0",
    "name": "Two numbers are positive",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55521d28f790f6d92d0001ab",
    "name": "Car Depreciation",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Decimals",
      "Data Types",
      "Numbers"
    ]
  },
  {
    "id": "583872e3c233416868000162",
    "name": "How low do you go?",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "52fcc820f7214727bc0004b7",
    "name": "Check and Mate?",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types",
      "Data Structures",
      "Validation",
      "Search",
      "Games",
      "Rules",
      "Game Boards"
    ]
  },
  {
    "id": "559abfbe866963ca00000032",
    "name": "/*  Strip my Comments  */",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Logic"
    ]
  },
  {
    "id": "5f8828d56dbd530014c1e241",
    "name": "Return Even Whatever You've Been Given",
    "approved": false,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Basic Language Features",
      "Numbers",
      "Data Types",
      "Integers"
    ]
  },
  {
    "id": "55cb000321ca31039e00007d",
    "name": "Geometric sequence -  sum of all elements",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Sequences",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "56438bf8d8613e9082000027",
    "name": "Formatting decimal places #2",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Formatting",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "58af092f78a1a54f2000000f",
    "name": "A === B",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55467aaf72494e3bdc00007f",
    "name": "Rotated string",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5592fcbf71f21d976a000011",
    "name": "No Duplicates Here",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "58b7fafd0571aa5f44000038",
    "name": "replace a string with * except the first letter",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "572f85cdd59ee794c30010cf",
    "name": "Between a and b",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "585d7447f2d8dd59ad000197",
    "name": "Very Simple Inheritance for Beginners",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Inheritance",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Polymorphism"
    ]
  },
  {
    "id": "57cc91a458a06b1492000318",
    "name": "No Loops 1 - Small enough? - Shortest Code Version",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Booleans",
      "Data Types",
      "Numbers",
      "Arrays"
    ]
  },
  {
    "id": "5f4182cef0cc51002de51997",
    "name": "SQL Basics: Simple  BETWEEN and ORDER BY",
    "approved": false,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data",
      "Filtering",
      "Algorithms",
      "Logic",
      "Reporting"
    ]
  },
  {
    "id": "58dd95d4b4b74ca604000068",
    "name": "Last Digit  of an Array",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57c6b44f58da9ea6c20003da",
    "name": "Mean Means",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Algebra"
    ]
  },
  {
    "id": "56c5f95027be2cbe660017a7",
    "name": "It's Full of Stars",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Iterators",
      "Control Flow",
      "Object-oriented Programming",
      "Basic Language Features",
      "Programming Paradigms",
      "Loops",
      "ASCII",
      "Character Encodings",
      "Formats"
    ]
  },
  {
    "id": "584e4ef56cf17fc491000e0a",
    "name": "Cost of Shopping",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "54d512973a742a920d0001be",
    "name": "Temp Tracker: Max, Min, Mean and Mode",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Utilities"
    ]
  },
  {
    "id": "55f1b763dd670651620000ce",
    "name": "Counting Characters",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "58164d628906323d4300026e",
    "name": "SQL Data: Company Data - totals per day",
    "approved": false,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "565f1bd8f97d3e59c400014a",
    "name": "Old Greg's Binary Fingers",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "55760e83a48ee2d221000020",
    "name": "Reverse Polish Notation solver (Easy)",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5a5961f7145c46e6420000d7",
    "name": "Find Email Domain",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "6012094894dbf4001cbe1ab7",
    "name": "Index Merging",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "5a2328c4f8cc61e2a3000245",
    "name": "Dollar words",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5ec970f05864da001853b55b",
    "name": "Factorial Of Factorials",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "549ac6351a6114da9c0008ee",
    "name": "Implement a queue (FIFO)",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55429103e302cfd97500004e",
    "name": "Multiply Two Numbers Without Integers",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5d37899a3b34c6002df273ee",
    "name": "If you can't beat 'em, join 'em!",
    "approved": false,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Arrays",
      "Logic",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "53e91a041d70d3a63300025a",
    "name": "Generating Permutations",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5c707567c447bd46c6bafd68",
    "name": "Converting Currency  I",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Algebra",
      "Strings"
    ]
  },
  {
    "id": "5900750cb7c6172207000054",
    "name": "Frank's Sticky Calculator ",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Numbers",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Integers"
    ]
  },
  {
    "id": "5f8dd79aa962b600335f7577",
    "name": "Find longest sequence of an element in array",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "54eba41003883b738900078b",
    "name": "Make a LIFO stack to reverse a string",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Data Structures"
    ]
  },
  {
    "id": "57fa3240e8c829230700041f",
    "name": "Array.prototype.push",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Prototype-based Programming",
      "Programming Paradigms",
      "Prototypes"
    ]
  },
  {
    "id": "5272be02d9a03e114b000877",
    "name": "Spy Function",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Higher-order Functions",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5c17b8c93351f6abff000002",
    "name": "change words into numbers",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55fd4b0947e515507a00003e",
    "name": "Live Chess Ratings",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Arrays",
      "Objects"
    ]
  },
  {
    "id": "56c69bdd7c84beb576000072",
    "name": "Breadth First Tree Traversal",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Binary Search Trees",
      "Trees",
      "Binary"
    ]
  },
  {
    "id": "5ee8ba31b44cc30032cbce04",
    "name": "Grouping in string",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5756dccb5916f7c41d0012ab",
    "name": "upperCasePlace()",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "588b4ab855d1d9912e000027",
    "name": "Palindrome Sentences",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5c7ed27f59036f0010cca9c4",
    "name": "Jimmy's Journey",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5a15a5d557f0af795b00005f",
    "name": "Encrypting words",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5adf3cd70774db8e8c000007",
    "name": "Testing the Porges hypothesis",
    "approved": false,
    "tags": [
      "Puzzles",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5e4ee2c17770f20016d52f60",
    "name": "Sort by number",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5e7ffb4336bb0a0032afbf68",
    "name": "Perimeter Sum",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5364244c9c51d58a7700094e",
    "name": "Mnemo Passwords : pwgen",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5a846621b17101b63500019a",
    "name": "String Formatter",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5f09da8c28ca50001b12ea6e",
    "name": "Big Array Analyzing ",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "561cee035bf6ca9560000020",
    "name": "Palindrome-Generator",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "540afd11dc9f615d5e000435",
    "name": "Word statistics",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Statistics",
      "Algorithms",
      "Data",
      "Logic"
    ]
  },
  {
    "id": "5c866052ba8bd554757aa4b4",
    "name": "Phase Transitions",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55a304533d16fd5b0200006b",
    "name": "Find All The Unique Substrings",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "55fc0ac0181d7bb79900003f",
    "name": "Common error catcher",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "57cc66affa9fc57a6a0003d1",
    "name": "Merge sorted arrays without built-in functions",
    "approved": false,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Logic",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "5b5dc464d5e17a9b500003a9",
    "name": "Are  they  really equals ?",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "563995ce3c2f6f0626000035",
    "name": "Spanish class help",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "586f8695aa04282fd2000219",
    "name": "d To Capital",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "551e8c8e24b7a4eddd000441",
    "name": "Complex numbers",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5cca28520cbae0002ba9f870",
    "name": "Where am I again?",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5874d1c9d5abe8e534000235",
    "name": "Two's complement",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "58666e5811ceec2fa5000060",
    "name": "Object to Array",
    "approved": false,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Objects"
    ]
  },
  {
    "id": "55d1dbef35672835d3000007",
    "name": "Stop Donald Trump (2015)",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Numbers",
      "Integers"
    ]
  },
  {
    "id": "563ba37e1f518cf5d2000032",
    "name": "Sharpen up",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "567b3f226275b18f98000069",
    "name": "nPascal",
    "approved": false,
    "tags": [
      "Algorithms",
      "Recursion",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "5ccab42a078ad0000c57188f",
    "name": "Is this event within this time?",
    "approved": false,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Numbers",
      "Conditional Statements",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "5804f5c4de0f9afb4900014b",
    "name": "Salt Lake City Iron Yard -- Fun with functionally functional functionality",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Higher-order Functions",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "584d97ad52ee40bd020000e0",
    "name": "Soup is Bad!",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5d5a9f9d04ffd0c2f897d82e",
    "name": "Mod Sort",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Sorting",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5f9ac1719d4b2c0001d49ef9",
    "name": "Mastering The Python Standard Library #1 -  Find the longest common part at the start of a list of strings",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "53c30466702fde6e0800007e",
    "name": "ES5 Generators(ii)",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "579203bdc38ec2f536000017",
    "name": "Calculate age in days",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "55746d6585ef45e6770000bd",
    "name": "Tic-Tac-Toe Winner",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Logic",
      "Strings",
      "Data Types",
      "Control Flow",
      "Basic Language Features",
      "Puzzles",
      "Games",
      "Rules",
      "Loops"
    ]
  },
  {
    "id": "5d4ea07404caea00133d99fd",
    "name": "Computer problem series #3: Hacha software split",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Dictionary",
      "Data Structures",
      "Lists",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5f91cbef584e87000f5fefb1",
    "name": "Number for each number!",
    "approved": false,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "5fdb2ef8656423001c00e648",
    "name": "Go: Stone Scoring",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "59a067edd319069d1300084e",
    "name": "Check if Panagram",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "570a499120a35b02b800147b",
    "name": "90 Degrees Rotation",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "576ac45e726f4b9f7f000e4a",
    "name": "Word Frequency Table",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Hashes",
      "Data Structures"
    ]
  },
  {
    "id": "5804d54135763659cc000146",
    "name": "Time Conversion",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "59b3d08dd4f411aa2d000c10",
    "name": "month name story",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5e330a3e65ffb3001ab7bb1d",
    "name": "Accumulated skiing altitude",
    "approved": false,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Arithmetic",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "52ee50533cbf57cd1e000435",
    "name": "Serialize Function Arguments",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Arguments"
    ]
  },
  {
    "id": "5408bd53cd2e25da6f000c4d",
    "name": "Mess in the Bank",
    "approved": false,
    "tags": [
      "Algorithms",
      "Data Structures"
    ]
  },
  {
    "id": "55c5c5e18874b7bb5900000c",
    "name": "Additive colors",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55e21c098586158c29000148",
    "name": "Postfix Calculator",
    "approved": false,
    "tags": [
      "Algorithms",
      "Data Structures",
      "Logic",
      "Stacks",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "59bc5750460387a5120000ad",
    "name": "Smart Contracts Introduction: GiftCoin",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5369010005f8034437000d03",
    "name": "String Box",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types",
      "Formatting"
    ]
  },
  {
    "id": "54c29efd6fd290c8140017d7",
    "name": "The ugly truth about reduce",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "6072fc94f880d4003e9d5de5",
    "name": "Slots",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55ec1af5d44abea2b200007a",
    "name": "Forgetful Johny",
    "approved": false,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "567dbc875fc8f12b3900002c",
    "name": "Hangman",
    "approved": false,
    "tags": [
      "Algorithms",
      "Games",
      "Logic"
    ]
  },
  {
    "id": "583c9f438bbc04a63700021c",
    "name": "Abbreviate last names",
    "approved": false,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5a5394b780eba8f6c3000553",
    "name": "Ramda #1 - Books with errors",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Utilities",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Lists",
      "Data Structures",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5d9e29c672841f000e6ec2c6",
    "name": "Find The Poisoned Apple",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5e6ae5627ae8cb000fc63da7",
    "name": "Presentation order",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5fc7ece7f290f7000807c3ed",
    "name": "Get All Index Extension",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57c038a64f5f01348f000185",
    "name": " Smallest palindrome divisible by the input",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "580e684622e42d6a6c000148",
    "name": "SQL: Aggregating up the hierarchy (Recursion)",
    "approved": false,
    "tags": [
      "Algorithms",
      "SQL",
      "Databases",
      "Information Systems",
      "Data",
      "Recursion",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "5e6634e06353a40032b894e1",
    "name": "The Chakitra's language",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5366ca84133ed419c800060a",
    "name": "Count non-decreasing nodes in a binary tree",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Binary Search Trees",
      "Trees",
      "Binary",
      "Recursion",
      "Algorithms",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "5674a64c1af09b59a000003a",
    "name": "Degree or not Degree (Radian brooo)",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Utilities",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5e4bc40177606e0014df951f",
    "name": "Sophie Germain primes",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "560316ebd59297a89a000094",
    "name": "Time For Validation",
    "approved": false,
    "tags": [
      "Algorithms",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings",
      "Logic",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "56f3255275e3403fba00193d",
    "name": "Multiply without asterisk",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5eaeece19c7ebe001fd5ae73",
    "name": "Deduce interface id by EUI-64",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57165aa9347e65fa28001923",
    "name": "Using the Codewars API - Kata Rank",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "57da7ee21fac672c83000007",
    "name": "99 Problems, #8: Eliminate consecutive duplicates in a list",
    "approved": false,
    "tags": [
      "Algorithms",
      "Lists",
      "Data Structures",
      "Logic"
    ]
  },
  {
    "id": "583cd1a8977933957800026e",
    "name": "Natas Recipes",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5be6e743add18b2ec00009d3",
    "name": "Print Vector to Stream without using for-loops (simple version)",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Iterators",
      "Control Flow",
      "Object-oriented Programming",
      "Basic Language Features",
      "Fundamentals",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5c94b5bac29a2e37dfde5780",
    "name": "Yet Another Base Conversion Kata",
    "approved": false,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5d09a1b7dd762d000c4b1737",
    "name": "Range Extractor",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Lists",
      "Data Structures",
      "Fundamentals"
    ]
  },
  {
    "id": "609ccb2091b67a00076f6731",
    "name": "Simple Encryption and Decryption",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5549dea83e7e6cda420000c4",
    "name": "Cable Matching Problem",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5802b54542f1ced69900000f",
    "name": "Mysterious root number",
    "approved": false,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Games"
    ]
  },
  {
    "id": "585045d84457afc6640000ec",
    "name": "Heroes of the Arena, Part 1 - Simple Gladiators",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Games",
      "Classes",
      "Basic Language Features"
    ]
  },
  {
    "id": "5893df711a88085c3300009c",
    "name": "Find the Counterfeit",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Logic",
      "Lists",
      "Data Structures",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5a5dfa1b616ce577a30013e9",
    "name": "Is Crypt Solution?",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Fundamentals"
    ]
  },
  {
    "id": "5c5b14209fc86600013bb5f7",
    "name": "Encode the Message ",
    "approved": false,
    "tags": [
      "Algorithms",
      "Encoding",
      "Logic"
    ]
  },
  {
    "id": "53232260e4d01bc61f0006e1",
    "name": "Time Conversion: 12s and 24s",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Numbers",
      "Dates/Time",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "53c308e5702fde529b00013e",
    "name": "ES5 Generators(iii)",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "56a82b5a374345dd0a0000c7",
    "name": "Word Value Madness",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5708eac1d531cd94950016a2",
    "name": "Range Merging",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "572edd4cd59ee714b90004e6",
    "name": "Swap Row In Certain Columns of a Matrix",
    "approved": false,
    "tags": [
      "Puzzles",
      "Graphs",
      "Data Structures",
      "Linear Algebra",
      "Algebra",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "57bd5fc0615f0bda9a000221",
    "name": "Strip external rows and columns when only zeros",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "57d813899b4c9cdff2000054",
    "name": "Separate filename from extension",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "57d98f993c3f96fbc1000006",
    "name": "99 Problems, #3: k-th element in a list",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "580e6adffbf2be2e870005c0",
    "name": "Create Your Own \"Promise.all()\"",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Promises",
      "Design Patterns",
      "Design Principles",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5fd1a6a022aa28002644f8bd",
    "name": "Second Largest Element in a BST",
    "approved": false,
    "tags": [
      "Algorithms",
      "Data Structures",
      "Binary Search Trees",
      "Trees",
      "Binary",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "60a296cdb8c58300068b3ca4",
    "name": "GuideLuigiHome2D",
    "approved": false,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "54c26ee86fd2903443001394",
    "name": "Circumference Pathing",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "55bb6493a0bf37798800004a",
    "name": "Prime Number Generator :Intermediate (with inputs) version",
    "approved": false,
    "tags": [
      "Algorithms",
      "ES2015",
      "Babel"
    ]
  },
  {
    "id": "55c76576ac13e43af4000082",
    "name": "A Touch  of Class",
    "approved": false,
    "tags": [
      "Puzzles",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "5617f55637aea18282000150",
    "name": "Catch Mad Mars Bar Max!",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5719366a9906aff0ee000ecc",
    "name": "Internal Scrambler",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "579a4725cf1fa52d4700010e",
    "name": "EAN 13 barcode key controller",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "58e55e434fdbae09f500003e",
    "name": "Recursive Function",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Recursion",
      "Algorithms",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science",
      "Optimization"
    ]
  },
  {
    "id": "59196f6241b059e7fa0000ca",
    "name": "Convert integer to binary",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "592dd97fdc403b877e0000c7",
    "name": "BASH commands: Wildcards I",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "59fe01658ba91417880000a0",
    "name": "Replace the extension",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5afa9348db615d3cce00187e",
    "name": "One Line : Bit Calculator",
    "approved": false,
    "tags": [
      "Refactoring",
      "Fundamentals"
    ]
  },
  {
    "id": "55c8a81424d93e8f4000001f",
    "name": "Maximum Area in Histogram",
    "approved": false,
    "tags": [
      "Algorithms",
      "Stacks",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "560bdb1bf670e3c2720000c2",
    "name": "Replacement cipher",
    "approved": false,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Cryptography",
      "Security"
    ]
  },
  {
    "id": "56d6f8aec9ae3fce4b000c06",
    "name": "How old are you?",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types",
      "Strings",
      "Parsing",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5754c066ef6c253eff0000f4",
    "name": "toHonestlyFixed()",
    "approved": false,
    "tags": [
      "Refactoring"
    ]
  },
  {
    "id": "57c5bc6ec60eb2ce67000076",
    "name": "Give me data",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Logic",
      "Sets",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "58db95e7091c114391000040",
    "name": "Calculate Compound Annual Growth Rate of an investment",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "594620d5e80216ec6700003a",
    "name": "Lat/Long Parser",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Maps",
      "Data Structures",
      "Map/Reduce",
      "Algorithms",
      "Logic",
      "Lambdas",
      "Functional Programming",
      "Functions",
      "Declarative Programming",
      "Programming Paradigms",
      "Control Flow",
      "Basic Language Features",
      "Higher-order Functions"
    ]
  },
  {
    "id": "5a6aed85a56ad0fdbb00153b",
    "name": "Check disk space for audio",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Exception Handling",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5ee8b76fb44cc3000fcb83f4",
    "name": "Message from Alien (Easy Version)",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "55c3e6472605d3f415000060",
    "name": "Call Center Call Backs",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "565ed355e532022eb50000ad",
    "name": "How to pronounce French.",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "570796304f2c298736001927",
    "name": "Generate a random number (the hard way!)",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "571a7ce5b29485b46000043d",
    "name": "Operations on Sets: Symmetric Difference",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Sets",
      "Arrays",
      "Data Types",
      "Collections",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "585987ddd41fc68f18000118",
    "name": "2 + 1",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "59d579dfc12fa001b6000084",
    "name": "Longest element",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5a7c7d2d4a6b34d4730000e5",
    "name": "Run n times",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Higher-order Functions",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5aaf822725ebf9f2a600008e",
    "name": "Find all Fridays the thirteens",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "5c530d43bb6379336da58e82",
    "name": "Cryptography - Hide in plain sight",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Cryptography",
      "Security"
    ]
  },
  {
    "id": "5e5b5845fa2602001f084abc",
    "name": "Derpcode Interpreter",
    "approved": false,
    "tags": [
      "Algorithms",
      "Interpreters",
      "Logic"
    ]
  },
  {
    "id": "537e8cbc53efd983c10001be",
    "name": "Hash With Indifferent Access",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Hashes"
    ]
  },
  {
    "id": "5525210bde8b4b5ae2000789",
    "name": "Hannah vs. Snooze Button",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Dates/Time"
    ]
  },
  {
    "id": "5664df06950b03855200000d",
    "name": "Multiple Number Options",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56b82d9a1d36bb074c00052e",
    "name": "Leaves",
    "approved": false,
    "tags": [
      "Algorithms",
      "Trees",
      "Data Structures"
    ]
  },
  {
    "id": "56e6c86866d442aa72000e65",
    "name": "The answer to life the universe and everything.",
    "approved": false,
    "tags": [
      "Algorithms",
      "Recursion",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "56e70420988e8571740013e2",
    "name": "Minion's Dollar Box",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "56e9b3e4b131aff480001446",
    "name": "Best Student Grade",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5790abbe39f33a3955000290",
    "name": "Boolean Postfix",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Stacks",
      "Arrays",
      "Data Types",
      "Operators",
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "57e698dcd19c5b3f96000049",
    "name": "Back to KinderGarten 3 : What's this list ? (easy?)",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "580479f7db07c506ce0001c1",
    "name": "School Class Arrangement",
    "approved": false,
    "tags": [
      "Algorithms",
      "Sorting",
      "Logic",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "59e77da62a7acc7e6e000394",
    "name": "Sentence condenser",
    "approved": false,
    "tags": [
      "Bugs",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5ccd31693a8b4f002083b9de",
    "name": "Jack & Jill's cipher",
    "approved": false,
    "tags": [
      "Algorithms",
      "Cryptography",
      "Security",
      "Ciphers",
      "Logic",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5d9660c5e23e4d000e95c5c5",
    "name": "Radical Simplifier",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "60464b21ae56ec0010a04f5c",
    "name": "Restaurant bill",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "60b7a6ad235801000dbd77e0",
    "name": "Compass Navigation Bar - Basic",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5601de3f54fa4b5ed9000072",
    "name": "Player Methods - Dungeon crawler #2",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Games",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms",
      "ES2015",
      "Babel"
    ]
  },
  {
    "id": "56b3690bd930a05597000031",
    "name": "Vanity Plates",
    "approved": false,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "57067e00fb3008566300058a",
    "name": "List functions of an object  by length",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57d1e077264276b0a5000a28",
    "name": "Split  Into Arrays of Equal Size",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "58d286404ffe7781600000a5",
    "name": "Multiplying Binomials",
    "approved": false,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "591190fb6a57682bed00014d",
    "name": "Array transformations (rotate CW,CC,180,Flip Vertically, and Flip Horizonally)",
    "approved": false,
    "tags": [
      "Algorithms",
      "Image Processing",
      "Graphics",
      "Logic"
    ]
  },
  {
    "id": "5942bd8f1dbad76f3e000033",
    "name": "BASH commands: Wildcards II",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5ad065876a137ae539000001",
    "name": "Get up! The alarm clock is ringing.",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Dates/Time"
    ]
  },
  {
    "id": "5c401b6a7ae79861c61ffb07",
    "name": "Decipher the sentence",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "605e61435c2b250040deccf2",
    "name": "What time do the clock hands cross?",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "609fccd36b4ee50025068621",
    "name": "Spanish DNI #2",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5416f2504c2460a75000062d",
    "name": "Cycle detection: Brent's The Tortoise and The Hare",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Types",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "551c555a5c127e173e0005a8",
    "name": "Old school texting",
    "approved": false,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Decoding",
      "Logic"
    ]
  },
  {
    "id": "552c0b1e324dc0d4450000b3",
    "name": "Polynomial coefficients",
    "approved": false,
    "tags": [
      "Algorithms",
      "Arithmetic",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "55d3b85c4f75aac5b500003c",
    "name": "Logic Calculator - Puzzles #3",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games",
      "Logic",
      "Binary"
    ]
  },
  {
    "id": "55dcb65125295542240000bf",
    "name": "Filtering Cookie",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55f99f3749fa83a89d000031",
    "name": "Series",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5696e50654da6fcd30000044",
    "name": "Will Nessie Emerge?",
    "approved": false,
    "tags": [
      "Algorithms",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "569db847c25eeb8ce9000004",
    "name": "Generate Excel column names",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "56d62873e8f2d660130019cd",
    "name": "Javascript 'modulo' fix",
    "approved": false,
    "tags": [
      "Refactoring"
    ]
  },
  {
    "id": "56e3781c93c3d9fec600011d",
    "name": "Look and Say. How was it?",
    "approved": false,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic"
    ]
  },
  {
    "id": "577d6ab4311a24107f0001f5",
    "name": "Burrows-Wheeler transform I. Coding",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "580627d7c3c7798449000183",
    "name": "String: return formatted string",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "583a23d40cf946ec380002c2",
    "name": "[Minecraft Series #3] Lava is amazing!",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5879336c92074d45c500016c",
    "name": "Seat Allocation Double Dutch",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "59569fca8d5875762700000e",
    "name": "What is the date after some hours?",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "598239e48b88a9b48d000043",
    "name": "wordBird",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "59b065ba8173abcf92000135",
    "name": "Parsing JSON leaves",
    "approved": false,
    "tags": [
      "Fundamentals",
      "JSON",
      "Formats"
    ]
  },
  {
    "id": "5d5b93a08bee40001ee561e1",
    "name": "Weird object",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5f243837ff32c40015fd363c",
    "name": "counting in dot notation",
    "approved": false,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Integers",
      "Strings"
    ]
  },
  {
    "id": "5408d81ccd2e25dc0b000d28",
    "name": "Physics - Mechanics - Atwood Machines in Series",
    "approved": false,
    "tags": [
      "Algorithms",
      "Physics",
      "Logic",
      "Applied Computer Science",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "54605ca35bff82c575000d86",
    "name": "Clock Hands",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Geometry",
      "Algebra"
    ]
  },
  {
    "id": "54d6abf84a35017d30000b26",
    "name": "Gaussian primes",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Arithmetic",
      "Integers"
    ]
  },
  {
    "id": "54db82ea19fa47e2d6000713",
    "name": "Precise fractions pt. 2 - conversion",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5500b23dfed40f50e00001aa",
    "name": "Reverse DNS delegation (RFC4183)",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types",
      "Formatting",
      "Utilities"
    ]
  },
  {
    "id": "555b5726783b10beaf00004a",
    "name": "Imperfect Fibonacci Rabbits",
    "approved": false,
    "tags": [
      "Algorithms",
      "Iterators",
      "Control Flow",
      "Object-oriented Programming",
      "Basic Language Features",
      "Fundamentals",
      "Programming Paradigms"
    ]
  },
  {
    "id": "566b0ad71935ac8eb3000013",
    "name": "Compute Nullable Non-Terminals",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "56d528ede8f2d632f60001d6",
    "name": "Angular modules",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Angular"
    ]
  },
  {
    "id": "583f4a7e522561aa5f000200",
    "name": "Is there an arrow missing ?  (Relations - Part1: Reflexivity)",
    "approved": false,
    "tags": [
      "Puzzles",
      "Logic",
      "Games",
      "Set Theory",
      "Mathematical Logic",
      "Mathematics",
      "Algorithms",
      "Sets"
    ]
  },
  {
    "id": "589120e0be9501aac8000072",
    "name": "Square Root of 2",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "5ab146668d28f66f00000120",
    "name": "Mount Events in ReactJS",
    "approved": false,
    "tags": [
      "Fundamentals",
      "React",
      "Babel",
      "Frameworks",
      "JSX"
    ]
  },
  {
    "id": "5f3b561bc4a71f000f191ef7",
    "name": "Folding a 4D Cube (tesseract) ",
    "approved": false,
    "tags": [
      "Puzzles",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "601d5b914ff09e001ceb68b3",
    "name": "Robust hangman",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "60b3818568849a001958b96a",
    "name": "Intelligent Password Cracking",
    "approved": false,
    "tags": [
      "Algorithms",
      "Hashes",
      "Data Structures",
      "Security"
    ]
  },
  {
    "id": "613a455292219c000851d7de",
    "name": "\"Shenzhen I/O\" MC4000 Emulator  - basic",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "556a8adc4e0876d6a6000187",
    "name": "Array Imposter (a.k.a. String Undercover)",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Strings",
      "Prototypes"
    ]
  },
  {
    "id": "565a0112e03f2149f600011e",
    "name": "Get a Bouncer for Your Club",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Objects",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "565cdfecdc130e839c000089",
    "name": "Dave's FIFO Car Park",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "56c5ac0803a14d43fd0026e6",
    "name": "Secret Agent 101: The secret password",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Encryption",
      "Cryptography",
      "Security",
      "Decryption"
    ]
  },
  {
    "id": "56d1e13be0b15062d5001148",
    "name": "Game of Thrones : Wildlings are coming!",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5705418c58b58f269c00193a",
    "name": "Keep Info Up-To-Date",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mixins",
      "Modules",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "576906a0796c83fd49000dc1",
    "name": "Open the Lockers",
    "approved": false,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Games"
    ]
  },
  {
    "id": "57e540ce7fbcc930030001df",
    "name": "Function composition",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Higher-order Functions",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Sequences",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5811fd2ed960019fb2000a2d",
    "name": "Is It In?",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58347a39b189a511410001fd",
    "name": "Matching Words and Numbers",
    "approved": false,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "5a4bac77d39ec55f340000f2",
    "name": "Min-Width Detection",
    "approved": false,
    "tags": [
      "Algorithms",
      "Sorting",
      "Logic"
    ]
  },
  {
    "id": "5ab9b71e1aaf0600ea000074",
    "name": "The Alphabet Cipher",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Encryption",
      "Algorithms",
      "Cryptography",
      "Logic",
      "Security",
      "Encoding",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5addfe41e7dbc4aa5d0001a9",
    "name": "Social Golfer Problem Validator V2",
    "approved": false,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic"
    ]
  },
  {
    "id": "5b234007d74b5b90f20000a8",
    "name": "See You Next Happy Number",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5b746d2069826cfac3000051",
    "name": "Bầu cua tôm cá ",
    "approved": false,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5d73c2c2d09b160021563312",
    "name": "Decimal to Fraction",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Decimals",
      "Data Types"
    ]
  },
  {
    "id": "5272ad53b149fa71e400081f",
    "name": "Polynomial Class",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "54f6a06f5133754696000669",
    "name": "Abstract Model Magic",
    "approved": false,
    "tags": [
      "Refactoring",
      "Design Principles",
      "Abstraction",
      "Logic",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Higher-order Functions",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "5501fb6e34137eec30000095",
    "name": "Tower of Hanoi",
    "approved": false,
    "tags": [
      "Algorithms",
      "Puzzles",
      "Games",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "559a9225832cf49b0a0000c8",
    "name": "Find the longest repeating substring",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "55ea350ee15fa1305e0000a3",
    "name": "Find the longest streak",
    "approved": false,
    "tags": [
      "Algorithms",
      "Dates/Time",
      "Data Types",
      "Logic"
    ]
  },
  {
    "id": "55f7e235d32a0f1cb700002d",
    "name": "Extract Transform Load",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5606ca0eadb316fcbb000049",
    "name": "Long journey",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "56128c4708358a6b270000ae",
    "name": "Non-recursive Island Count",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "56be52e9c5dc03d97e001e22",
    "name": "Brute Forcing a Password",
    "approved": false,
    "tags": [
      "Puzzles",
      "Ciphers",
      "Algorithms",
      "Cryptography",
      "Logic",
      "Security",
      "Games"
    ]
  },
  {
    "id": "577176fc533ac2530100029d",
    "name": "Synchonizing records",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "57be0457517c6d96d900143b",
    "name": "Convert to ledger format",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57c1f7378fbb9ff1550000d6",
    "name": "The Broken Typewriter",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "57d28106c98a5250b0000018",
    "name": "Divide polynomial by polynomial",
    "approved": false,
    "tags": [
      "Algorithms",
      "Algebra",
      "Mathematics",
      "Logic",
      "Parsing",
      "Strings"
    ]
  },
  {
    "id": "57d5a60676da83d041000d71",
    "name": "Merged header cells trouble",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types",
      "Tables",
      "Data Structures"
    ]
  },
  {
    "id": "57ddbeacae6948cd21000039",
    "name": "Back to KinderGarten II : Where's Aïcha ?  (eeeasy)",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "5839dcc70cf946c93d000002",
    "name": "Foxes and rabbits",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "583c5e83f30065633b00021b",
    "name": "Create an operator",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Logic",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Operators"
    ]
  },
  {
    "id": "5858e76fd41fc69335000093",
    "name": "Birthday present",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5880c8e73d1647fdfc00004c",
    "name": "A Maybe Is An Option",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "592c4159ee0ed543690000d5",
    "name": "BASH commands: Wildcards III",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "59d27845a25c8c5c61000158",
    "name": "How readable?",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5a6c75c8fd5777274e000042",
    "name": "PythonSlice",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5c8f822533a2b7336aeee2de",
    "name": "Reactive programming: #1 Create function",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5ca8cb15d7f22c002a805b29",
    "name": "Is Room Reserved?",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "5e7cdf7dffe22a00178668b2",
    "name": "Is it a group?  (Group theory, Abstract algebra)",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5fe2ea999fd2140016feec63",
    "name": "🧬Cooking life on Proto Earth🌎",
    "approved": false,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Logic"
    ]
  },
  {
    "id": "5ff17f6cbb6e18002207de81",
    "name": "One line task: Find length of Chord of Circle",
    "approved": false,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Basic Language Features",
      "Fundamentals",
      "Games"
    ]
  },
  {
    "id": "6035b3c78e0085002231092b",
    "name": "Balance history",
    "approved": false,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "52bd52e3d0a2d49c8900006a",
    "name": "Maze generator",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "53bf0bf9e251dde94d0001a4",
    "name": "Sherlock in bookstore",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5441c2f15139c21eea00043d",
    "name": "Print a Matrix in Spiral Form",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "555527f76a2e91e5f6000082",
    "name": "Big Fibonacci Numbers",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5562036415c028d29f00001a",
    "name": "When's my birthday ?",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "557ac2ba9b55bbfb76000051",
    "name": "Polygon Orientation",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "573f2116d344e09f03000d2d",
    "name": "Timmy goes to college",
    "approved": false,
    "tags": [
      "Algorithms",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings",
      "Logic",
      "Data Types"
    ]
  },
  {
    "id": "5781287679cdb3366700007b",
    "name": "Whos the TIC TAC TOE champion?",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57f802427b992e7f030001fb",
    "name": "Rotate Square Matrix Clockwise, In Place.",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "582d350606e37fa8c70000b8",
    "name": "Permute Capitalizations!",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "582e2448fe38019857000038",
    "name": "Power Trader [PART 1]: Product hours",
    "approved": false,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Logic",
      "Parsing",
      "Strings"
    ]
  },
  {
    "id": "584e8adf660d8c46920000a0",
    "name": "Puzzle rotation",
    "approved": false,
    "tags": [
      "Algorithms",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "592456e9fb1f93c6ae00000e",
    "name": "Counting Letters of Consecutive Numbers",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "59a07c8810963911ca000090",
    "name": "Musical Scales and Modes",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "59ad07ca6440bb0d22000c5f",
    "name": "Track the Ball",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5a7a2a3bb17101dce8000115",
    "name": "Columnar Transposition Cipher Collisions",
    "approved": false,
    "tags": [
      "Puzzles",
      "Ciphers",
      "Algorithms",
      "Cryptography",
      "Logic",
      "Security",
      "Strings",
      "Data Types",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "5efb66f04b02f2002633cbe2",
    "name": "Fibonacci Lambda Calculus",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Lambdas",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5f4b773698c148002455a49d",
    "name": "Ring container",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "60f8bfd29a2459000ef413af",
    "name": "Concat arguments",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "615c2ddb46a1190026c4e119",
    "name": "Password Cracker",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5280f37d2687a6a9f2000b64",
    "name": "Command-line Option Parser",
    "approved": false,
    "tags": [
      "Algorithms",
      "Parsing",
      "Logic",
      "Strings",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Fundamentals",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5334ce80ef9ff6b7ee000001",
    "name": "Next Highest Anagram Finder",
    "approved": false,
    "tags": [
      "Puzzles",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "53495826babe0e851a000dbd",
    "name": "Marching armies",
    "approved": false,
    "tags": [
      "Algorithms",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Logic",
      "Numbers",
      "Dates/Time",
      "Data Types",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Games"
    ]
  },
  {
    "id": "539f08fbd9b5c2652a00076b",
    "name": "Manage event strings",
    "approved": false,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "53ecb7961f32268b840008db",
    "name": "simpleLog",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "54a2daeb1817ec97d300121c",
    "name": "Construct Javascript-method syntax in Ruby",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Metaprogramming",
      "Programming Paradigms",
      "Advanced Language Features"
    ]
  },
  {
    "id": "55ef45a34e431f94dc000061",
    "name": "Imperfect Network #3 (missing messages)",
    "approved": false,
    "tags": [
      "Algorithms",
      "Networks",
      "Logic"
    ]
  },
  {
    "id": "55f5607bb02278b368000038",
    "name": "Calculate average mileage",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "565228ffd7c4003b7100003c",
    "name": "Punnett Squares",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Objects",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "56601d4ea23da0f94c00006f",
    "name": "Give me nicely formatted dates",
    "approved": false,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Logic",
      "Dates/Time"
    ]
  },
  {
    "id": "5660df1eb5f86a73bc00000c",
    "name": "A puzzle from a world of 5 bits",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "566b4504595b1b2317000012",
    "name": "Chains With Sums and Products",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Functions"
    ]
  },
  {
    "id": "570e79d2de4dc800c900190a",
    "name": "Sum of certain products",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "58803daf55aa1ec149000006",
    "name": "OCR Numbers",
    "approved": false,
    "tags": [
      "Puzzles",
      "Algorithms",
      "Logic",
      "Games"
    ]
  },
  {
    "id": "5883784c512b0330ff0003c7",
    "name": "Transform view",
    "approved": false,
    "tags": [
      "Algorithms",
      "Ranges",
      "Basic Language Features",
      "Fundamentals",
      "Iterators",
      "Control Flow",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "58847cc6a3dd74693e00010f",
    "name": "Filter View",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Ranges",
      "Basic Language Features",
      "Fundamentals",
      "Iterators",
      "Control Flow",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "58d6f2270859584ab1000114",
    "name": "Major Chords",
    "approved": false,
    "tags": [
      "Puzzles",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings",
      "Games"
    ]
  },
  {
    "id": "59418eb205b360495100018b",
    "name": "Calculate the Area under the polynomial curve!",
    "approved": false,
    "tags": [
      "Algorithms",
      "Linear Algebra",
      "Algebra",
      "Mathematics",
      "Logic",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "595ac4c0449c6dd64b000035",
    "name": "Fluid summator",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Basic Language Features"
    ]
  },
  {
    "id": "597a095b43cd2c367c00006b",
    "name": "Synchronous Promise",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Promises",
      "Design Patterns",
      "Design Principles"
    ]
  },
  {
    "id": "59cd0dc423daccc2a7000171",
    "name": "Dunkirk",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "59e7c7e5fc3c49d93f0000d3",
    "name": "Generator Functions",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Iterators",
      "Control Flow",
      "Object-oriented Programming",
      "Basic Language Features",
      "Programming Paradigms",
      "Functional Programming",
      "Declarative Programming"
    ]
  },
  {
    "id": "5a1ed8aec9fc0ef78f000099",
    "name": "What hour can we show?",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5a45edc4d39ec5632000003f",
    "name": "Insane Permutation Promenade (from AoC 2017 Day 16)",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Puzzles",
      "Games",
      "Performance",
      "Optimization"
    ]
  },
  {
    "id": "5ad554f7673f2f0f940000be",
    "name": "Compress & Decompress Given String by Repeating Characters",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5b75acd21db5ce5ed6000017",
    "name": "Transpose Cipher",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5c2e2c476882c83876813a2c",
    "name": "RegEx Like a Boss #5 CodeGolf: Decimal Number Divisible By 3 ",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5c689d80ca80ec6e2919073a",
    "name": "Random Object",
    "approved": false,
    "tags": [
      "Puzzles",
      "Fundamentals",
      "Games",
      "Advanced Language Features"
    ]
  },
  {
    "id": "5eb94b5cb604c70037e491a5",
    "name": "Cyclic Notation Permutations",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Permutations",
      "Algorithms",
      "Logic",
      "Algebra",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "5f4f9e1aac9fa3002e6e09f3",
    "name": "Olympiad podium",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "528f5782d784361512000755",
    "name": "Find the deadnauts",
    "approved": false,
    "tags": [
      "Algorithms",
      "Physics",
      "Logic"
    ]
  },
  {
    "id": "52a4545199b32d4074000176",
    "name": "\"string\".forEachMatch(regex, callback, [context]);",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "52fd3870f721477263000ad1",
    "name": "Burrows-Wheeler Transform",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "53010107c7c0f45c4c000803",
    "name": "Conservative Property Proxy",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Proxy",
      "Design Patterns",
      "Design Principles",
      "Properties",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "53319be3f64dbaf21800001f",
    "name": "Point in a polygon",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "53c5719a6a74ce4e7d00058b",
    "name": "RangeSet",
    "approved": false,
    "tags": [
      "Algorithms",
      "Ranges",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "53c8ddd050fe7092040000b0",
    "name": "Haskell List Comprehension (iv)",
    "approved": false,
    "tags": [
      "Refactoring",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "53caa4c29bbf4caf5b00017b",
    "name": "Haskell List Comprehension (v)",
    "approved": false,
    "tags": [
      "Refactoring",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "53d9150ae584ddb41500022d",
    "name": "Countdown",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "53db36541f1a7d6d5900025c",
    "name": "Longest Palindrome for your dome?",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Parsing",
      "Strings"
    ]
  },
  {
    "id": "5424930a48306fd796002033",
    "name": "Wait on Any Thread",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "544e866f2d7b76b28000071e",
    "name": "Loop Through Conway's Game of Life",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "54613bb89726f637490009c4",
    "name": "Date Sanity Methods",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types",
      "Prototypes"
    ]
  },
  {
    "id": "546e319b8e3b6b56500001f6",
    "name": "BBQ Pitmaster",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "55a9a6ffd7f21d7d000000e5",
    "name": "Guess the Text",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "55b2a1a0a8bbaf0cf500002a",
    "name": "Server: Connection Pool",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Objects",
      "Data Types"
    ]
  },
  {
    "id": "55e4b65287d24e3395000043",
    "name": "Lost In Time",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Dates/Time",
      "Data Types",
      "Search"
    ]
  },
  {
    "id": "5643707be5dd746700000087",
    "name": "Binary Search Tree Part 1",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Structures",
      "Graphs",
      "Trees"
    ]
  },
  {
    "id": "566025b6ad6fcf8e2e00007a",
    "name": "Through the Maze",
    "approved": false,
    "tags": [
      "Puzzles",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Loops",
      "Strings",
      "Objects"
    ]
  },
  {
    "id": "56fba2a707cff40aa800078a",
    "name": "List of pairs instead of dictionary",
    "approved": false,
    "tags": [
      "Bugs",
      "Dictionary",
      "Data Structures"
    ]
  },
  {
    "id": "570f3e06c983eb5d390008b8",
    "name": "Some Tips For Quality Control I",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Algorithms",
      "Logic",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Declarative Programming",
      "Programming Paradigms",
      "Strings",
      "Statistics",
      "Data"
    ]
  },
  {
    "id": "576991da887bd8fb70000450",
    "name": "Decreasing Numbers with N Digits",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Arithmetic"
    ]
  },
  {
    "id": "576a616359b1163437001c3b",
    "name": "Rubik's Cube",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "577474ed509c652ea1000016",
    "name": "Miller-Rabin Primality Test",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "577d6ad9311a249ff2000151",
    "name": "Burrows-Wheeler transform II. Decoding",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5793268439f33a1b9e0000b0",
    "name": "Parse the Cricket Score",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57a219e5e298a731b20008ef",
    "name": "Boolean Reducer",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Fundamentals"
    ]
  },
  {
    "id": "57bb67d88f58131569000336",
    "name": "Interesting substring",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "57d287d1900f6e219d00000c",
    "name": "Counting Sort",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "57e2d5f473aa6a476b0000fe",
    "name": "Pirates!! Time to Plunder -  Don't spoil the  Spoils",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "57fa573e8b07607c400002cd",
    "name": "Reversible encryption using XOR.",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Cryptography",
      "Security",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "58408d92a20cfcb2ab000681",
    "name": "Democracy Representation",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5841bfd463b25e48ee000037",
    "name": "Implement Debounce",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Advanced Language Features",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "585d1ff2065129abdb000121",
    "name": "Standard deviation and the law of large numbers",
    "approved": false,
    "tags": [
      "Algorithms",
      "Statistics",
      "Data",
      "Logic"
    ]
  },
  {
    "id": "585d6eebdb20cf33cb000198",
    "name": "Advanced Calculator!",
    "approved": false,
    "tags": [
      "Algorithms",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Mathematics",
      "Logic",
      "Numbers",
      "Parsing",
      "Strings",
      "Data Types",
      "Expressions"
    ]
  },
  {
    "id": "588b558255d1d97f780000a8",
    "name": "Dividing Fractions",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Algebra",
      "Mathematics"
    ]
  },
  {
    "id": "58a26a8e0fd6ed635e000032",
    "name": "Tcegilmopyya",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58d460e4091c1126a000004c",
    "name": "SQL Bad Data needs to be reported!",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Case/Switch Statements",
      "Conditional Statements",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "591c4de9996a3608eb0000ed",
    "name": "Extract Fixed-Width Records",
    "approved": false,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "59255740ca72049e760000cd",
    "name": "Shorthand large and small numbers",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Parsing",
      "Strings"
    ]
  },
  {
    "id": "594485b5aa3b73f520000022",
    "name": "BASH commands: head",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "59ea2372772999e9fa001b25",
    "name": "One-Semicolon Stream Zipping",
    "approved": false,
    "tags": [
      "Puzzles",
      "Algorithms",
      "Logic",
      "Streams",
      "IO"
    ]
  },
  {
    "id": "59ecedd67905df208600010e",
    "name": "Roman numerals converter and validator",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a0e6c62ba2a143015000001",
    "name": "Toying with Core.logic",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Logic Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5a57b668b3bfa8429d000018",
    "name": "Is it a Tree?",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "5a63ca6380eba8bb5600005a",
    "name": "Store Smart Contract!",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a6dad20fd5777ee50000099",
    "name": "The Answer to the Ultimate Question of Life, The Universe, and Everything",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5a7e4e3a5084d7a75d0000b4",
    "name": "Canvas Fun #4: Warning! Traffic Light Ahead!",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5b19c04e425864975200007a",
    "name": "Jigsaw Puzzle",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5bce32bf058d7d5d3000033d",
    "name": "Lowest  Squarefree Multiple of an Integer",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Performance",
      "Numbers",
      "Data Types",
      "Arithmetic",
      "Mathematics",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "5c62ff068303584519540a7f",
    "name": "Escape from the bear!",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "5c76d04fdee0db3043b3c8f8",
    "name": "Count Empty Triangles in the Past",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "5c76ff740ff3cc0001fd21ea",
    "name": "Count Empty Triangles in the Present",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Performance",
      "Optimization"
    ]
  },
  {
    "id": "5ca6db9990abaa0001bc70c1",
    "name": "Largest Power that Divides a Large Factorial",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5df027bbdf8a1200313cd08b",
    "name": "Adding brackets to math expression",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "6061459efce2d40008aa451b",
    "name": "Probability #2 : The \"not\" Infinite Spinning Wheel",
    "approved": false,
    "tags": [
      "Puzzles",
      "Strings",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Games"
    ]
  },
  {
    "id": "61939bc0d066690026006ca5",
    "name": "Newton's Method",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "53640a429c51d5d89f000770",
    "name": "Roles and Permissions",
    "approved": false,
    "tags": [
      "Algorithms",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "53b2fd63bcfb1b82b900126e",
    "name": "Sorter(getter)(order)",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "54207abcde62089002000a7d",
    "name": "Plain Condorcet Voting Method",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "54c15f2a3f0696311a000c56",
    "name": "Sparkle Interpreter",
    "approved": false,
    "tags": [
      "Algorithms",
      "Parsing",
      "Logic",
      "Strings",
      "Interpreters",
      "Data Types",
      "Operators",
      "Fundamentals",
      "Expressions",
      "Basic Language Features",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "563964c78edaeba02f000025",
    "name": "Permutations - Generators #4",
    "approved": false,
    "tags": [
      "Fundamentals",
      "ES2015",
      "Babel"
    ]
  },
  {
    "id": "568caf77e0dfcdd057000055",
    "name": "Array Graphics - Lines",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "569e93e54cc95c0c82000041",
    "name": "Pub/Sub",
    "approved": false,
    "tags": [
      "Algorithms",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Closures",
      "PubSub",
      "Design Patterns",
      "Design Principles"
    ]
  },
  {
    "id": "56ba836b022c16207100015f",
    "name": "Gateway payments redirect - Refactoring the code",
    "approved": false,
    "tags": [
      "Refactoring",
      "Performance"
    ]
  },
  {
    "id": "56c118ac87a9162ac70015a5",
    "name": "Lazy sequence",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Lists",
      "Data Structures",
      "Utilities"
    ]
  },
  {
    "id": "56cac075c8cfcc76b5000460",
    "name": "World Traveler",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "57180ffc1c27346abd0011ee",
    "name": "Maximum and Minimum Numbers as a Result of all  Possible Concatenations and Fulfilling Certain Constraints",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Algorithms",
      "Logic",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Optimization",
      "Declarative Programming",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "5737912c49fc581de90010d5",
    "name": "The Name Game!",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "573b81d411e21c50c400032e",
    "name": "Clustering Arrays",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "578a55897c77f554d00018b9",
    "name": "Party with aliens",
    "approved": false,
    "tags": [
      "Algorithms",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57c3bb8dd6cf0f796c00003c",
    "name": "Ranking Appointments",
    "approved": false,
    "tags": [
      "Algorithms",
      "Memoization",
      "Design Patterns",
      "Design Principles",
      "Sorting",
      "Logic"
    ]
  },
  {
    "id": "57d3826b5dc38ef7ec000288",
    "name": "Network Programming: Fun with Telnet ",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Networks",
      "Algorithms",
      "Logic",
      "Streams",
      "IO",
      "Advanced Language Features",
      "Basic Language Features",
      "Parsing",
      "Strings",
      "Control Flow",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Functional Programming",
      "Declarative Programming",
      "Design Principles"
    ]
  },
  {
    "id": "57dfb787eb0537061a0003da",
    "name": "Watchmaker problems - watch hands issue",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "57f451d3bd7b5434b7000a27",
    "name": "Are these nodes connected?",
    "approved": false,
    "tags": [
      "Algorithms",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "582ac1989759a2e9b50000d8",
    "name": "Count  Primes",
    "approved": false,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5885ccccbf8ed38af900059d",
    "name": "File system mock",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58efb11b5b77b37ced000001",
    "name": "Scrambled Numbers Sorting",
    "approved": false,
    "tags": [
      "Puzzles",
      "Strings",
      "Data Types",
      "Numbers",
      "Arrays",
      "Algorithms",
      "Logic",
      "Parsing"
    ]
  },
  {
    "id": "58fdc09e627d2f7be3000165",
    "name": "Jungerstein's Math Training Room: 4. O Pascal tree, how green are your leaves? ",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "594152250ab337e395000141",
    "name": "Summarise Fuel Fill-Ups",
    "approved": false,
    "tags": [
      "Algorithms",
      "Lists",
      "Data Structures",
      "Aggregations",
      "Logic",
      "Data Types"
    ]
  },
  {
    "id": "5978a5915d219d560d00008e",
    "name": "Countdown",
    "approved": false,
    "tags": [
      "Algorithms",
      "Arithmetic",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Structures"
    ]
  },
  {
    "id": "59791ab8cc0221f75a000161",
    "name": "Speaking Numbers",
    "approved": false,
    "tags": [
      "Puzzles",
      "Strings",
      "Data Types",
      "Numbers"
    ]
  },
  {
    "id": "5b61aa2b51f0b33ae0000145",
    "name": "Three Body Problem",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5b774531dfc89f49eb000004",
    "name": "Next Higher Value #3",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Performance",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Data Structures",
      "Arrays",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science",
      "Memoization",
      "Design Patterns",
      "Design Principles",
      "Dynamic Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5ba8c1dbe216b607890000a9",
    "name": "Extended Credit Card Validation",
    "approved": false,
    "tags": [
      "Algorithms",
      "Validation",
      "Logic",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings"
    ]
  },
  {
    "id": "5c7fc3c51edc8d5e13bf702b",
    "name": "Sorting with alternation",
    "approved": false,
    "tags": [
      "Algorithms",
      "Data Structures"
    ]
  },
  {
    "id": "5e4558914a29200032b63aaf",
    "name": "The Poisoned Bottle",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5f1360c4bc96870019803ae2",
    "name": "Pisano Period",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "60bcabf6b3a07c00195f774c",
    "name": "Expand Absolute Values",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "612ef3bb1ec3b10056034384",
    "name": "Free Monads",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Monads",
      "Data Structures",
      "Functional Programming",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "61630c548521b7003044e1d0",
    "name": "Pareto optimum ",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "52bcdbd3b290b15cbc00063c",
    "name": "Guess the Passtune",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "52fecae6aff455e43e0000da",
    "name": "Layout ordered sections in columns",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5331d7d14b079bf015000092",
    "name": "JSON.stringify",
    "approved": false,
    "tags": [
      "Fundamentals",
      "JSON",
      "Formats"
    ]
  },
  {
    "id": "54cb08e89b30e87c35000b5d",
    "name": "TheWereSquirrel",
    "approved": false,
    "tags": [
      "Algorithms",
      "Data Structures",
      "Mathematics",
      "Logic",
      "Numbers",
      "Objects",
      "Data Types",
      "Maps"
    ]
  },
  {
    "id": "54e5c9d892449ce3a2000920",
    "name": "\"Classes\" in Javascript",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Prototypes",
      "Inheritance",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Polymorphism"
    ]
  },
  {
    "id": "550c4cb5742fda764c00121b",
    "name": "Line, Normalization",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Dynamic Arrays",
      "Arrays",
      "Functional Programming",
      "Data Types",
      "Declarative Programming",
      "Programming Paradigms",
      "Vectors",
      "Normalization",
      "Algorithms",
      "Data",
      "Logic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "551534d39cd40beed70011f3",
    "name": "Bullseye!",
    "approved": false,
    "tags": [
      "Algorithms",
      "Games",
      "Objects",
      "Data Types"
    ]
  },
  {
    "id": "5523d69ec8f5025540000b47",
    "name": "The Enigma Machine - Part 2: A Rotor",
    "approved": false,
    "tags": [
      "Algorithms",
      "Fundamentals"
    ]
  },
  {
    "id": "556c138a49403cb0b30000c8",
    "name": "The cross-stitch Kata",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5571ce77994ef90b17000167",
    "name": "English words to numbers",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Numbers"
    ]
  },
  {
    "id": "55dbee1f246e0984c2000042",
    "name": "Enhenced Fixnum.times method",
    "approved": false,
    "tags": [
      "Refactoring",
      "Blocks",
      "Object-oriented Programming",
      "Functions",
      "Programming Paradigms",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Classes"
    ]
  },
  {
    "id": "55ecbda2c471f9105d000015",
    "name": "Maze",
    "approved": false,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "560d0959d28917a2ea00001a",
    "name": "Newton's Method: Finding roots (rational)",
    "approved": false,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Logic",
      "Mathematics"
    ]
  },
  {
    "id": "563287ba5ff63e03f80000bc",
    "name": "Integer to string deciphering",
    "approved": false,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic",
      "Ciphers",
      "Cryptography",
      "Security"
    ]
  },
  {
    "id": "564c8f6e67e8b6323c0000a3",
    "name": "Histograms For All The World",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Statistics",
      "Data",
      "Control Flow",
      "Basic Language Features",
      "Declarative Programming",
      "Programming Paradigms",
      "Data Structures"
    ]
  },
  {
    "id": "568e2693e63cf8deb400003d",
    "name": "Easter Eggs",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Sorting"
    ]
  },
  {
    "id": "56b22f1d24a6e0895200001b",
    "name": "Numbers to English words",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "572ffcd52713bf4cb4000d13",
    "name": "Spiral corner",
    "approved": false,
    "tags": [
      "Puzzles",
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "57c6f776484cf97ecf00001b",
    "name": "Dude E Free",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57cc2edf58a06bc4ac0000b9",
    "name": "There can be only one: Numeric Extension",
    "approved": false,
    "tags": [
      "Refactoring",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "580fd57fcefeff16d0000057",
    "name": "Tall Tales",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "582a287c2c5d0a7618000475",
    "name": "Modulo operations of big Numbers",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Integers",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "583a6b0b171f3a3c3f0003e3",
    "name": "[Minecraft Series #4] Lava is amazing, however...",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5901aee0af945e3a35000068",
    "name": "#3 Matrices: Rearrange the matrix",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Algorithms",
      "Logic",
      "Puzzles",
      "Games",
      "Linear Algebra",
      "Algebra",
      "Mathematics"
    ]
  },
  {
    "id": "59b91a065fb133902e000031",
    "name": "Dungeons And Dragons 5th edition leveling utilities",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games",
      "Maps",
      "Data Structures"
    ]
  },
  {
    "id": "59e1ab5b7997cbd0b9000003",
    "name": "THIS n' THAT",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5a3350bf55519e9cf50000a3",
    "name": "Reimplement destructuring assignment",
    "approved": false,
    "tags": [
      "Algorithms",
      "Parsing",
      "Logic",
      "Strings",
      "Advanced Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "5a4960e2145c46c4e200007e",
    "name": "Mean = Median???",
    "approved": false,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5a4e1a36880385d80a000616",
    "name": "Secret Reverse Language Converter",
    "approved": false,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "split",
      "Haskell Packages"
    ]
  },
  {
    "id": "5aba671b95e0218212000020",
    "name": "ASCII Fighter Jet HUD",
    "approved": false,
    "tags": [
      "Puzzles",
      "ASCII",
      "Character Encodings",
      "Formats",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "5b3f207a6be5d8b2d20000b5",
    "name": "HTML DOM: Part 2 - Attributes",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5b8898fecc7c036dec00012b",
    "name": "What's a beet packer to do?",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5bd0298bcb1ff838b90000f2",
    "name": "The 8 Elements Of Spells",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5c7701fbb9e5260001c6eaec",
    "name": "Count Empty Triangles in the Future",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Performance",
      "Optimization"
    ]
  },
  {
    "id": "5cedd6db4c60c300281d6591",
    "name": "Harmonious Array",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5db0c48c7eb433000ee7b6fc",
    "name": "Passing through jugglers",
    "approved": false,
    "tags": [
      "Algorithms",
      "Graphs",
      "Data Structures",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5e335f9712b02a001a874eef",
    "name": "1 unique common number in every pair",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Optimization",
      "Arrays",
      "Data Types",
      "Mathematics",
      "Numbers",
      "Geometry",
      "Algebra"
    ]
  },
  {
    "id": "5e6fac5bed561b0027161ba2",
    "name": "Making things complex for fun!",
    "approved": false,
    "tags": [
      "Algorithms",
      "Theorem Proving"
    ]
  },
  {
    "id": "604621fd0c43ee001ca5d8e3",
    "name": "Chalkboard math mistake (simple version)",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "52c6072c88faf430ee0001e0",
    "name": "Tic Tac Toe Tournament",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "536fb0766b3aa2a5db000a7c",
    "name": "Branch Prediction",
    "approved": false,
    "tags": [
      "Algorithms",
      "Optimization",
      "Machine Learning",
      "Applied Computer Science",
      "Logic"
    ]
  },
  {
    "id": "53cae5949bbf4c3a25001395",
    "name": "Haskell List Comprehension (vi)",
    "approved": false,
    "tags": [
      "Refactoring",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "542199f2f11dd549720004c9",
    "name": "Escape from Bank",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "54c9fa0c7120b55bb500021b",
    "name": "Waring's problem",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5522a4c1e1be1e77f4000a88",
    "name": "Function Wrappers: pool",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Objects",
      "Data Types",
      "Inheritance",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Polymorphism",
      "Prototypes",
      "Classes",
      "Basic Language Features",
      "Functions",
      "Control Flow"
    ]
  },
  {
    "id": "554e11b7548789ad6a0000b4",
    "name": "Except the Unexpected #1",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "55ad4e4b2a67de35fb000128",
    "name": "Lights Out",
    "approved": false,
    "tags": [
      "Puzzles",
      "Algorithms",
      "Logic",
      "Games"
    ]
  },
  {
    "id": "566159695e48e8ae83000007",
    "name": "Testing 'Food combinations'",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56a103884e10643fa5000003",
    "name": "Lists and Objects - Top Trump Optimizer",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Objects",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "56cb632fc8cfccc84e0015d9",
    "name": "Bar Graph - Graphing #1",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Graphs",
      "Data Structures",
      "Arrays",
      "Data Types",
      "ES2015",
      "Babel"
    ]
  },
  {
    "id": "56ccc33b29aab18ca4001c64",
    "name": " Maximum  Possible Amount of Lattice Points That May Be Encountered By a Single Laser Beam.",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Algorithms",
      "Logic",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Declarative Programming",
      "Programming Paradigms",
      "Geometry",
      "Algebra"
    ]
  },
  {
    "id": "56cf883b6160347a3000188f",
    "name": "Parse python terminal output",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56dac3157955f2c7eb000dfd",
    "name": "No unknown variables!",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56f2f3dfe40b70a005001389",
    "name": "Implementing SHA-1",
    "approved": false,
    "tags": [
      "Algorithms",
      "Cryptography",
      "Security"
    ]
  },
  {
    "id": "5700f27ec15557962000058c",
    "name": "Consecutive Digit Constraints",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Sequences",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5713d18ec82eff7766000bb2",
    "name": "Dobble",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "57c983fdfa9fc5ebf70001ce",
    "name": "Sum decomposition",
    "approved": false,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Logic"
    ]
  },
  {
    "id": "5841e48ca87f76b5e700011a",
    "name": "Image Processing: Gaussian Blurring",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "585a39677cb58d7f8e000078",
    "name": "Power 2",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Performance"
    ]
  },
  {
    "id": "587401831c6060881c0004fa",
    "name": "Generalizing the N-Queens problem",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58881c3e5fb13af14a000064",
    "name": "Rectangle Count",
    "approved": false,
    "tags": [
      "Puzzles",
      "Algorithms",
      "Logic",
      "Games"
    ]
  },
  {
    "id": "5890c676c17bb682ef0000a7",
    "name": "Crypto Square",
    "approved": false,
    "tags": [
      "Algorithms",
      "Cryptography",
      "Security",
      "Puzzles",
      "Games",
      "Logic",
      "Fundamentals"
    ]
  },
  {
    "id": "589fea75294db2bc1d00008f",
    "name": "Magic Squares",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "58bdfdaac1dd1e2c0d00000a",
    "name": "How many floor tiles will I need?",
    "approved": false,
    "tags": [
      "Algorithms",
      "Objects",
      "Data Types"
    ]
  },
  {
    "id": "591570559f40564592000114",
    "name": "Simple Fun #271: Chessboard Shapes",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "591e62eef99b994288000057",
    "name": "Simple Fun #295: Guess Number",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5a288fe68882f3cb420000e0",
    "name": "Fiber Optic Network",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Graphs",
      "Data Structures",
      "Lists",
      "Optimization"
    ]
  },
  {
    "id": "5a2b093f8f27f23a100000ae",
    "name": "Calculator for expressions with fractions",
    "approved": false,
    "tags": [
      "Algorithms",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Strings",
      "Data Types",
      "Mathematics",
      "Logic",
      "Numbers",
      "Parsing"
    ]
  },
  {
    "id": "5a54348880eba8840600008f",
    "name": "Depot organization 1",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games",
      "Search",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5a8305bc373c2ee53900014f",
    "name": "encryption message for 3 little pigs",
    "approved": false,
    "tags": [
      "Puzzles",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5ad7d306e7dbc474330000ec",
    "name": "Shortest string that contains all possible bigrams from set of characters",
    "approved": false,
    "tags": [
      "Puzzles",
      "Strings",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5b256145a454c8a6990000b5",
    "name": "Promenade Fractions  2 – converting both ways",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Performance"
    ]
  },
  {
    "id": "5b7c17fabd29b22df000004f",
    "name": "Pi approximation fractions",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5bad2c11e0a492744000009d",
    "name": "ADFGX UN-Simplified",
    "approved": false,
    "tags": [
      "Algorithms",
      "Cryptography",
      "Security",
      "Encoding",
      "Logic"
    ]
  },
  {
    "id": "5bb4b9c4945bd5f53d000231",
    "name": "Weird Factory",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5bda234b354836ef3000001d",
    "name": "Escape Prison!",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5c4a12683c3cc13f2b23d49f",
    "name": "Funny algorithmic task ",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Mathematics"
    ]
  },
  {
    "id": "5e34deff13968b00193f30d7",
    "name": "Fast/Precise Natural Logarithm",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "6098633d97c91e00496a9f49",
    "name": "Mr. White",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games",
      "Algorithms",
      "Logic",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "60ffb0bad80e47003b21331f",
    "name": "Clock Singularity",
    "approved": false,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Numbers",
      "Integers",
      "Arithmetic",
      "Mathematics",
      "Logic",
      "Games",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "6128fa7a64f336003820eac1",
    "name": "Registering Callbacks in Ruby",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Advanced Language Features",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Dynamic Programming",
      "Utilities"
    ]
  },
  {
    "id": "61e1b974eb372a001f719527",
    "name": "Stepping Stones Puzzle",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "56c5803a27be2ca2b8000931",
    "name": "Counting Cuts",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games",
      "Recursion",
      "Algorithms",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "5f142e6407e8e40010df5998",
    "name": "The Messenger's Oracle",
    "approved": false,
    "tags": [
      "Puzzles",
      "Cryptography",
      "Security",
      "Decryption",
      "Algorithms",
      "Logic",
      "Games"
    ]
  },
  {
    "id": "610ec3f5564d97003d614c7c",
    "name": "Continuations",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Continuations",
      "Control Flow",
      "Control States",
      "Basic Language Features",
      "Coroutines"
    ]
  },
  {
    "id": "59ad6d8f4708a2d4d5000cf1",
    "name": "Detecting Factions in Friend-Foe Networks",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Data Structures",
      "Graphs"
    ]
  },
  {
    "id": "5658475ce6919d17e5000017",
    "name": "Article archive and social likes",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Objects",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Strings"
    ]
  },
  {
    "id": "5d173a78c193ae000d8031a4",
    "name": "Join until impossible",
    "approved": false,
    "tags": [
      "Algorithms",
      "Reflection",
      "Metaprogramming",
      "Programming Paradigms",
      "Advanced Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "5932d028f47e1bb48a0000f1",
    "name": "Bridge: SAYC Openings",
    "approved": false,
    "tags": [
      "Algorithms",
      "Games",
      "Bridge",
      "Design Patterns",
      "Design Principles",
      "Object-oriented Programming"
    ]
  },
  {
    "id": "5b7bc00a864441428000014a",
    "name": "[BF] RGB Decimal to Hexadecimal",
    "approved": false,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic",
      "Strings",
      "Data Types",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "5d097654ac68b80017244e1f",
    "name": "SKI-ing in Chicken's style 2: Church arithmetic and recursive functions",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Theorem Proving"
    ]
  },
  {
    "id": "5de1761596cc1d002d5e5d0a",
    "name": "Program Verification #8: Balanced Parentheses",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Theorem Proving"
    ]
  },
  {
    "id": "5e137d134dfa4d0014402026",
    "name": "Placing new objects in memory",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Advanced Language Features",
      "Memory"
    ]
  },
  {
    "id": "5e4914f1083ab4001eb6af2d",
    "name": "The Church-Rosser Theorem",
    "approved": false,
    "tags": [
      "Puzzles",
      "Theorem Proving"
    ]
  },
  {
    "id": "5eee6c930514550026cefe9e",
    "name": "packing rectangles",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5ef7c2bfbcf8370001cc8693",
    "name": "Countably many dwarves",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5feb264d4010c6000d6e9a30",
    "name": "tricky swift: safe SQL string  interpolation",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Advanced Language Features"
    ]
  },
  {
    "id": "5ff11422d118f10008d988ea",
    "name": "Draw the borders II - Fast and furious",
    "approved": false,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Performance"
    ]
  },
  {
    "id": "60279088ff5c1400123a8608",
    "name": "Pentomino VALIDATOR",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Testing"
    ]
  },
  {
    "id": "61168ebdf9b4810031404f25",
    "name": "Searching for terminal nodes",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "618ce331df011e0030ecc0fb",
    "name": "Restoring from history",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5d0f85053c7724002a6663ac",
    "name": "One small step for a man, one giant leap for mankind",
    "approved": false,
    "tags": [
      "Puzzles",
      "Theorem Proving"
    ]
  },
  {
    "id": "5e32f154aee1df00283198a4",
    "name": "6 By 6 Bimaru Solver",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "58e8c25806db4de3da00011c",
    "name": "Counting like a kid.",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57d14a9d95497e9912000267",
    "name": "National Bath Safety Month",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "586405a639c5abc2db0000e8",
    "name": "All Star Code Challenge #4",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57e8e9df2aee49c0280009ab",
    "name": "Holiday I - Temperature in Bali",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Logic"
    ]
  },
  {
    "id": "5864152183f7e6e834000160",
    "name": "All Star Code Challenge #5",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "58ebfa6ef7cda1a3d4000048",
    "name": "Holy cats",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57227b32785220c82b000b93",
    "name": "Grasshopper - if/else review",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5946e1947325ad198e0000a7",
    "name": "SQL Basics: Biggest in Each Column",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "56a2e3419f9e920186000004",
    "name": "The Lamp",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "589c414a139f7ef9bc00003b",
    "name": "Decimal to binary converter",
    "approved": false,
    "tags": [
      "Algorithms",
      "Binary"
    ]
  },
  {
    "id": "5901c9d463bf406d7c000107",
    "name": "Greetings ",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57cc91361ccdc727f90000cf",
    "name": "No Loops 2 - You only need one - Shortest Code Version",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Booleans",
      "Data Types",
      "Strings",
      "Numbers",
      "Arrays"
    ]
  },
  {
    "id": "585cf4495d0930d04300047a",
    "name": "Select the dictionary key",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58555e3db45c01bada0001e0",
    "name": "Stop worrying!",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58dd55d23f371190f30000a0",
    "name": "Andy's coffee addiction ",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57e56c416cb50810f300002d",
    "name": "Quadruple M",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5866d90edbca9ae420000145",
    "name": "All Star Code Challenge #26",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5963a97e33b908c26400000c",
    "name": "Function-Factory",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "58b81b350e8b4275530000c7",
    "name": "2 numbers, 1 solution ",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5e9c06f95ea5b30033903194",
    "name": "How bigga ma pizza ?",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5862e0db4f7ab47bed0000e5",
    "name": "Find The Unique",
    "approved": false,
    "tags": [
      "Puzzles",
      "Arrays",
      "Data Types",
      "Fundamentals"
    ]
  },
  {
    "id": "597f3434ba9e2f8efa000090",
    "name": "Remove the extra lowercase  'a' characters",
    "approved": false,
    "tags": [
      "Bugs",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings"
    ]
  },
  {
    "id": "5f267a3e23c9aa002e1cd594",
    "name": "Input Events (React )",
    "approved": false,
    "tags": [
      "Fundamentals",
      "React",
      "Babel",
      "Frameworks"
    ]
  },
  {
    "id": "57f501f1beb0b4d46d000248",
    "name": "Array interval",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5aa1931311dbd9358b000823",
    "name": "Average Age of Females",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59580a14838112d91f000174",
    "name": "Climb Time - Can you send it? ",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "60398a8c64b9d5000d84f6a9",
    "name": "Build a train!",
    "approved": false,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic"
    ]
  },
  {
    "id": "5aecf05745e36b3788000557",
    "name": "Sum Only Numbers",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Arguments",
      "Basic Language Features"
    ]
  },
  {
    "id": "5f000483f71133002359b897",
    "name": "Never gonna give you up",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "60f94b4c8b940b0038f5e237",
    "name": "Create an Explosion! ",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Conditional Statements",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "57cc9fd358a06b22a4000248",
    "name": "Every Every - Shortest Code",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Booleans",
      "Data Types",
      "Numbers",
      "Arrays"
    ]
  },
  {
    "id": "5f266f1f0dc7f30033d7b01d",
    "name": "Counter (React)",
    "approved": false,
    "tags": [
      "Fundamentals",
      "React",
      "Babel",
      "Frameworks"
    ]
  },
  {
    "id": "585ade78f59b3c83c1000059",
    "name": "Is it Golden?",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "60ff7bf19347db00319e7afc",
    "name": "Sum or Difference",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5eea52f43ed68e00016701f3",
    "name": "Bob's Jump",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Performance"
    ]
  },
  {
    "id": "55e1ecd8758018ba6b000001",
    "name": "Linked Lists - Move Node In-place",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Linked Lists",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "566039931cb747be82000095",
    "name": "Mutation in Arrays",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Methods",
      "Functions",
      "Object-oriented Programming",
      "Control Flow",
      "Basic Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "577303d4914da62b4b0001c4",
    "name": "Smallest Pair Sum",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "6001f1b46aad3700080d20a7",
    "name": "Powers Up",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57b6f1bab69bfc9fb80002ca",
    "name": "Gradually discounted milk price",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5842ceb013ee5048350000bd",
    "name": "NOP",
    "approved": false,
    "tags": [
      "Bugs"
    ]
  },
  {
    "id": "5886677b9a08e2f9c90000c7",
    "name": "Calculate Monthly Mortgage Payment",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "6098205ca76224000d62a2d0",
    "name": "Numbers without numbers",
    "approved": false,
    "tags": [
      "Refactoring"
    ]
  },
  {
    "id": "5f2723a24e82120016ac0212",
    "name": "Custom hook (React)",
    "approved": false,
    "tags": [
      "Fundamentals",
      "React",
      "Babel",
      "Frameworks"
    ]
  },
  {
    "id": "579fc79b53ba33b408000c80",
    "name": "The A - B Problem",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "584884c169c18791e4000148",
    "name": "SQL Intermediate: Add index column to a query",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5aa28655b005a8fcd10027df",
    "name": "Lost numbers",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5e10cef2ecd9c2000e44994a",
    "name": "Tetrad #1: Four objects of simple types",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures",
      "Integers",
      "Data Types",
      "Numbers",
      "Structs"
    ]
  },
  {
    "id": "6011915d02134e001bc4fbba",
    "name": "Number of trees needed for building",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "569260e1096a6545fb00004c",
    "name": "PatternCraft  - Command",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Design Patterns",
      "Design Principles"
    ]
  },
  {
    "id": "5e2456b1c4d2810023bb14e2",
    "name": "Pizza Comparison",
    "approved": false,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5f7bd6a8adfe0d0019666d2f",
    "name": "The Mystery Function",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5b76d2f2755dfd20990036ac",
    "name": "Remove numbers and lower case the letters",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Strings",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "602467452b35dd0021cbf46e",
    "name": "Hangman!",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5832d5adb9a7fe60bc0000d5",
    "name": "SimpleEquation",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5ac37e32b4218298130001aa",
    "name": "Beam me up Statey using ReactJS",
    "approved": false,
    "tags": [
      "Fundamentals",
      "React",
      "Babel",
      "Frameworks",
      "ES2015"
    ]
  },
  {
    "id": "5866c9e7dbca9af99400009e",
    "name": "All Star Code Challenge #25",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5f84327ac00bae002444d813",
    "name": "Matching Words in an Acronym",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5826d9d9392e28d0bd000125",
    "name": "The first rule of fight club is...",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "603ed5320683b40019870500",
    "name": "Build a building but with practically no  instructions",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58288cc7ef8d44e3df000296",
    "name": "Messing with the Elements",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5b62031b97568072da0003db",
    "name": "Find the non-unique number",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Strings",
      "Arrays",
      "Basic Language Features",
      "Lists",
      "Data Structures",
      "Loops",
      "Control Flow",
      "Conditional Statements",
      "Sorting",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "56032c3deea6ebca2900003c",
    "name": "Uncurrying",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "609f9a49d5a5fc000790db58",
    "name": "Spanish DNI #1",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "57fe54302ad2dc1c8e00081e",
    "name": "The Office VII - Expression of Interest",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "587cecb7024ac70348000008",
    "name": "Implement Array.prototype.forEach",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Higher-order Functions",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5c97be7d856e611dbb78805f",
    "name": "Diving Scores",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "6031798cc27982000e1a5aec",
    "name": "Chessboard legend",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5985812e8fb36185c1000063",
    "name": "Add 3 bits",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Binary"
    ]
  },
  {
    "id": "565c5e48072f02327a000036",
    "name": "Simplified object comparison",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "605597f7276b220015b202cd",
    "name": "N odd, 1/N even",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science",
      "Sequences",
      "Arrays",
      "Data Types",
      "Algebra",
      "Mathematics",
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5625ad73931e45d58e0000bb",
    "name": "Split-form Addition",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "599b23c7d7dd7216640000a6",
    "name": "Square",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56a4270061589f48aa000012",
    "name": "Flatten a tree",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Data Structures"
    ]
  },
  {
    "id": "583b820a7d40425fca000047",
    "name": "Cleaning House/A Familiar Friend",
    "approved": false,
    "tags": [
      "Bugs",
      "Fundamentals"
    ]
  },
  {
    "id": "58dff747ca6895f1230000d1",
    "name": "Finding a Prime Number in an Interval",
    "approved": false,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "59e72051233243fe85000039",
    "name": "Alphabetti Spaghetti",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a8205a2ba1bb54f80000187",
    "name": "Happy Birthday",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5453101cc8e60b804f002113",
    "name": "stripper_namer",
    "approved": false,
    "tags": [
      "Puzzles",
      "Strings",
      "Data Types",
      "Games",
      "Fundamentals"
    ]
  },
  {
    "id": "5947cc20eecfde0b14000040",
    "name": "Learning Shell: Count to 30",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5c9ccb822e3826705459609f",
    "name": "Guard the Abyss from good souls",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Data Structures"
    ]
  },
  {
    "id": "586f900ea44cfc21cf000041",
    "name": "Switch case practicing ",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5d51b29f8bc69a0011071b4a",
    "name": "Office Space #1 - Threes from Twos",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5ff7730a519df00027d17755",
    "name": "Joules to calories",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "574e0af02be0e2dca00004c6",
    "name": "Robot Walk",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Case/Switch Statements",
      "Conditional Statements",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "576d1ca71129fcd22d0006be",
    "name": "Performance #2 - Fill an Int-Array - Need High Speed",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5776a5150338a587b1000092",
    "name": "IKEA visit",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Tables",
      "Data Structures"
    ]
  },
  {
    "id": "581056ba36a3e5446d00007f",
    "name": "Random number in range",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "596e5b0fdba3fa5fa7000026",
    "name": "Array power",
    "approved": false,
    "tags": [
      "Puzzles",
      "Arrays",
      "Data Types",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Games"
    ]
  },
  {
    "id": "59ddf33c11bea79880000fab",
    "name": "Armstrong Number",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a53f4adb3bfa861120003e6",
    "name": "Ramda #4 - Mean numbers",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Utilities",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Lists",
      "Data Structures",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5f6787948a3830002fc40077",
    "name": "Expand the packed usernames (Boltabek's new job p.1)",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Strings"
    ]
  },
  {
    "id": "601e7862fa3436000d1d69bf",
    "name": "Spelling help",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "57d1203395497e99120000c9",
    "name": "Car Door Roulette - Easy Version",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "59357d303864834c1a000026",
    "name": "Find twice of a number's value",
    "approved": false,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5b9ff042875de917e400024d",
    "name": "Less or Equal",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Performance"
    ]
  },
  {
    "id": "610c8308ed5ee4003279d112",
    "name": "Snake_Casify_Keys",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "59bde415e82e31b811001a04",
    "name": "One Line: Even Odd Converter",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5a8655e657c5621d0e000087",
    "name": "One Line Task :  Choose List !! Part(1/2)",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5d270b163814220024b016a2",
    "name": "Five  Star",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5e93dc27df14380001f5c54a",
    "name": "Reaching a number by x3 or +5 (or is it possible?)",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science",
      "Mathematics",
      "Numbers",
      "Optimization",
      "Performance"
    ]
  },
  {
    "id": "53e0d0c15e2d6edc6c000dfc",
    "name": "Trumps - The Classic Card Game",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "57cc05afe1d31fa09500004e",
    "name": "How many monsters?",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "582d3435e3023803bb0005b0",
    "name": "Ceasar's Cypher",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "58dd82aeee8586d9b800007e",
    "name": "Find the Length of One Side of a Right-Angle Triangle Given the Lengths  of the Other Sides",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5b73fb741db5cef0b0000009",
    "name": "Simple Arithmetics on X",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Operators"
    ]
  },
  {
    "id": "5c31b96255af4e795ab87e93",
    "name": "Bobby Builds a PC",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Conditional Statements",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "55fa94d643e396b2a20000a1",
    "name": "Dodgy delete key",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "58063f6c6d88be7cc200006b",
    "name": "Code-ilocks. This exercise is JUST RIGHT!",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5821ce8feebca7701900000a",
    "name": "Junior Flag Football Player Rankings ",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58d12885d9e7e6221c00005c",
    "name": "Sort it out!",
    "approved": false,
    "tags": [
      "Algorithms",
      "Objects",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "58dba2e499abd416c9000166",
    "name": "Total Resistance in  a Parallel Circuit",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5993ab16d7a7f94eec00001b",
    "name": "Mark Function",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59f9c1a04b8a601d65000089",
    "name": "The More Vegetables The Better",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Objects"
    ]
  },
  {
    "id": "5d51bc276f601f001563641d",
    "name": "Office Space #2 - Closest Three from Twos",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "6011fffcc7a2b0000d1d61f3",
    "name": ">><< in Strings",
    "approved": false,
    "tags": [
      "Puzzles",
      "Modules",
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Games",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "61eeb6e7577f050037b17a2d",
    "name": "Make everyone happy :)",
    "approved": false,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "586d3739b98de0bec6000b78",
    "name": "BuildingThePyramids",
    "approved": false,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5888d7985161a90240000034",
    "name": "Strain",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Fundamentals"
    ]
  },
  {
    "id": "58bb39ab39fdb4c4370005ac",
    "name": "Enchant recursively",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Recursion",
      "Algorithms",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "5981e71322118b47e100001e",
    "name": "Make  a Bow Tie",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "59b836abbf10a48ec400017b",
    "name": "Normal number",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5a1971bb80171fd71d000031",
    "name": "Let's convert British Pounds to Swiss Franks!  (GBP) --> (CHF)",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5ae730e5afcba90ca1001f0c",
    "name": "Average value of squared even positive integers array",
    "approved": false,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Maps",
      "Data Structures",
      "Map/Reduce",
      "Logic"
    ]
  },
  {
    "id": "5c5b14a825088c00019048f9",
    "name": "Series of dilutions",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "56d2cba5a10939499b000037",
    "name": "Find the Number?",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Fundamentals"
    ]
  },
  {
    "id": "580b3efd43a6be90aa000104",
    "name": "Convert Symbol to Array",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Metaprogramming",
      "Programming Paradigms",
      "Advanced Language Features"
    ]
  },
  {
    "id": "58657574a5f191e4090002ab",
    "name": "All Star Code Challenge #17",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "595695afc575c9d266000037",
    "name": "What will be the day of the week in a year?",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a066cc4697598406d00004f",
    "name": "match 1-65535",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "5c01c1525486bf12bd0001cd",
    "name": "Max number of people and year in a specific place",
    "approved": false,
    "tags": [
      "Algorithms",
      "Performance",
      "Map/Reduce",
      "Logic"
    ]
  },
  {
    "id": "5fad5be0ff1ef6000f928448",
    "name": "Basic Statement Coverage in Unit Testing",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Testing"
    ]
  },
  {
    "id": "607067f18c0349001b3f4fd2",
    "name": "Drinking Orange Juice After Brushing Teeth",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "53d51336c2c772aa43000724",
    "name": "Moving element in an array",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Prototypes"
    ]
  },
  {
    "id": "5c3bbc108a4c2e7531477a9a",
    "name": "CSS Hello World!",
    "approved": false,
    "tags": [
      "Algorithms",
      "Fundamentals"
    ]
  },
  {
    "id": "5ce04eadd103f4001edd8986",
    "name": "Fun with binary numbers",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "5f1804560873b20023e8244a",
    "name": "Casting binary float to integer",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Type Casting",
      "Type Conversion",
      "Algorithms",
      "Logic",
      "Data Types"
    ]
  },
  {
    "id": "6019866ded865c002b4bb2fb",
    "name": "Is it possible to white-it-out?",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "60a50b20c42fb60006476369",
    "name": "19 * 25 = 133",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5a88a9b160c8132eb2002239",
    "name": "One Line Task :  Choose List !! Part(2/2)",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5a98236dfd577762aa000054",
    "name": "Bank Robbery",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5ad2f0482cba73ed9f000d4f",
    "name": "Interweaving an Array",
    "approved": false,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "605793c11114e70023301e91",
    "name": "One Bit Full Adder",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "606047f060a707001ae7d5fd",
    "name": "Fraction Simplifier",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Control Flow",
      "Basic Language Features",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "61d971e2d2d2f200077762a5",
    "name": "F-score",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "56bb405a38dd34edc00010c5",
    "name": "How many minutes?",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5934ef21b2defb45df000026",
    "name": "Find a number increase",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "59a6fc8357019085a4000040",
    "name": "Clear the Catacombs!",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5cdab9176d6a440019846897",
    "name": "Distance to horizon",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5e68b3c5a2e8070029f87280",
    "name": "[Code Golf] blue ball counter",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5e9c3dc86ddf2f0024423b41",
    "name": "FIXME: String == String",
    "approved": false,
    "tags": [
      "Bugs"
    ]
  },
  {
    "id": "5f7e8e3ee2c95a00110b4a38",
    "name": "When's My Cue?",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "607ad7fce768eb00070f5337",
    "name": "Bacteria ",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "60d6f2653cbec40007c92755",
    "name": "Message Encryption",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "612ccdf0e360ca001a032faf",
    "name": "Sad Birthday String",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "584d9264bd1606771b0000af",
    "name": "Return a CSV from a given directory",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58c8a939edb423240a00002e",
    "name": "Case Sensitive",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "59a8aa51c21de20aac0000e3",
    "name": "Spicy or Not",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a4b7d85cadebf08eb000088",
    "name": "Merge two sorted arrays",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Sorting",
      "Algorithms",
      "Logic",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5b0c89054bf71665480000b9",
    "name": "Word Numerology Calculator",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Arrays",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "5c43909243456646dd854a63",
    "name": "Sum and Count All Odds vs Evens",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Numbers"
    ]
  },
  {
    "id": "60d2325592157c0019ee78ed",
    "name": "Sum the nums, sum the sums and sum the nums up to that sum",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "52703e73dba1a2aa2400004f",
    "name": "Blackjack Winner",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "55b51a889a6e76b24a000066",
    "name": "Generate UK Postcode",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5614cb23f91eb26b60000087",
    "name": "Bit Sort",
    "approved": false,
    "tags": [
      "Algorithms",
      "Binary",
      "Sorting",
      "Logic"
    ]
  },
  {
    "id": "5707fb3f3f100894170006ae",
    "name": "Convert your name to Japanese! (Game)",
    "approved": false,
    "tags": [
      "Algorithms",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "57a5f023e298a767da0000d5",
    "name": "Inverted school grades",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "588bc0c1ee6bd08b3a0000ac",
    "name": "The Most Repeated Letter. ",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a152e9fc9fc0e1bcc0000e1",
    "name": "Who's the greatest?",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5a3b9489f28b8282e80000a2",
    "name": "Number encoding",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Functions",
      "Conditional Statements"
    ]
  },
  {
    "id": "5c2575500b74434ded0000c3",
    "name": "Can you move to Zephland?",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "600eee71eb6b0200216d2de3",
    "name": "\"!\" and \".\" Alternate",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games",
      "Algorithms",
      "Logic",
      "Fundamentals"
    ]
  },
  {
    "id": "60116e37e25e6f002274de4f",
    "name": "Post Office Delivery",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "60563e553a99a0001bde595c",
    "name": "Soccer starting XI playing time",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "60577249808f27000b86b77b",
    "name": "The hummingbird and the bikes",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "6064c4fe71f8920036610b4b",
    "name": "Student Rankings",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56955e567f69f4521b0000aa",
    "name": "Reducing Fractions",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "580dc0ee8424e4e2ab00002f",
    "name": "Robbing Rövarspråket",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Iterators",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Arrays"
    ]
  },
  {
    "id": "58a1bce8d781ae52f9000090",
    "name": "Refactor out a switch-statement to a Dictionary",
    "approved": false,
    "tags": [
      "Refactoring",
      "Fundamentals"
    ]
  },
  {
    "id": "58bae32c14f4f2d378000ce8",
    "name": "Sort Letters Sum Numbers",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "593ee7195b851e1bc90005b0",
    "name": "Order by frequency",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5acc87e29df8b9c6720000e9",
    "name": "Capital Words!",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5b4668d03da310b649000013",
    "name": "Giving your twitter bot a brain",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5f8ef9fedd88470015c6d895",
    "name": "The Microwave Problem",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "60058cc02b8bc80017a4d773",
    "name": "XOR Swap",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "60329ef3c55294001d934003",
    "name": "Baconian Cipher",
    "approved": false,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic",
      "Strings",
      "Data Types",
      "Security",
      "Ciphers",
      "Cryptography"
    ]
  },
  {
    "id": "6124ef460eef980057c8594d",
    "name": "Maximal Divisor - best complexity",
    "approved": false,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Logic",
      "Mathematics",
      "Integers"
    ]
  },
  {
    "id": "616819e16814de0029a3ae5b",
    "name": "Escape Vim",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "52b2fcc1c65ea44b76000701",
    "name": "Class extension model with mixin ability.",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Prototypes",
      "Mixins",
      "Modules"
    ]
  },
  {
    "id": "56f32965e40b700dc6001797",
    "name": "Format date DD/MM/YYYY",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Formatting",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "576d27891129fc9089000211",
    "name": "Performance #3 - Fill an Int-Array - Need Highest Speed",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57b93d3b8f58135e84000092",
    "name": "Collatz Conjecture (Recursive)",
    "approved": false,
    "tags": [
      "Algorithms",
      "Recursion",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "5861d2266d36a54f820000e6",
    "name": "Bill Gates' Percentage Calculator",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "587a3a2acaf967a8e000006f",
    "name": "Largest product in a series",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "58db8adbb9f417c74b000049",
    "name": "Body Mass Index (BMI) calculator",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5b5a02436ac800e35c0000d6",
    "name": "Grouping distinct items",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Map/Reduce",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "60659d451760bf004df1fb00",
    "name": "Ferris Wheel Cabins",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "541b35fcb589989aca000da9",
    "name": "Spiral Matrix",
    "approved": false,
    "tags": [
      "Algorithms",
      "Graphs",
      "Data Structures",
      "Logic",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "577af69f7a3dbdbfd90000ac",
    "name": "Built-in Product Function",
    "approved": false,
    "tags": [
      "Bugs",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Utilities"
    ]
  },
  {
    "id": "57d991ed3c3f9666e9000009",
    "name": "99 Problems, #4: length of a list",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "57e12e24621bcaaac10000e3",
    "name": "Flatten a List",
    "approved": false,
    "tags": [
      "Algorithms",
      "Lists",
      "Data Structures",
      "Logic"
    ]
  },
  {
    "id": "57fab8a32b531416560005a5",
    "name": "Dynamic Class Creation",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Dynamic Programming",
      "Programming Paradigms",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Design Patterns",
      "Design Principles"
    ]
  },
  {
    "id": "584ae59dedecf5b9410000ed",
    "name": "Nth term - Linear Sequences",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Algebra",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "589b1cb3081bcbece80006b2",
    "name": "Quick Sort",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "58da3ef3ac2033ef630000ca",
    "name": "The Great Pyramid of Giza",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58f9fda15b7df65fca000004",
    "name": "Dora Explores! Help Dora keep her lassi",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "595690afb945d3e0e50000a4",
    "name": "Translate any Day of Week from English into French or German",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59791f12b904082340000040",
    "name": "Isosceles Triangle",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5a6554fdb3bfa87960000039",
    "name": "Relationship evaluator:  Who's your daddy!?",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5ae84ac8596a3c48b2000a88",
    "name": "Insane TA",
    "approved": false,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals"
    ]
  },
  {
    "id": "5b997c12d16ffef9820001d3",
    "name": "How well did they score?",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Data Types",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5c0fcf02ccc957d91c00027d",
    "name": "Find the Shifted Words",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5caeebaa477428000de25217",
    "name": "Objects you can calculate with ",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5ef1fe9981e07b00015718a8",
    "name": "Prime Cycles",
    "approved": false,
    "tags": [
      "Puzzles",
      "Sequences",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5f2958b6e568cf00014069e8",
    "name": "Can You Open Rachel's Gate?",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "61d078067abfec00327d0993",
    "name": "Highest Average Cricket Score",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55a69e5222451d7c7000005f",
    "name": "Find the 2nd smallest integer in array",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "562b2ef267350ad163000106",
    "name": "Composed Integers Having Prime Factors Only Once",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Data Structures",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "56b4a321a41928e2a100005f",
    "name": "Mapping with multiple maps",
    "approved": false,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Maps",
      "Data Structures"
    ]
  },
  {
    "id": "57601e1ad8c51613cb0021ac",
    "name": "Find number of matches",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "57da6a507691c30926000042",
    "name": "Get all possible products of two lists of numbers",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58486d0acdf5975252000205",
    "name": "Fixing Johnson Typos",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58922d454570478bb4000050",
    "name": "Trinary",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "58d470bbd929c8b71a00003b",
    "name": "Jungerstein's Math Training Room: 3. At a cat",
    "approved": false,
    "tags": [
      "Puzzles",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Integers",
      "Data Types"
    ]
  },
  {
    "id": "5975b4fecb487ccf2700012b",
    "name": "Sum of All Digits (powers of 10)",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "59c0c5d6623654986200077b",
    "name": "Cube-powerful ",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5aaff7ef7c7a53021900016f",
    "name": "Simple Stats: Mean and Standard Deviation",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Statistics",
      "Algorithms",
      "Data",
      "Logic"
    ]
  },
  {
    "id": "5d9dce868fd3c90016cfbb35",
    "name": "Mode Count",
    "approved": false,
    "tags": [
      "Algorithms",
      "Statistics",
      "Data",
      "Logic"
    ]
  },
  {
    "id": "5def492088417400010b0a7f",
    "name": "Index i?",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Methods",
      "Functions",
      "Object-oriented Programming",
      "Control Flow",
      "Basic Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5e39f8bd7a978d002de8d294",
    "name": "Fix truthy config, oh no, you need to find problem before fixing.",
    "approved": false,
    "tags": [
      "Bugs"
    ]
  },
  {
    "id": "5ffc412fe72bac002b491214",
    "name": "The Kingdom of Squares",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "600c4199a4982600091ee023",
    "name": "Get an array of words in the singular",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "60286a428d9633000dd6241d",
    "name": "A + B = ?",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "60d847e93cbec4003e0e4164",
    "name": "Addornot's message",
    "approved": false,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "61c78b57ee4be50035d28d42",
    "name": "Merge overlapping strings",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "55a039a550415754cb000040",
    "name": "Gone fishin'",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55d92bf7934aff33c20000a2",
    "name": "Random string",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55faa7cbda3e2ece4f000072",
    "name": "Equidistant C",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "56a98fc99903dc1f4b00008e",
    "name": "Call a block on an array multiple times",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Blocks",
      "Object-oriented Programming",
      "Functions",
      "Programming Paradigms",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "570e8bc993214b30e4001ae0",
    "name": "Two Stacks Make A Queue",
    "approved": false,
    "tags": [
      "Algorithms",
      "Stacks",
      "Arrays",
      "Data Types",
      "Queues",
      "Logic"
    ]
  },
  {
    "id": "577d75835c92d3824d000001",
    "name": "Blackjack, should I hit?",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5894649d9521d7bf9600012b",
    "name": "Quadratic Solver Part 2 (Factorising)",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "59e72fa2daa2634d82001345",
    "name": "Ice Cold 3000",
    "approved": false,
    "tags": [
      "Puzzles",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5ab109168d28f650b700013b",
    "name": "Use recompose's withProps to transform the supplied props to a React component",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5ad3017468d4e336c9001cfc",
    "name": "Array Compression #1",
    "approved": false,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5b57a9bec19d96c0b80000c9",
    "name": "Readable developer-friendly large numbers",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5fa7ed8b2ba8d80017f95982",
    "name": "Match Nested  HTML Snippet",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "5589f9148b759e52fd0000f5",
    "name": "8 Squares Puzzle",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "567b4463933017fb1500004b",
    "name": "setZeroes",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "56983c83247662b3fb00005c",
    "name": "Multiply a very large number",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5711d95f159cde99e0000249",
    "name": "Printing Array elements with Comma delimiters II",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "57dcdcfdf5ec1691a3000115",
    "name": "Find number with most divisors",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5838d930aa67172cb300004a",
    "name": "Everything that remains",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Higher-order Functions"
    ]
  },
  {
    "id": "58b0119997cabe92780000bb",
    "name": "Love Percentages",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5971172e230a67752200002d",
    "name": "Meme Maker",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "597640cd74dfe024af0000d7",
    "name": "Fly as fast as you can",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5b2b22c542b27eec17000130",
    "name": "Array - Merge Every N items",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5b55fd4d578c6a3b9e000137",
    "name": "LargeNumber*Digit",
    "approved": false,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Algebra",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5c471f3da4db1e7a3dddc9e9",
    "name": "[UIB] Count the number of 'a' in a text that ends with '.'",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5c54b825fbce9c000122a280",
    "name": "League Champions",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5ef3ddbeb212270035e5d09e",
    "name": "Deciphering bugged phrases",
    "approved": false,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Puzzles",
      "Games",
      "Logic"
    ]
  },
  {
    "id": "5f72e43d05f4fa001d40e59e",
    "name": "How many inches does Subway waste?",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5feb1b11e7243a001cec6293",
    "name": "Crane Operation",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "605b416e7c6c89002bdf87c8",
    "name": "How many rectangles can you find?",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "61393fd03e441f001ac9c7d4",
    "name": "Format phone number by template",
    "approved": false,
    "tags": [
      "Algorithms",
      "Formatting",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "530f827130351c879a000712",
    "name": "Generalized Matrix Multiplication",
    "approved": false,
    "tags": [
      "Algorithms",
      "Graphs",
      "Data Structures",
      "Logic",
      "Mathematics",
      "Numbers",
      "Linear Algebra",
      "Algebra"
    ]
  },
  {
    "id": "55f7c3664fec281400000023",
    "name": "jsPizzeria",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "568e111353952f6c82000014",
    "name": "check UPC",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Mathematics"
    ]
  },
  {
    "id": "57964a1b39f33a2a450003c5",
    "name": "Strategy Pattern - Bird Behaviors",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Design Patterns",
      "Design Principles"
    ]
  },
  {
    "id": "57cf7136c98a52c5cf00025a",
    "name": "Flow division",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "57d98d533c3f960c71000003",
    "name": "99 Problems, #2: last and penultimate in list",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "580a30e1728d044ced00032f",
    "name": "Save the rhino",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Artificial Intelligence",
      "Machine Learning",
      "Algorithms",
      "Applied Computer Science",
      "Logic"
    ]
  },
  {
    "id": "5886558141e0445dbf000086",
    "name": "String Calculator With Different Input Types",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5967e5d5c6427d73cf000052",
    "name": "Find The Parity Outlier redux",
    "approved": false,
    "tags": [
      "Refactoring",
      "Algorithms",
      "Logic",
      "Performance"
    ]
  },
  {
    "id": "596c95c2ec20a3cc87000797",
    "name": "How much tax?",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5a0a6666c9fc0e96df000026",
    "name": "CTCI 1.8 Zero Matrix",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5b830cce4a6acaddf90000b8",
    "name": "Saint Petersburg Paradox Model",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5b90efce7b579dbbdf0002ba",
    "name": "Remove even-count symbol occurrences",
    "approved": false,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "5c0e4c0bb61282dca70000aa",
    "name": "Implied Probability from Fractional Betting Odds",
    "approved": false,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Strings",
      "Numbers"
    ]
  },
  {
    "id": "5ca19f3fdd83f4001dda927d",
    "name": "Thickness of  paper  folded in half",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5d27c9fb5e2e7d0001ebfaec",
    "name": "Pascal's triangle on a graph",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5d7047c44131c3cc4412369a",
    "name": "Dice Combinations",
    "approved": false,
    "tags": [
      "Algorithms",
      "Permutations",
      "Logic"
    ]
  },
  {
    "id": "5e2e6a05e81eda00153daa5c",
    "name": "ASCII-betizer",
    "approved": false,
    "tags": [
      "Fundamentals",
      "ASCII",
      "Character Encodings",
      "Formats",
      "Sorting",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5e8c451f968b3400324b345e",
    "name": "Adding a check key",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5f0cd8a08c2b35001608dc1a",
    "name": "Matrix of Palindromes",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5fd4ab789b9acf000dc4b69f",
    "name": "Did I survive?",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Basic Language Features",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "6010d619111bc0000ae9e60a",
    "name": "Sum and Product of Three Numbers",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "6013d4f5c7c63100095952aa",
    "name": "Evaluating Continued Fractions",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "6083fcd9fdfce800430f726c",
    "name": "Minkowski lists",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "60b0a562639df90006a106f4",
    "name": "Traffic Jam",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "60c9fb4f4875c5003dd57747",
    "name": "Shared Words",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "6132404ea993ec00384db87c",
    "name": "Talk Like Yoda, You Will",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "555395d9fade1bd06d000010",
    "name": "Sum of  nine-digit polydivisible numbers",
    "approved": false,
    "tags": [
      "Algorithms",
      "Arithmetic",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "56b7457581290cc889000b87",
    "name": "Calculate the bearing angle angle between two points",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Basic Language Features"
    ]
  },
  {
    "id": "5760b0e70c3a69850600004c",
    "name": "SEAN! SEAN! SEAN!",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57991e4f3467db48c20000f1",
    "name": "Symmetric Difference",
    "approved": false,
    "tags": [
      "Algorithms",
      "Algebra",
      "Mathematics",
      "Logic"
    ]
  },
  {
    "id": "5830721ffd25e9551a000118",
    "name": "Compress string to return letter followed by numbers of times it occurs in a string",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "587510553793a30f640000ff",
    "name": "Ancestors Blowfish - play with bits.",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games",
      "Algorithms",
      "Logic",
      "Encryption",
      "Cryptography",
      "Security",
      "Decryption",
      "Bits",
      "Binary"
    ]
  },
  {
    "id": "597f2b4bcfba201979000089",
    "name": "Css selectors builder",
    "approved": false,
    "tags": [
      "Algorithms",
      "Puzzles",
      "Games",
      "Objects",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "59e31e68a9f97d70a90009fc",
    "name": "How Much Lines",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5a05c404697598b477000072",
    "name": "Find the maximal product",
    "approved": false,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Arithmetic",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5a5015a7145c467bd50000a5",
    "name": "Split non spaced string to words",
    "approved": false,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Dynamic Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5b74562a69826c148100007a",
    "name": "Ada goes to coding bootcamp",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5c8a4ae0623dc26646cd3d7c",
    "name": "Biathlon individual race time calculator",
    "approved": false,
    "tags": [
      "Algorithms",
      "Dates/Time",
      "Data Types",
      "Fundamentals",
      "Basic Language Features"
    ]
  },
  {
    "id": "5cde541f52ed7f000c0aa9a0",
    "name": "Flatten A Nested Dictionary That Contains Lists",
    "approved": false,
    "tags": [
      "Algorithms",
      "Recursion",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "5de8017ed54eb10022d32d8a",
    "name": "String Product",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5ed7d6136813b5002db69baa",
    "name": "Check phone numbers",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "600444d8f654f60008a0a83c",
    "name": "Near or Far",
    "approved": false,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Logic",
      "Search",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "605610760aef190033be31af",
    "name": "Guess the upcoming election result",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "605dd983463d94002bf38670",
    "name": "Story #1 - Slice And Multiply",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games",
      "Fundamentals",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "609e8830c7f29100485dfe1b",
    "name": "ASCII characters are displaced. Can you get the original string? Easy version.",
    "approved": false,
    "tags": [
      "Algorithms",
      "ASCII",
      "Character Encodings",
      "Formats"
    ]
  },
  {
    "id": "611bf23359f2440033287740",
    "name": "Nerds Team Building",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Objects",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "611e1fdedb3c38005b7a9ee6",
    "name": "Simple Syllable Separator (SSS)",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "6143b25a26b2c500078c8be1",
    "name": "Transform the graph",
    "approved": false,
    "tags": [
      "Algorithms",
      "Data Structures"
    ]
  },
  {
    "id": "61fab7a6a0e59f000ef08feb",
    "name": "Next Element Generator",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types",
      "Iterators",
      "Control Flow",
      "Object-oriented Programming",
      "Basic Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "55a838015aea588a8d000173",
    "name": "Answering questions about data with Lo-Dash - 1",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Data"
    ]
  },
  {
    "id": "562ee0ecdc02459d7a0000d0",
    "name": "Sparse array implode function",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Sparse Arrays",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "568866dfc9062227ae00004d",
    "name": "Select The Wanted Products",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Functions",
      "Sorting",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5705dab6cb7293991300056a",
    "name": "ScholarStem: Unit 6- Sorting Hat!",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "578dec1875ffd126e5000174",
    "name": "Is your diet on point?",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "57e6dd0b6603f63e4f0000fd",
    "name": "NHA JS1 Variables - Declaration & Assignment",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "586b9811aa0428fcee00001b",
    "name": "Find the maximum possible product of 3 integers in an array",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5873775069b6fde790000211",
    "name": "Sudoku solver #2",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "58820ac243ca047e68000012",
    "name": "Parsing & Automata - Matching Bracket Lists & Context-Free Grammars",
    "approved": false,
    "tags": [
      "Algorithms",
      "Parsing",
      "Logic",
      "Strings"
    ]
  },
  {
    "id": "58a3bb6317d941c074000256",
    "name": "Credit Card or Playing Card",
    "approved": false,
    "tags": [
      "Puzzles",
      "Artificial Intelligence",
      "Machine Learning",
      "Algorithms",
      "Applied Computer Science",
      "Logic",
      "Arrays",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "58dba4d8b9f4178483000181",
    "name": "Comic Book Hero - The Flash - Saving Lives",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Fundamentals"
    ]
  },
  {
    "id": "594fd4950462dadf2e000112",
    "name": "Zero Crossing Rate",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59c13bb070a3b70098000041",
    "name": "Morse Code Translator",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types",
      "Parsing"
    ]
  },
  {
    "id": "59cf525a23dacca37200005a",
    "name": "Variable Number of Arguments in C",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Advanced Language Features",
      "Data Types"
    ]
  },
  {
    "id": "5b6ded5cb3d9777af9000045",
    "name": "Find the Triplets!",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5b997365e1aeb60894000175",
    "name": "The index where the value changed",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5c6d2bb6f1ed75343729806a",
    "name": "Intruders into 3 Family ",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5d06b607e1021600183f64f7",
    "name": "Ludic numbers",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5e823c4f0ab797001fde366b",
    "name": "#1 • A nugget problem",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5ec44a499f23f600322cefb9",
    "name": "Scrabble Word Generator",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Permutations",
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "5edaa69f5fcd510020199489",
    "name": "Fill None",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5fba963d18f1e70022a26c39",
    "name": "Number Sequence: Smarandache descrescendo symmetric sequence",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "60515b599da73d0037c4c375",
    "name": "Carbon Dating",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Statistics",
      "Data"
    ]
  },
  {
    "id": "60b6840908092600415113d5",
    "name": "In the Mandelbrot Set?",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "610ac1a655a14600404f9cf4",
    "name": "Transitive cycle",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55699a9664a8c14e14000161",
    "name": "The Red Herring",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games",
      "Data Structures"
    ]
  },
  {
    "id": "560c4d5827092bae99000024",
    "name": "Calculation of the Angles of a Triangle",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "561c0bb01e61d5fb5800003b",
    "name": "Cryptic Sue",
    "approved": false,
    "tags": [
      "Puzzles",
      "Fundamentals",
      "Games",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "564f3c99c76798c8b5000198",
    "name": "Strings to worded numbers",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays",
      "Numbers",
      "Integers"
    ]
  },
  {
    "id": "57b8b7bc89512a5fe6000005",
    "name": "Calculate the required interest rate",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "582f64a0029b1af37f0000c6",
    "name": "Test for semiprime (Mathematics)",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "583de93c6e39945846000106",
    "name": "Roman numeral decoder with format validator",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Parsing",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "58818b8b2e0955ae41000109",
    "name": "Jack's House",
    "approved": false,
    "tags": [
      "Puzzles",
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types",
      "Fundamentals"
    ]
  },
  {
    "id": "5957996dbe7b4fef30000061",
    "name": "What is your country's currency symbol?",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59665dbb963b9e21c5000006",
    "name": "Delivery Disaster",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5ae2a0ad9dad3c82b200016a",
    "name": "Get All Combinations's Count",
    "approved": false,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Logic"
    ]
  },
  {
    "id": "5ae2b5c62c50619eec00002c",
    "name": "All Combinations",
    "approved": false,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Logic"
    ]
  },
  {
    "id": "5b18ff8e7500be2d7f00003c",
    "name": "Load value from system variable",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Design Patterns",
      "Design Principles"
    ]
  },
  {
    "id": "5b31fa33a454c8aa580000ef",
    "name": "Vim's increment and decrement functions (Ctrl-A and Ctrl-X)",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5b76f21af71e5d0dc100005b",
    "name": "Crazy Waiter",
    "approved": false,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Objects"
    ]
  },
  {
    "id": "5bc53cf001249c04fb0001a0",
    "name": "Cells states",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5bfa7ba46cbbc6bebf000139",
    "name": "[Code War] The Weapon Factory: Assembly Line",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5c1d0603eb9142df470000bb",
    "name": "RegEx Like a Boss #3:  Different Number Formats",
    "approved": false,
    "tags": [
      "Algorithms",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings"
    ]
  },
  {
    "id": "5c1ecee170fee65c8f00049b",
    "name": "Basic Scheme Math Interpreter",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5c6a4668ca80ec0239190701",
    "name": "Array of Morse, find unique and dublicate elements",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5c6c2af5a2420770839bbac1",
    "name": "Calculate the stars",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5cd291c01931d33c558f2f17",
    "name": "Noise detector",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5dbd04159352ac0010704bb5",
    "name": "Find the Number of Pieces in a N(xNxN) Rubik's Cube",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5dd80bba0fd7140033573b47",
    "name": "Get the next day in the future from a list",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Dates/Time",
      "Data Types",
      "Methods",
      "Functions",
      "Object-oriented Programming",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5eb41688a4f64f00283ac681",
    "name": "Chemical Name",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "600fc01f0eebad0027b5baf0",
    "name": "Assemblearning - Modulo",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "603e9716e72f83001abd3877",
    "name": "Racing 2: Positions Gained",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "6040ef0b2fb9d20012ac33cc",
    "name": "Readable memory size",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "60d0466107cbbc004f6bb8e5",
    "name": "Windows 95 Product Key Validator",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "612b6b8b1fece800212bca22",
    "name": "Open a weak chest.",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games",
      "Exception Handling",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "6168ca0bc9bd9b00347cb26f",
    "name": "Finite automation 1: DFA Runner",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "6170bb91a74c8a0057648d84",
    "name": "HLS To RGB",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "61d1b3bcadae44003e8af9e3",
    "name": "Election Count",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "52f67c98172a8b6c4600001a",
    "name": "Create a JSON tree based on the dates contained within an array of filenames",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "53af266261023ff47d000234",
    "name": "A Lannister always pays his debts",
    "approved": false,
    "tags": [
      "Algorithms",
      "Optimization"
    ]
  },
  {
    "id": "53c8ce4a50fe705cae000483",
    "name": "Haskell List Comprehension (iii)",
    "approved": false,
    "tags": [
      "Refactoring",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "55046415decf05f45c0007dc",
    "name": "List Students by Class",
    "approved": false,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5598cb0b3e1af1fbfc00002f",
    "name": "Snakes and Camels",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "5599584f4a84b8838c000043",
    "name": "Simple decryption",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "55b5945c54b4010dcc000024",
    "name": "Reverse word order in place.",
    "approved": false,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Logic"
    ]
  },
  {
    "id": "56aefaaf429a2c4000000001",
    "name": "Nth Perfect Number",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "56b89b9b33dbe53e82000df8",
    "name": "Time Lap to Average MPH - (\"Indianapolis 500\")",
    "approved": false,
    "tags": [
      "Algorithms",
      "Dates/Time",
      "Data Types",
      "Puzzles",
      "Games",
      "Logic"
    ]
  },
  {
    "id": "57582423aad8429387001d68",
    "name": "Sort My Shopping",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Sorting",
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "578f7189149935a2880000d5",
    "name": "Multiply numbers with precision",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "57ed6632bd793e3d280003b4",
    "name": "Car salesmen talk too much",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "582cc36ecd858349b40000c5",
    "name": "Return TIMESTAMP from date",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "587ef906f297a6df7800005a",
    "name": "Phone Number",
    "approved": false,
    "tags": [
      "Algorithms",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings",
      "Data Types",
      "Logic"
    ]
  },
  {
    "id": "588882cc8a595fd897000503",
    "name": "What is love?",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "588ba8c4181ba7fe97000045",
    "name": "Some First  Primes With Two Digits",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "58b74c735297ddda470000cc",
    "name": "Marge array of objects",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "58d41a73a1111a21030000c3",
    "name": "Sashay, array!",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "591ce4c2e51f4a1aad000065",
    "name": "The Prime Probability Mystery ",
    "approved": false,
    "tags": [
      "Puzzles",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "597193cfd5db74ad15000094",
    "name": "Japanese numbers",
    "approved": false,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "59d662e0a25c8c67680000b7",
    "name": "Find the ship's paths",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5b76a5eeb3d9773e140000cd",
    "name": "Square-Squeek numbers ",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5c2857b1339de04e3b269597",
    "name": "One Line Task: 'for' fun",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "5d3e1629a967db001d984b51",
    "name": "Tennis  service:  should I serve on the left service box?",
    "approved": false,
    "tags": [
      "Puzzles",
      "Booleans",
      "Data Types"
    ]
  },
  {
    "id": "5e03b8e32964c8002d69f94f",
    "name": "Round Robin Sorting",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5e22b2b9f213800011c6207c",
    "name": "Robot Vacuum Cleaner",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5e888f493e8d20001f744935",
    "name": "Sexagesimal degree",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5ebad92cd3c72f00181a8a5a",
    "name": "Explosive Table",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5f678696c4ef7500189fc5e5",
    "name": "Cogs in the machine",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5fd45f50b526cd002bf110c7",
    "name": "Mysterious function - Guess what's going on here??",
    "approved": false,
    "tags": [
      "Puzzles",
      "Arrays",
      "Data Types",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "5fda527cfb41260010be13f8",
    "name": "A Python iterator for people scared of Exceptions.",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Iterators",
      "Control Flow",
      "Object-oriented Programming",
      "Basic Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5ff370c29cb8c3002193d387",
    "name": "How Many Pennies?",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Puzzles",
      "Games",
      "Strings",
      "Data Types",
      "Numbers"
    ]
  },
  {
    "id": "6022bb1e7239e800220b4678",
    "name": "Simplified Nim - AI",
    "approved": false,
    "tags": [
      "Algorithms",
      "Games",
      "Fundamentals",
      "Mathematics",
      "Logic",
      "Numbers",
      "Exception Handling",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "61700bd780f1da003f9e1065",
    "name": "The Zemour's Algorithm",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "520e613442dcc7fc76000028",
    "name": "Unit-Test Inception",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "55a65ad838c6381dfe000020",
    "name": "Extract currencyFormat / relevant information from given currencyString",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Parsing",
      "Algorithms",
      "Logic",
      "Utilities"
    ]
  },
  {
    "id": "55fab6d1f2e3f4b8f400000b",
    "name": "Music theory: Major chord matching",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "56a59ea1255aaed5d6000091",
    "name": "Changing Sequence",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "570e236e93214be19d000e1a",
    "name": "Sum of all products",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "57fece4108d102ea65000bf6",
    "name": "Practical Interview Prep: Binary Search Tree .push()",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Binary Search Trees",
      "Trees",
      "Binary",
      "Data Structures",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "580fc1afa3727ca79300011a",
    "name": "Time Conversion (Minutes to 12-Hour Clock)",
    "approved": false,
    "tags": [
      "Algorithms",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "58120969784095e1c8000090",
    "name": "Working from Home - Lunchtime Beer",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "58bdfc91f4ffb50f1900002b",
    "name": "Net Present Value (NPV) Function",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "58ec3e6f5741db935b0000aa",
    "name": "Clock hands angle",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "58ed06f0b43ea0e68d000050",
    "name": "Counting number of ones in an iterable using all() and any().",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5934423e5f390dd9ed0000e1",
    "name": "Slightly more comfortable Object.assign",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Objects",
      "Data Types"
    ]
  },
  {
    "id": "59565018bf41d39dc5000043",
    "name": "Merging Phone Numbers",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5972aa3538b1e39c58000038",
    "name": "Vigilante Lists",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "59b009678173ab2ade000105",
    "name": "Save Private Brain",
    "approved": false,
    "tags": [
      "Puzzles",
      "Object-oriented Programming",
      "Programming Paradigms",
      "ES2015",
      "Babel",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "5a539360145c465f8b00030f",
    "name": "Ramda #2 - Counting stars",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Utilities",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Lists",
      "Data Structures",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5a90140efd8c06df340000bf",
    "name": "Self powers",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5ac64cb8a1ad6fba5a0001b3",
    "name": "A New Era (Japanese Calendar Conversion)",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Numbers"
    ]
  },
  {
    "id": "5ad50fa52f3981b25d000154",
    "name": "Can the Premier League leaders be caught?",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5b2ada0e42b27ee1be00005c",
    "name": "Sum of numbers",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5b74532131ef05150d000109",
    "name": "One Line Task: Pyramid of Spheres",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Geometry",
      "Algebra"
    ]
  },
  {
    "id": "5c66de39845aab0001cb4263",
    "name": "Shorten composite Full Name",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5c75a9ac1075d600129986fc",
    "name": "Making plain objects iterable ",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Basic Language Features",
      "Arrays",
      "Data Types",
      "Objects"
    ]
  },
  {
    "id": "5cd2cf0d0734c90001606d36",
    "name": "Truncate string to first n words",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5ce6f000089e8c0018fff638",
    "name": "Find  heroes",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5d41d87bb29859002690d4fd",
    "name": "Counting Digits",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Hashes",
      "Data Structures"
    ]
  },
  {
    "id": "5d4f4521b7c3ea000db68e27",
    "name": "Ask the Audience",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Arithmetic",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5dd6e8ce97133b001851a565",
    "name": "Polygon Area",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5e362912a9ca16002bad11e6",
    "name": "Tank Wars",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5e477a54406d360001bc10f6",
    "name": "Decoding  a logic transmission",
    "approved": false,
    "tags": [
      "Algorithms",
      "Decoding",
      "Logic"
    ]
  },
  {
    "id": "5f39707ee36fd40019c8a834",
    "name": "Cricket Scores - Parse Bowling Figures",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5f5894ee4e485f00287a7040",
    "name": "Tic-Tac-Toe Checker (Harder)",
    "approved": false,
    "tags": [
      "Algorithms",
      "Optimization",
      "Performance"
    ]
  },
  {
    "id": "5fd5f5603593df000d290df0",
    "name": "La La Land [code golf]",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "6004a38c85f6180008bf0757",
    "name": "Sarrus Fake Determinant",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "60633afe35b4960032fd97f9",
    "name": "Approximate solution of differential equation with Runge-Kutta 4",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "610eac59e3ed8c00075fcc9d",
    "name": "Collatz conjecture counter for big numbers",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "52887a962021f9bbfe000009",
    "name": "Count IPv6 Addresses (ruby only)",
    "approved": false,
    "tags": [
      "Algorithms",
      "Networks",
      "Logic"
    ]
  },
  {
    "id": "545387c50294936959000649",
    "name": "Polynomial's Root",
    "approved": false,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "549f5dbebfabdd79d700051d",
    "name": "Lexicographic Rank of Permutation",
    "approved": false,
    "tags": [
      "Algorithms",
      "Permutations",
      "Logic",
      "Strings",
      "Data Types",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "54cec50f975ca6388a000b36",
    "name": "Binary Tree to Ordered List",
    "approved": false,
    "tags": [
      "Algorithms",
      "Trees",
      "Data Structures",
      "Logic"
    ]
  },
  {
    "id": "559c50d2cd002d4c24000035",
    "name": "Multiperfect Number",
    "approved": false,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Integers",
      "Logic"
    ]
  },
  {
    "id": "55ea3c0cd141030b7c000113",
    "name": "Round and Padded",
    "approved": false,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Numbers"
    ]
  },
  {
    "id": "56017e16be7b7ab4ea000078",
    "name": "Your Mentors Film Library (Part 1)",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Hashes",
      "Data Structures",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Iterators",
      "Control Flow",
      "Metaprogramming",
      "Advanced Language Features"
    ]
  },
  {
    "id": "5620ff7c5a045d448c000059",
    "name": "Triangulate a konvex polygon",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "562ebc58685582a03800002e",
    "name": "Number of Palindromic Substrings",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types",
      "Search"
    ]
  },
  {
    "id": "56e226f0b2ed121b7d00016a",
    "name": "Pops and shifts",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Sparse Arrays",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5718d0d5938fcd76a6001050",
    "name": "How much doas a tankful in USA",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "571a9257196bb04933000d78",
    "name": "splitAny",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "57e9304597a059d1a2000a9c",
    "name": "Holiday IX - Transit Leg Massage",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "57f65eec6730511aad00017f",
    "name": "Combinations",
    "approved": false,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Permutations",
      "Logic"
    ]
  },
  {
    "id": "58169f95dae5a52ed4000077",
    "name": "SQL Basics: Advanced PIVOTING data",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5824daf7c4d7f388600002a3",
    "name": "Flatten Object",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Objects",
      "Data Types",
      "ES2015",
      "Babel"
    ]
  },
  {
    "id": "583615f52fb0badde30000fe",
    "name": "Doubly Linked List - Remove",
    "approved": false,
    "tags": [
      "Algorithms",
      "Linked Lists",
      "Lists",
      "Data Structures",
      "Logic"
    ]
  },
  {
    "id": "583b353ac233418fbb000027",
    "name": "Music App Feature!",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Sorting",
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "584c8895bd16068eb400008b",
    "name": "Integer sum (with restrictions)",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5874b2a13793a344b50000ad",
    "name": "Sudoku solver #3",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "588fa08b1223c3ee42000062",
    "name": "Create a password hashing function.",
    "approved": false,
    "tags": [
      "Algorithms",
      "Cryptography",
      "Security",
      "Games",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "58dfcb8c010a94e4f700004d",
    "name": "Length of words",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58e7c470de7139d09900002e",
    "name": "Unofficial  FCC Challenge -- Basic Algorithm Scripting -- Seek and Destroy",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "59662bd01a49677f5200019a",
    "name": "Next Largest Value  (by rearranging the last digit and the last by one if neccessary)",
    "approved": false,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "597a0293fd74f59b170000c8",
    "name": "Convert Numbers to a 32-bitmap Hex ASCII Representation",
    "approved": false,
    "tags": [
      "Algorithms",
      "Bitmaps",
      "Maps",
      "Data Structures",
      "Binary",
      "Bits"
    ]
  },
  {
    "id": "5980aaeb410cc67924000009",
    "name": "Non-consecutive Pairs",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5a80fee4fd8c06564b0000b5",
    "name": "Custom Rounding Rule",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5a9433fe8168ccd0980025a0",
    "name": "Oddball Index Delete",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5ace35dc307eb294300000b4",
    "name": "Crushing blows and blushing crows",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5b9d1b74d6b09fc9ee000375",
    "name": "Grouping consecutive array elements without changing the elements order based on the given condition",
    "approved": false,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5bf6a23af8c527c2f0001d94",
    "name": "Find The Rabbit",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Fundamentals"
    ]
  },
  {
    "id": "5cc5894c44a32d00134b6a02",
    "name": "RGB Colour changer",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5cf870f6721150002638160c",
    "name": "Fast Prime Test",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Performance"
    ]
  },
  {
    "id": "5d0d4ebbc843440022bfd9c5",
    "name": "Beat the odds",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5d38bf7a0e004b0027bc9bc0",
    "name": "Simple Julian date",
    "approved": false,
    "tags": [
      "Algorithms",
      "Dates/Time",
      "Data Types",
      "Logic",
      "Numbers",
      "Mathematics",
      "Arithmetic"
    ]
  },
  {
    "id": "5d943c7d8e0385cd092c4553",
    "name": "The Dark Site Of The Language - One Is Not One",
    "approved": false,
    "tags": [
      "Bugs",
      "Basic Language Features",
      "Fundamentals",
      "Data Types"
    ]
  },
  {
    "id": "5dd993e2553aa100108deb1b",
    "name": "Folding trees",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5de81f59365640002319482c",
    "name": "Find next greater number with disjoint  set of digits",
    "approved": false,
    "tags": [
      "Bugs",
      "Algorithms",
      "Logic",
      "Arithmetic",
      "Mathematics",
      "Numbers",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5de83380b2079b0028568f25",
    "name": "Arithmetic Sequence - find hidden",
    "approved": false,
    "tags": [
      "Algorithms",
      "Arithmetic",
      "Mathematics",
      "Logic",
      "Numbers",
      "Sequences",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5e5d10fbdeea240029487b94",
    "name": "Call The Knights!",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5e9c773f33e83600146338d2",
    "name": "Length Factorial Encryption",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Encryption",
      "Algorithms",
      "Cryptography",
      "Logic",
      "Security",
      "Parsing",
      "Strings"
    ]
  },
  {
    "id": "5e9ea3a891e843003318917c",
    "name": "Chinese Pupil Math Olympic 01: Cows Eat Grass",
    "approved": false,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5ea6f5d99fe5a2001e14ba13",
    "name": "Hamiltonian cycle : create one !",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "5f177baa0910a700323463b3",
    "name": "Merge Intervals",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5fbc63049db711002b876533",
    "name": "Chicken crossing the road",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games",
      "Fundamentals"
    ]
  },
  {
    "id": "5fdf1bfb6d01fe001633849b",
    "name": "Help Vishnu predict the rungs ⚓︎",
    "approved": false,
    "tags": [
      "Puzzles",
      "Numbers",
      "Data Types",
      "Games",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "603a1f484222c3002b3fbf35",
    "name": "Weird Array Initialization",
    "approved": false,
    "tags": [
      "Puzzles",
      "Arrays",
      "Data Types",
      "Games",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Fundamentals",
      "Programming Paradigms"
    ]
  },
  {
    "id": "60589f5ee61f07002e761183",
    "name": "Group your pupils",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "6074e2d9dad22200190a25c4",
    "name": "Story #4 - Fuel Up!",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "60ea5cf06df55a0006c938c0",
    "name": "iTube",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Sequences",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "61026860c135de00251c6a54",
    "name": "Decode a cipher - simple",
    "approved": false,
    "tags": [
      "Puzzles",
      "Ciphers",
      "Algorithms",
      "Cryptography",
      "Logic",
      "Security",
      "Decoding"
    ]
  },
  {
    "id": "6147637b7fb97d003ba99df0",
    "name": "Jimmy's Car Leasing",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "614e6d96df4cfb00345f8484",
    "name": "Borda count",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "61cd9bb22eb648002dc5ed6a",
    "name": "Side of the rhombus",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "61f036046af5b4002842bc36",
    "name": "Schwerer Gustav",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "62164f4c914143005416d52e",
    "name": "In a temper!",
    "approved": false,
    "tags": [
      "Puzzles",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "526993d710342801b6000e85",
    "name": "Close only counts in Floats and Grenades",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "52cda7e28d673a597c00091a",
    "name": "Identifying identifiers",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "537544cb2993de6dd1001afa",
    "name": "Calculate number of inversions in array in linearithmic time",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "53eb6c17d37aab0857000b03",
    "name": "Dynamic Advertorial  Headlines",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "54cab79a4fdf30341b00015f",
    "name": "string to operation chain without eval [JS]",
    "approved": false,
    "tags": [
      "Refactoring"
    ]
  },
  {
    "id": "561064d9326fbd159f00011d",
    "name": "Set for JavaScript(Hello ES-2015)",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Objects",
      "Data Types"
    ]
  },
  {
    "id": "564f736ab4f5304bd700006a",
    "name": "So Basic - iteration II",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56f1e42f0cd8bc1e6e001713",
    "name": "Simple RSA Implementation",
    "approved": false,
    "tags": [
      "Algorithms",
      "Cryptography",
      "Security",
      "Logic",
      "Encryption",
      "Arithmetic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "578f472c90f2bb869f0003be",
    "name": "Easter Sunday",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "57e80163f11c64130c000076",
    "name": "Arrays in Arrays to Objects within Objects",
    "approved": false,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Objects",
      "Logic",
      "Conditional Statements",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "57fe37f0a5372e226d00017c",
    "name": "Text editor feature!",
    "approved": false,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Logic",
      "Arrays"
    ]
  },
  {
    "id": "581e09652228a337c20001ac",
    "name": "Volume of the Largest Cube that Fits Inside a Given Cylinder",
    "approved": false,
    "tags": [
      "Puzzles",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5821f340b81f70a689000729",
    "name": "Those élégantes unïcôdes, hiding in code wars...",
    "approved": false,
    "tags": [
      "Fundamentals",
      "ASCII",
      "Character Encodings",
      "Formats",
      "Unicode"
    ]
  },
  {
    "id": "582fe441fd25e9773e0009cb",
    "name": "Unicode Math",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Unicode",
      "Character Encodings",
      "Formats"
    ]
  },
  {
    "id": "5874c8cbee745a590c000038",
    "name": "Sudoku solver #4",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "58868c05aad5c5a1ba002040",
    "name": "easy peasy - smallest input",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "58b0012631d3a22e5e000050",
    "name": "the hidden thief",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58ca6c1a979eea5d43000173",
    "name": "Find Volume of Cuboids Using Similarity",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "58e7b16936d4bbed5c0001b2",
    "name": "Unofficial  FCC Challenge -- Basic Algorithm Scripting -- Falsy Bouncer",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "58ebfb1af7cda121d5000037",
    "name": "Random Value in a Weighted List",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "591561059f405684b4000081",
    "name": "Generate combinations",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "594153d346e38d8017000060",
    "name": "Will the Brick Sink?",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Physics",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Geometry",
      "Algebra"
    ]
  },
  {
    "id": "59fda5a78ba914e78a000065",
    "name": "Find number of squares in string of maximum 2 digits",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5a6c2153ba1bb5d38f000040",
    "name": "Broken scales",
    "approved": false,
    "tags": [
      "Puzzles",
      "Fundamentals"
    ]
  },
  {
    "id": "5ba575f239d1afa14c000052",
    "name": "Train your skills in writing/reading from files while using classes",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Functions",
      "Control Flow",
      "Dynamic Arrays",
      "Arrays",
      "Functional Programming",
      "Data Types",
      "Declarative Programming",
      "Vectors"
    ]
  },
  {
    "id": "5c546a05ad5f3f0001f26d3f",
    "name": "Browser History",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5c8318a01da384000e426ed3",
    "name": "Einstein Triangle of Knowledge",
    "approved": false,
    "tags": [
      "Puzzles",
      "Algorithms",
      "Logic",
      "Games"
    ]
  },
  {
    "id": "5c83c3cd776dec01b424a1d1",
    "name": "Convert recurring decimal to fraction",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5c9b73e79ee4186693dff82c",
    "name": "Bob's Secret Cipher",
    "approved": false,
    "tags": [
      "Puzzles",
      "Ciphers",
      "Algorithms",
      "Cryptography",
      "Logic",
      "Security",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5cb63bf98838540012780907",
    "name": "Valid GB number plate?",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5d04120dcb266c001c77a6b0",
    "name": "Find the quadratic equation",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5d3f49e1af115a000141fa4e",
    "name": "Thing describer",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Defensive Programming",
      "Programming Principles"
    ]
  },
  {
    "id": "5d6284022ec54100018137e3",
    "name": "NASM Basics: The bigger one #1",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5d79b767760cfd00262d3a62",
    "name": "Smart Jerry",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5dcb8729230f4100019d62a1",
    "name": "Base 2½",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5e0a089cd77216002314bfb6",
    "name": "Friends with Mangoes",
    "approved": false,
    "tags": [
      "Algorithms",
      "Trees",
      "Data Structures",
      "Search",
      "Logic"
    ]
  },
  {
    "id": "5e386b25ea93c40015d05314",
    "name": "The Seven Bridges of Königsberg",
    "approved": false,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic"
    ]
  },
  {
    "id": "5e3c6ee0fd5dde00161d436f",
    "name": "The Boring Problem",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "5e4167a8af934e0010b55c10",
    "name": "Encrypted Code",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5e44dde5c98ba40023539764",
    "name": "Reverse words of a big string",
    "approved": false,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5e8dd24b06bad5001652e238",
    "name": "Compose Two Lambdas!",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Metaprogramming",
      "Advanced Language Features"
    ]
  },
  {
    "id": "5e8e8ab706bad500165575b9",
    "name": "Odd-squares traversal",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Logic",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5e936757dd57f3000f846f38",
    "name": "#2 • The dark sock of the drawer",
    "approved": false,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Arithmetic"
    ]
  },
  {
    "id": "5e95a96cc9edd200281488b7",
    "name": "Searching for Bulls",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games",
      "Permutations",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5ec15ab4cb77f50001300cad",
    "name": "COVID-19",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "5fb2e48b42791c0008818ac5",
    "name": "Even numbers swaps (with restrictions)",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "5fd7b07f60d2d0000de86436",
    "name": "One Line Task: Valid Brackets ",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "5fe5be1d9d18fc0014e0c622",
    "name": "Weird Numbers",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Lists",
      "Data Structures",
      "Arrays",
      "Map/Reduce"
    ]
  },
  {
    "id": "60146d31c7c631000e5b8a73",
    "name": "Basic Probability: Rolling Dice",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Logic",
      "Mathematics",
      "Algorithms",
      "Numbers"
    ]
  },
  {
    "id": "602d364a8d20cf0026f3a499",
    "name": "How long will you be able to breathe ?",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "60e53f78eefbd900068dc851",
    "name": "Decimal Separator Localization",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "614e2d9c654ec60008a2fb38",
    "name": "Electronics #2. E12 Series Resistors Values",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "61b008cc87f3400008a5d770",
    "name": "Check sum of X group in matrix.",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "61ba0ba66aac5e0016519e3a",
    "name": "Digit's Square in a String",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "61c201eaf0030b001828cc88",
    "name": "Is the flight safe?",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "6209f3c9ccddd7000fca15f5",
    "name": "Spy Games #001 - Message from an agent",
    "approved": false,
    "tags": [
      "Puzzles",
      "Fundamentals",
      "Games",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "6222647274f7e4081fa51bbc",
    "name": "QWERTY Lexicographical Order ",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Sorting",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "527b40435529dc624f000257",
    "name": "Doubly Linked List",
    "approved": false,
    "tags": [
      "Algorithms",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Logic"
    ]
  },
  {
    "id": "5455306802fc70dbc10007c2",
    "name": "Football Fever!",
    "approved": false,
    "tags": [
      "Algorithms",
      "Games",
      "Logic"
    ]
  },
  {
    "id": "5498e5ad66720b1d56000686",
    "name": "Custom Regex Language",
    "approved": false,
    "tags": [
      "Algorithms",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings",
      "Recursion",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "5500f2a3fed40fa2cd0005fe",
    "name": "CIDR block range calculation",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types",
      "Formatting",
      "Utilities",
      "Networks",
      "Binary",
      "Bits"
    ]
  },
  {
    "id": "5505209408b86fa225000672",
    "name": "Square Huge Numbers",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Puzzles",
      "Games",
      "Algebra",
      "Data Types"
    ]
  },
  {
    "id": "55182e34a5808b90f4001335",
    "name": "Gaussian arithmetic",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Arithmetic",
      "Integers"
    ]
  },
  {
    "id": "5569a294ca3392d05200017f",
    "name": "Random triplets test generator",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "559aefc44ab98cfbe2000086",
    "name": "Transpose Pachelbel's 'Canon in D'",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "561c06b3204dd606a9000037",
    "name": "Christmas Anticipation",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "562a5266c815be8311000018",
    "name": "Balancing Ratios",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Arrays",
      "Mathematics",
      "Data Structures",
      "Integers"
    ]
  },
  {
    "id": "5646c8e974eef351fd000021",
    "name": "Sum of sequence",
    "approved": false,
    "tags": [
      "Algorithms",
      "Sequences",
      "Arrays",
      "Data Types",
      "Arithmetic",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5671291728dbefb6af000041",
    "name": "Add and Subtract Combinations",
    "approved": false,
    "tags": [
      "Algorithms",
      "Arithmetic",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "56799c3eff49dd6cb0000049",
    "name": "Divide two numbers without using the '/' operator and return the result to a specified number of decimal points",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5691c4b7e3112a068a000044",
    "name": "RuplesJS #4: String Formatting",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56a5491471b6f0d40a000001",
    "name": "Clue - Esoteric programming #4",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Esoteric",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Objects",
      "Data Types"
    ]
  },
  {
    "id": "56e1818a2bb22432590013ec",
    "name": "Heartbeat Status Montor",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56f9aa3aba792a0970001ad9",
    "name": "Optimize me! DD + ceil",
    "approved": false,
    "tags": [
      "Refactoring",
      "String Formatting",
      "Formatting",
      "Algorithms",
      "Logic",
      "Strings",
      "Optimization"
    ]
  },
  {
    "id": "574a203f289cfb5e8d001e17",
    "name": "Multiple Shots at Victory",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "57d16cb5264276c59c000176",
    "name": "I guess this is a 6kyu kata #3: Trim the Christmas tree",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57e32bb7ec7d241045000661",
    "name": "Diophantine Equation Solver",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Algorithms",
      "Logic",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Optimization",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "57eb844ff670e99d9b0001fa",
    "name": "Decode function",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57f53d1d7763f27af3000048",
    "name": "Breadth-First DOM Traversal",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "580f9cd6a0130881b6000021",
    "name": "Crypto-currency Miner",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5819c6c05d2358a3dc000096",
    "name": "Fibonacci sequence with Linq",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "585fc200db20cf20ab00018a",
    "name": "Maximum 2d subarray sum",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Dynamic Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5874faf4231f90fac8000137",
    "name": "Sudoku solver #5",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "587aadea872647618600005d",
    "name": "Go Shopping",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "589027256c133e73fe0000b5",
    "name": "Too Many Cats",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "589f50b55df162a6f4000032",
    "name": "Print all numbers and replace all `0` at `*`.",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58dba98cfe181abb0b000015",
    "name": "Easy hacking #1",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games",
      "Security"
    ]
  },
  {
    "id": "58e3cf5b1efbd998af000113",
    "name": "Unofficial  FCC Challenge -- Basic Algorithm Scripting -- Find the Longest Word in a String ",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "58eb9e4eeb6e15bb4900010c",
    "name": "Count all primes in a String",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5907856bcece22eb6b000099",
    "name": "Code Breaker #1 ",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "592f34d27801826d150000ab",
    "name": "Snake Draft",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5965446f33b9084a05000092",
    "name": "Traffic Lights Series - Part 2",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59d56fa2881b654dd2001b8c",
    "name": "composite + prime characters",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5a095ad0ffe75fb656000021",
    "name": "CTCI 1.5 One Away",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5a0aca7dffe75fb93d000056",
    "name": "Boolean array generator",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a86dc05fd5777891e00007b",
    "name": "Spy Agent",
    "approved": false,
    "tags": [
      "Puzzles",
      "Cryptography",
      "Security",
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5a8cf06457c5629019000023",
    "name": "Slow Looping",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Recursion",
      "Algorithms",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science",
      "Promises",
      "Design Patterns",
      "Design Principles",
      "Asynchronous",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5abce4e520746ba4c2000194",
    "name": "Deduplicate a sentence: remove remove duplicate words",
    "approved": false,
    "tags": [
      "Algorithms",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings"
    ]
  },
  {
    "id": "5b59a841beb865c9550000b8",
    "name": "What Happened To My Object?",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games",
      "Objects",
      "Data Types"
    ]
  },
  {
    "id": "5b6c0d0e51f0b3ae050000e8",
    "name": "Nth Fibonacci number [code-golf]",
    "approved": false,
    "tags": [
      "Algorithms",
      "Performance",
      "Sequences",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5bc228f4c27eb9e5cf000112",
    "name": "People’s Travel Sorter (simplified)",
    "approved": false,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5bd4c8977645b9a02d00018c",
    "name": "CS 208 - Clojure Insert",
    "approved": false,
    "tags": [
      "Algorithms",
      "Binary Search Trees",
      "Trees",
      "Binary",
      "Data Structures"
    ]
  },
  {
    "id": "5bd5607c1c730fe99400000f",
    "name": "All divisors of large numbers",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5c9e2c4561096e001a698440",
    "name": "Soccer Fixtures Results Table",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5cd99998efd18d0001cd47ce",
    "name": "Stair number [easy]",
    "approved": false,
    "tags": [
      "Algorithms",
      "Dynamic Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5cfca6670310c20001286bc8",
    "name": "Word Spiral Permutations Generator",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5cfe421acb266c00244fd7ea",
    "name": "Number range",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5d7c37404cd01b001a90e469",
    "name": "Write reusable code with generics",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5d871b4cdc2362000de23a6f",
    "name": "Parse the Reporting Week",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types",
      "Formatting",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5da1d0bd7c498d00171c3e10",
    "name": "How long the longest",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5da8f1c988b34d0013dcd038",
    "name": "Boiler Plate",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5e0daf7673aa2c002ab57cd8",
    "name": "Create an Evaluator Function Creator",
    "approved": false,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Parsing",
      "Logic",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5e2833ce0acfbb001f3280fd",
    "name": "Sum of all  multiples for arbitrary factors",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5e4073f990bbd20001adb72a",
    "name": "Fix unbalanced parentheses",
    "approved": false,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Recursion",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "5e55e3c077606e0035057910",
    "name": "Turtle Graphics",
    "approved": false,
    "tags": [
      "Algorithms",
      "SVG",
      "Formats",
      "Graphics",
      "Parsing",
      "Logic",
      "Strings"
    ]
  },
  {
    "id": "5e614d3ffa2602002922a5ad",
    "name": " Odd-Even Compositions",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Performance",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "5ea18758cd8a3e00235f2438",
    "name": "Calculating the Multinomial Distribution",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5ec985233fe9d8002c86420e",
    "name": "Turing Machine Emulator",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Turing Machines",
      "Computational Science",
      "Theoretical Computer Science",
      "State Machines",
      "Design Patterns"
    ]
  },
  {
    "id": "5eeba6dc7255eb000f3dab7f",
    "name": "Is this number a magic palindrom?",
    "approved": false,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5f3b7f8568cd2b001f95e7ef",
    "name": "Base 75",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5f7f68b6cb71c1000f2a3b11",
    "name": "What will the date stamp be?",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5fdbd3b0c30ce90012a29e3a",
    "name": "Squared functions",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5fe14713864088002b4ffee3",
    "name": "Number of Triangles in an Finite N-sized Triangular Tiling",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "601a484f941b2e000debfd18",
    "name": "Floating point in base 2",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "6060b819f578dc001a8c044c",
    "name": "Story #2 Moon Rise",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games",
      "Algorithms",
      "Logic",
      "Fundamentals"
    ]
  },
  {
    "id": "6139d28d6cb50f00149adc91",
    "name": "Custom chess board",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "616443ec8521b7000761cab5",
    "name": "Perlin Noise",
    "approved": false,
    "tags": [
      "Algorithms",
      "Advanced Language Features",
      "Fundamentals",
      "Strings",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "61a1b6973411ca000fad026e",
    "name": "Affine Cipher",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "61a9fffbc48e8b005c854600",
    "name": "Broken calendar",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "61e98767af14521397104bfc",
    "name": "Generalized Cipher Class",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Ciphers",
      "Algorithms",
      "Cryptography",
      "Logic",
      "Security",
      "Encryption"
    ]
  },
  {
    "id": "61ea23ebb07459202178b1d0",
    "name": "Where is the flag?",
    "approved": false,
    "tags": [
      "Puzzles",
      "Security",
      "Games"
    ]
  },
  {
    "id": "52ed55ac3fb42965c0000107",
    "name": "Elevator with call buttons",
    "approved": false,
    "tags": [
      "Fundamentals",
      "State Machines",
      "Computational Science",
      "Theoretical Computer Science",
      "Design Patterns",
      "Conditional Statements",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5305ea3ddc88098f570003aa",
    "name": "Battery Charge!",
    "approved": false,
    "tags": [
      "Algorithms",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Basic Language Features",
      "Fundamentals",
      "Data Types"
    ]
  },
  {
    "id": "543346bb913a6589fb000744",
    "name": "Simple Linear Regression",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5474ad03b2bc28ae0d00103f",
    "name": "Roulette Bet Calculator",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Games",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "547a2f6090db209d6e000d22",
    "name": "Big Integer Modulo II",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "549d55b1c36a0251ea000780",
    "name": "Prepare for the Easter!",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Dates/Time"
    ]
  },
  {
    "id": "54c2d10ffb7da04f04000bca",
    "name": "The ugly truth about reduce (iii)",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "54ddd7a35440d8be0d0003c2",
    "name": "Line Segments Intersection Point",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5518503beec78768170001c0",
    "name": "Shortest Common Supersequence For Two Strings",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5525507f2142d7947d001034",
    "name": "The Enigma Machine - Part 4: A Rotor Part II",
    "approved": false,
    "tags": [
      "Algorithms",
      "Fundamentals"
    ]
  },
  {
    "id": "55739a8a073216ae6b0000a4",
    "name": "Flight incident probabilities",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "55abfba8f5ed0e9eec00004a",
    "name": "JSON Stringify",
    "approved": false,
    "tags": [
      "Algorithms",
      "JSON",
      "Formats"
    ]
  },
  {
    "id": "55e8b49ba7f4fb4a79000064",
    "name": "object to xml - xml #2",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games",
      "Arrays",
      "Data Types",
      "ES2015",
      "Babel"
    ]
  },
  {
    "id": "56627b1d37bc4939ed00000b",
    "name": "Polybius Square",
    "approved": false,
    "tags": [
      "Algorithms",
      "Cryptography",
      "Security"
    ]
  },
  {
    "id": "566eca81b1a2cc3323000010",
    "name": "Compound interest calculator",
    "approved": false,
    "tags": [
      "Algorithms",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms",
      "Objects",
      "Data Types"
    ]
  },
  {
    "id": "567191e67ec095fd2e00001e",
    "name": "Can you create an Ouroboros?",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "ES2015",
      "Babel"
    ]
  },
  {
    "id": "5672205ba9ae893c80000027",
    "name": "Debug Tic-Tac-Toe Checker",
    "approved": false,
    "tags": [
      "Bugs",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "56b5f98c02a30355ce000d90",
    "name": "Poor syachiku's best choice",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "56d1c62bdffdabacad000998",
    "name": "And the Mosckar goes to…",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56e0e065ef93568edb000731",
    "name": "Thinking & Testing : I want to become diabetic ;-)",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5710751568340a8071000a5a",
    "name": "The Inside of a Triangle",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Geometry",
      "Algebra",
      "Mathematics"
    ]
  },
  {
    "id": "573206f19a231dad96002196",
    "name": "Count The Zeros: 1  to n",
    "approved": false,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Integers",
      "Fundamentals",
      "Logic",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5755222afbe6333e3c000088",
    "name": "Base Factorial Converter",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "578423b2b35aa35867001283",
    "name": "Multi-dimensional matrices",
    "approved": false,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Recursion",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "57a20f88e298a7fd49000bd8",
    "name": "Simple transposition class",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Cryptography",
      "Security",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "57ae56837cb1f3550500025e",
    "name": "Gym Bike Calorie Calculator",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "57ff389608d1023524001327",
    "name": "Compare by value",
    "approved": false,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Objects",
      "Data Structures"
    ]
  },
  {
    "id": "588c83e96a297f643a00001b",
    "name": "Injection",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Bash",
      "Security"
    ]
  },
  {
    "id": "58bc149c237d7ed6160000d1",
    "name": "Gammas text manipulation 1: Detecting errors using regexp",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "58e7cfc361d9ddbbe80000ef",
    "name": "Unofficial  FCC Challenge -- Basic Algorithm Scripting -- Where Do I Belong",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5951f7b6e99cf2dfbd0000df",
    "name": "Partially equal objects",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Objects",
      "Data Types"
    ]
  },
  {
    "id": "595a49e1291e4f61b70000ad",
    "name": "calculate a ^ b % m",
    "approved": false,
    "tags": [
      "Algorithms",
      "Performance",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "598028da12f582ff4c000060",
    "name": "Linda's speed test",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types",
      "Arrays",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "59a5a436589d2a3e59000036",
    "name": "Natural Log Approximator",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Performance"
    ]
  },
  {
    "id": "59ea5dcdb2c32c86e00000b7",
    "name": "Reverse Mode",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Conditional Statements",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "59f95cc432b8b97d94000086",
    "name": "Alternating Operators",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5a1e8697ffe75f71ae0000b4",
    "name": "Make ruby 'match'  output similar to js 'match' return",
    "approved": false,
    "tags": [
      "Bugs",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings",
      "Basic Language Features"
    ]
  },
  {
    "id": "5a28bb36e1ce0eac7900001b",
    "name": "Why is naming so hard?",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5a5aa75ee626c576b600009d",
    "name": "Common interests",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5a84335ffd57772b44000078",
    "name": "Aurecchia Mathematical question chapter 1",
    "approved": false,
    "tags": [
      "Puzzles",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "5aaf71d8a049205e7c000b6e",
    "name": "There must be only one...",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Hashes",
      "Data Structures",
      "Booleans",
      "Data Types",
      "Objects"
    ]
  },
  {
    "id": "5b7359ecff788c36f1001562",
    "name": "Filter String (similar to advanced search)",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Logic",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5ba58763924c945f950000a5",
    "name": "RDS (Radio Data System) Splash Text Concatenation",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5bdfc4d718bcfdbe3a00010d",
    "name": "The King lives! the Elvis operator",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Data Types",
      "Operators",
      "Booleans"
    ]
  },
  {
    "id": "5c4ec92a77c0070008195ff0",
    "name": "Not 3 in a row",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "5cde6f28e0d20e001ff403b9",
    "name": "Endless Timestamp Conversion",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5d129652fdfc750001cd568a",
    "name": "Choose new Colors for Company Logo",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5d1d1e6606f92a000e479b25",
    "name": "Shortest string",
    "approved": false,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5d351fd4eb2747000e23829f",
    "name": "Subset Sum Problem",
    "approved": false,
    "tags": [
      "Algorithms",
      "Dynamic Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5d628adb18198b002a2f23a5",
    "name": "The two troublesome ones",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5db23ce73ec379001c6f9b84",
    "name": "Advanced Grade Marks Sorting",
    "approved": false,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic",
      "Basic Language Features",
      "Sorting",
      "Testing"
    ]
  },
  {
    "id": "5dc09e9d2f4eb90001d0c7bc",
    "name": "Pyramid Negative Space",
    "approved": false,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Geometry",
      "Algebra",
      "Games"
    ]
  },
  {
    "id": "5de2b8238c47250016ab5dee",
    "name": "Equational reasoning with scanl",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Recursion",
      "Algorithms",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "5e09bdca73aa2c0025b26e97",
    "name": "Vector Swizzling",
    "approved": false,
    "tags": [
      "Algorithms",
      "Dynamic Arrays",
      "Arrays",
      "Functional Programming",
      "Data Types",
      "Declarative Programming",
      "Programming Paradigms",
      "Vectors"
    ]
  },
  {
    "id": "5e0f1c0d0d5bc90016c8b04b",
    "name": "Worm adventures (Part 1)",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Data Structures"
    ]
  },
  {
    "id": "5e45119cfd130c0010caa1a5",
    "name": "Basic Optimization - Collatz Sum Sequence",
    "approved": false,
    "tags": [
      "Algorithms",
      "Sequences",
      "Arrays",
      "Data Types",
      "Optimization"
    ]
  },
  {
    "id": "5e49844f77606e0030d6d23c",
    "name": "Square root of a Double",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5e6fb161b6a0310012b38c50",
    "name": "Find the best intern. (Optimal Stopping Problem)",
    "approved": false,
    "tags": [
      "Algorithms",
      "Higher-order Functions",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Statistics",
      "Data",
      "Logic"
    ]
  },
  {
    "id": "5e8c4b4a968b34002d4b6534",
    "name": "Show that a unital commutative ring cannot have exactly 5 units.",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5ebeaec6cbb9c5000fd82c41",
    "name": "Teaching the simplifier about divisibility by three",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5f6bfbfc56d868000fd9f9dc",
    "name": "Book a meeting",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Dates/Time"
    ]
  },
  {
    "id": "5fa15c45f6126e002e7737eb",
    "name": "Roman Numerals",
    "approved": false,
    "tags": [
      "Algorithms",
      "SQL",
      "Databases",
      "Information Systems",
      "Data",
      "Logic",
      "Encoding",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5ff84280a26abf0021c20a9f",
    "name": "Pirates and bullions treasure puzzle",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games",
      "Logic"
    ]
  },
  {
    "id": "6001524cf7cb88000e675acb",
    "name": "Embrace the puzzle",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games",
      "Algorithms",
      "Logic",
      "Sequences",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "604e12b43948440008d41bdc",
    "name": "Names Metro Stations",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Arrays",
      "Strings"
    ]
  },
  {
    "id": "6069685fe9e3d600307660c2",
    "name": "Building the Ladder to Heaven",
    "approved": false,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Logic",
      "Lists",
      "Data Structures",
      "Fundamentals"
    ]
  },
  {
    "id": "6086a45ce8af5f005599dc59",
    "name": "Function extensionality and explicitness",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Theorem Proving",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "60958c4f399bb3003123d94d",
    "name": "Logarithm simplifier",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "60d0e9db55d3a40017f1062a",
    "name": "Return a solved array",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "60f90cb18b940b0028efb29d",
    "name": "ADC data formatting",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Formatting",
      "Algorithms",
      "Logic",
      "Binary",
      "Arithmetic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "61167de388498e0033b6376f",
    "name": "Compromised Parthenon",
    "approved": false,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Geometry",
      "Algebra",
      "Games"
    ]
  },
  {
    "id": "6130b807bdaec90030f30269",
    "name": "Compile-time maximum value in sequence finder!",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Metaprogramming",
      "Programming Paradigms",
      "Advanced Language Features",
      "Sequences",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "613b369bd0b62f003e8b8c03",
    "name": "Format phone number - Mobile App",
    "approved": false,
    "tags": [
      "Algorithms",
      "Formatting",
      "Logic"
    ]
  },
  {
    "id": "614f18006ad6c4003197970c",
    "name": "Bitwise logical negation ",
    "approved": false,
    "tags": [
      "Puzzles",
      "Logic"
    ]
  },
  {
    "id": "61a498cf085ad00051190591",
    "name": "Construct the max number with given sum of digits.",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "61daff6b2fdc2a004328ffe4",
    "name": " Compact polynomial",
    "approved": false,
    "tags": [
      "Puzzles",
      "Fundamentals"
    ]
  },
  {
    "id": "62024046897712005e643014",
    "name": "Magical Boolean Duplet",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Advanced Language Features",
      "Basic Language Features",
      "Booleans",
      "Data Types",
      "Logic",
      "Operators",
      "Puzzles",
      "Games",
      "Structs",
      "Data Structures"
    ]
  },
  {
    "id": "620991e8d746e5004b367fa1",
    "name": "Tennis match scoring",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "527406d347a81c5d290008fa",
    "name": "League Standings",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "52dbc1d063175b09250001d2",
    "name": "Timers",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "531059719ad1fa3dea000176",
    "name": "Waving the Stream",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5432fb7fcba5d9feec00033b",
    "name": "Hash Keys Substitutes",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Hashes",
      "Data Structures"
    ]
  },
  {
    "id": "5459f67b85166aee840000f3",
    "name": "Inverse FizzBuzz",
    "approved": false,
    "tags": [
      "Algorithms",
      "Games",
      "Logic",
      "Fundamentals",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "54cbc7c4424fa85fe5000164",
    "name": "Rubyfunge Interpreter ",
    "approved": false,
    "tags": [
      "Puzzles",
      "Interpreters",
      "Algorithms",
      "Logic",
      "Stacks",
      "Arrays",
      "Data Types",
      "Memory"
    ]
  },
  {
    "id": "54e7912f0507371a6f000a58",
    "name": "Dynamically Compile Java Code",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Advanced Language Features"
    ]
  },
  {
    "id": "553016a15a1c894151000005",
    "name": "Top Secret Deciphering Mission",
    "approved": false,
    "tags": [
      "Puzzles",
      "Strings",
      "Data Types",
      "Arrays",
      "Games",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "554b18a65b08c1851300013e",
    "name": "Simple Blackjack",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Games"
    ]
  },
  {
    "id": "5579a35bc6af78c969000023",
    "name": "Graph Theory: Detect an arborescence ",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Structures",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "55d10e059cbb0267ac0000ad",
    "name": "Crude Machinery and a Command Line Interface",
    "approved": false,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Parsing",
      "Logic"
    ]
  },
  {
    "id": "56055b7d81e4e2354e00000a",
    "name": "Your Mentors Film Library (Part 2)",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Hashes",
      "Data Structures",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Iterators",
      "Control Flow",
      "Metaprogramming",
      "Advanced Language Features"
    ]
  },
  {
    "id": "562086bbaacc2b4d13000047",
    "name": "Anakin's Colorful Protocol Droids",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "564408d8cc886dc27b00006b",
    "name": "Aaaaaand theeeeeen",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "566a937082b863b20d000027",
    "name": "Time formatting from input. Regex kata",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "56842c87449b93801d00004b",
    "name": "Generate random integers which exactly sums to a given integer number",
    "approved": false,
    "tags": [
      "Algorithms",
      "Basic Language Features",
      "Fundamentals",
      "Logic"
    ]
  },
  {
    "id": "5692abe6edec0cc5cf000009",
    "name": "Destructuring Tutorial",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56b4d1550d8f5375f5000021",
    "name": "functions waterfall!",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Control Flow",
      "Basic Language Features",
      "Functions"
    ]
  },
  {
    "id": "56c4dcf5dd8e2355bc001f64",
    "name": "Design Patterns: A simple factory for text tools",
    "approved": false,
    "tags": [
      "Algorithms",
      "Design Patterns",
      "Design Principles"
    ]
  },
  {
    "id": "56c7259ca3a73eec43000c0b",
    "name": "Design Patterns: Observer Pattern for the runway status at an airport",
    "approved": false,
    "tags": [
      "Algorithms",
      "Design Patterns",
      "Design Principles",
      "Observers"
    ]
  },
  {
    "id": "5715455ae1bf81a64a001671",
    "name": "Sum of certain products II",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "574f19f114b9ad878600178a",
    "name": "Amount to Coins - Universal",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Fundamentals",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "575ee86851071bd22c000106",
    "name": "Ball Launcher Robot",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5769a50143126ed1ef000440",
    "name": "Swarm bots - swarm intelligence #1",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5784c02f202c0e8cd00001fb",
    "name": "Manipulating financial time-series",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5791b6283467db6e88000034",
    "name": "Palindromic Primes",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "579f8e5c72292d681e000083",
    "name": "Pokemon Go - Extended Edition",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Objects",
      "Data Types"
    ]
  },
  {
    "id": "57fdb79487b801698e000a0f",
    "name": "Permutations (partial) with identicals ",
    "approved": false,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Permutations",
      "Logic"
    ]
  },
  {
    "id": "57fee5be54685bf684000036",
    "name": "Practical Interview Prep: Binary Search Tree .contains()",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Binary Search Trees",
      "Trees",
      "Binary",
      "Data Structures"
    ]
  },
  {
    "id": "58004c892dc24cdcd3000166",
    "name": "Family Gift Exchange / Names Out of a Hat",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Games"
    ]
  },
  {
    "id": "582581ac61e3a83da2000010",
    "name": "Numbers Having  Digits Occurring Only Once",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Algorithms",
      "Logic",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Optimization",
      "Declarative Programming",
      "Programming Paradigms",
      "Strings",
      "Permutations"
    ]
  },
  {
    "id": "58278983932d0cb0600000b6",
    "name": "Multi Poly Coordinates",
    "approved": false,
    "tags": [
      "Algorithms",
      "Puzzles",
      "Games",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5828266f86f3b05f4b00018c",
    "name": "How far away is it ?",
    "approved": false,
    "tags": [
      "Algorithms",
      "Puzzles",
      "Games",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "582f55bdfe3801a46200018a",
    "name": "How far to ride the bus?",
    "approved": false,
    "tags": [
      "Puzzles",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "5837469aaa6717b7fc00107d",
    "name": "Missing Generator",
    "approved": false,
    "tags": [
      "Puzzles",
      "Constructors",
      "Basic Language Features",
      "Fundamentals",
      "Functions",
      "Control Flow",
      "Iterators",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5868022b36959fa4a4000527",
    "name": "Tarot Score",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Logic",
      "Games",
      "Numbers",
      "Data Types",
      "Strings",
      "Parsing",
      "Algorithms"
    ]
  },
  {
    "id": "58980a398927f7c65d00001e",
    "name": "Password Validate and Hash",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Validation",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "58a52bab2917b28745000108",
    "name": "Refactor out a switch-statement to a Visitor pattern",
    "approved": false,
    "tags": [
      "Refactoring"
    ]
  },
  {
    "id": "58ac8dfe15152f70370002d0",
    "name": "Epoch Date String",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "58d64c8d14286ca558000083",
    "name": "Join command (simplified)",
    "approved": false,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Data Structures"
    ]
  },
  {
    "id": "58d875d0334458b87d00002e",
    "name": "The Cube Structure",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Geometry",
      "Algebra",
      "Mathematics"
    ]
  },
  {
    "id": "58e526a92daa3a96040000b3",
    "name": "Unofficial  FCC Challenge -- Basic Algorithm Scripting -- Title Case a Sentence",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "59276216356e51478900005b",
    "name": "Ascii Art Generator",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "59679d0c12f21f683f000afb",
    "name": "Array Condenser Step Calculator",
    "approved": false,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "596dbbe518a7176a5900002d",
    "name": "Basic XOR and NOT Crypto",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5974bb6202e467779100002a",
    "name": "Draw a Clock",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "5977ac971e250aa8b70000b4",
    "name": " Kevin Mitnick's Challenge  - Vigenere cipher & Rot-n",
    "approved": false,
    "tags": [
      "Algorithms",
      "Decoding",
      "Logic",
      "Decryption",
      "Cryptography",
      "Security",
      "Ciphers"
    ]
  },
  {
    "id": "597ea234ee486012d8000051",
    "name": "Complete Spirals",
    "approved": false,
    "tags": [
      "Algorithms",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "5998ce70a499a7926a0000a8",
    "name": "Thue-Morse Sequence",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Binary",
      "Sequences",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "59b99897cb7fb455260000c8",
    "name": "Guess the list pattern #1",
    "approved": false,
    "tags": [
      "Puzzles",
      "Fundamentals",
      "Lists",
      "Data Structures",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Integers",
      "Arrays",
      "Operators",
      "Control Flow",
      "Basic Language Features",
      "Arithmetic"
    ]
  },
  {
    "id": "59baf6676a9b6053950007b1",
    "name": "Exact p",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Statistics",
      "Data",
      "Optimization"
    ]
  },
  {
    "id": "59d4fb429b769948a00008d6",
    "name": "[NCP] No Comments Please : erase all comments in a C/C++ code .",
    "approved": false,
    "tags": [
      "Algorithms",
      "Parsing",
      "Logic",
      "Strings"
    ]
  },
  {
    "id": "59de4123233243f558000150",
    "name": "The Good Old Pig Latin : Reversed!",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games",
      "Strings",
      "Data Types",
      "Basic Language Features"
    ]
  },
  {
    "id": "59f064b327402f565e000152",
    "name": "Cartesian product",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5aa15a8f87f78e956b001d08",
    "name": "The Black Panther Language ",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5ac50410e0d70c1e61000068",
    "name": "Catch me if you can (rolling start)",
    "approved": false,
    "tags": [
      "Algorithms",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "5acddbbcd6ef5b66d70000ba",
    "name": "To Do List",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "5ad18aa1443b6cd2b5000031",
    "name": "Hacking Elections",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5ae0324f5bc35a0742001284",
    "name": "Fortran for beginners: splitting",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5ae0f482c5a452fc4e0000bd",
    "name": "Hack-the-Exception",
    "approved": false,
    "tags": [
      "Puzzles",
      "Security",
      "Exception Handling",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "5b1d3c2425c2bbe333000070",
    "name": "CubaLibre",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games",
      "Algorithms",
      "Logic",
      "Fundamentals"
    ]
  },
  {
    "id": "5b26780042b27e6bf0000061",
    "name": "Solve the equation: (N * x) % M == 1.",
    "approved": false,
    "tags": [
      "Puzzles",
      "Algorithms",
      "Logic",
      "Games"
    ]
  },
  {
    "id": "5b349598d74b5b47740000da",
    "name": "Weird matrix multiplication",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5b3cd4e72f4b20e09600018b",
    "name": "HTML DOM: Part 1 - Tree",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5b5b4ec2beb865fd4000007d",
    "name": "Alternating Operations On A Nested Array",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Fundamentals",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "5b80ba7ff643c46930000035",
    "name": "Christmas at the Office!",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5bbf6c9518ea5de0ad0000fb",
    "name": "Balance weights on a scale",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Lists",
      "Data Structures",
      "Arrays",
      "Data Types",
      "Numbers",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5be3b7859bd71ec2b40000c3",
    "name": "Elementary Cellular Automata - Part 1",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5c105276a8af377e71000084",
    "name": "Spring Framework: bind the correct implementation",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5c624cfb53a1275e7d0fb19e",
    "name": "Linear Algebra: Vector Spaces, Linear Transformations and Friends",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Linear Algebra",
      "Algebra",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5c690911ff00de3c284d41d9",
    "name": "Regex to Match Significant Figures",
    "approved": false,
    "tags": [
      "Puzzles",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5c8719077aabc40d48d7ed83",
    "name": "Interchangeable predicates",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5c8ab2f3623dc219e1cd3bcc",
    "name": "Security : Sensitive Data Exposure",
    "approved": false,
    "tags": [
      "Bugs",
      "Security"
    ]
  },
  {
    "id": "5c9cf60a68b11e7064787607",
    "name": "Bob. Build me a house!",
    "approved": false,
    "tags": [
      "Puzzles",
      "Strings",
      "Data Types",
      "Games",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Conditional Statements"
    ]
  },
  {
    "id": "5cc697fa9a6e760018a26c01",
    "name": " Need to be grouped ",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "5cd955d0a695ae0025f8ea6a",
    "name": "Berg and the Bloom filters",
    "approved": false,
    "tags": [
      "Algorithms",
      "Hashes",
      "Data Structures",
      "Tables"
    ]
  },
  {
    "id": "5cf85010ac68b8001bbec060",
    "name": "Construct/Deconstruct",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Advanced Language Features",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5d0e023d08985f00276c7926",
    "name": "Pass the Coin Game",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Fundamentals",
      "Bits",
      "Binary"
    ]
  },
  {
    "id": "5d27544f2b43e900254c7421",
    "name": "Find me a \"XOR pair\"!",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Search",
      "Algorithms",
      "Logic",
      "Collections",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "5d5f0ea6748c550019ff80f8",
    "name": "Build a Directory",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5d8de9fdeeae51002600dfa4",
    "name": "Horse Racing",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5dc6a2f9425a2c0014101d24",
    "name": "Create a Tic-Tac-Toe bot",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5dcc7067be0cc40001ec5336",
    "name": "Array to ArrayList",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5deebf21ada844000e6102a6",
    "name": "Pick a Pair of Random Elements From A Given Range",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5e1f2234c5772a000fe7f7ce",
    "name": "Transform",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5e29d57ac6b9af00333abd19",
    "name": "Forth",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Interpreters",
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5e343ecbcd2b84001f5594b9",
    "name": "Validate FEN notation",
    "approved": false,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Validation",
      "Logic",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals"
    ]
  },
  {
    "id": "5e42e46cb725410029e3771e",
    "name": "Replace Keys",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5e619f2d30e9d00028d690fb",
    "name": "Threading: Boolean Flags Aren't Enough",
    "approved": false,
    "tags": [
      "Bugs",
      "Synchronization",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5e7c38d1876bb700324c6dcf",
    "name": "Alternative distribution",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5e93287b911cba000f877aed",
    "name": "Pushouts and epimorphisms",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5ea443f79decd50033ace790",
    "name": "Index 2 subgroup is normal",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5eb3c5999ee8630001e9e616",
    "name": "Linear projection",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5eb5155b80e7b8002dd10226",
    "name": "Minimum Transactions",
    "approved": false,
    "tags": [
      "Algorithms",
      "Graphs",
      "Data Structures",
      "Logic"
    ]
  },
  {
    "id": "5eb9cf981e46ba0029087c38",
    "name": "Exact Change Decree",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5ebd8f0b31c2d8003287ef2e",
    "name": "An undesirable property of the category of rings",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Algebra"
    ]
  },
  {
    "id": "5ebdab4b287b83000117f99e",
    "name": "Powerset monad (Part 2)",
    "approved": false,
    "tags": [
      "Algorithms",
      "Monads",
      "Data Structures",
      "Functional Programming"
    ]
  },
  {
    "id": "5ec03f55ce108b0034a0045f",
    "name": "Rolling Sums",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5ecc5efebfb8c20029dced25",
    "name": "King’s Legal Moves in Chess",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5ed2eed87a7eb0002ffa49a7",
    "name": "Explode the Array",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5edeaf45029c1f0018f26fa0",
    "name": "Coping with NP-Hardness #1: 2-SAT",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5edff3871197e20017f1878a",
    "name": "Iron Sphinx #2 - Wolves",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Games"
    ]
  },
  {
    "id": "5ee6d9611c8ca1000178f11d",
    "name": "Unconventional group axioms",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5f4abc204c2cc40010499f90",
    "name": "Power Towers in a group",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5f85b9a415176b0001519083",
    "name": "tablature reader",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5f887de2680827003373427c",
    "name": "Broken Keyboard ",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games",
      "Logic"
    ]
  },
  {
    "id": "5fa98f0d97ead200148559ed",
    "name": "Find the biggest number in array",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Performance"
    ]
  },
  {
    "id": "5fd4a52fc298660021c41811",
    "name": "The average of two ASCII chars [code golf]",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games",
      "ASCII",
      "Character Encodings",
      "Formats"
    ]
  },
  {
    "id": "5feb14a6ea09cc0017fd2ee3",
    "name": "Practical / panarithmic numbers",
    "approved": false,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic",
      "Numbers",
      "Data Types",
      "Arithmetic",
      "Mathematics"
    ]
  },
  {
    "id": "60100ed80eebad0027b74baf",
    "name": "Broken Dial Combination Safe",
    "approved": false,
    "tags": [
      "Puzzles",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "6015998142e122000fed4fde",
    "name": "Prolog - Addition",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "602046a890cb87000d6617ea",
    "name": "Sudoku Generator",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "6030242fbf2b26002cda69c4",
    "name": "Connecting Linked Lists",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "60524e5291f6450013488af5",
    "name": "Casino Roulette",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "60660acc7747c90043682932",
    "name": "A game of pool (billiards)",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Basic Language Features"
    ]
  },
  {
    "id": "606a01701929210027e6a9c3",
    "name": "Story #3 - War Game",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Fundamentals",
      "Games"
    ]
  },
  {
    "id": "607eddc6799c9a003ef5db95",
    "name": "A puzzle a day, keeps the doctor away ~ SERIES #1:  Save MEEEEE !!!!!!!",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "608979bedc68ce003d711b7c",
    "name": "My Goldfish Needs  a Multiplication Table!",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "60983b03bdfe880040c531d6",
    "name": "Longest Subarray with Maximum Average Value",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "60a2482ce7860b000c7c82ea",
    "name": "Make a break",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Scheduling",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "60ab5f7fccc4440014dcdc2f",
    "name": "Value at Risk for an equity portfolio",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "61392669c3ca96001a749453",
    "name": "Draw   squares",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "6163384eec0bee005ae7d6ae",
    "name": "Traffic lights",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "617700a2c789fe004bc56006",
    "name": "Rescue a Ship on the Integer Sea",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Streams",
      "IO",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "6178aebb9f1c100008cd0ac3",
    "name": "Universal Function",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "61bca0c65a1a39001b1273d4",
    "name": "Can Mike eat his Sausage Rolls?",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "61cefe34d9596f000ea7411b",
    "name": "Count Words GAME!",
    "approved": false,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "61fca0fca0e59f000ef1324d",
    "name": "Find the loop in linked list of numbers",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Fundamentals",
      "Data Structures"
    ]
  },
  {
    "id": "53846edda0932e6094000003",
    "name": "Scrollbar Telemetry",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "53ece04d26358de1d400010a",
    "name": "Callback Set",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5424acc17b79a3f013000159",
    "name": "Deadlock Detection",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Concurrency",
      "Computational Science",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "54333720913a658a9e0006b9",
    "name": "Find The Object",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "544fb5dd24d7878bd10004d2",
    "name": "The devil's chessboard",
    "approved": false,
    "tags": [
      "Puzzles",
      "Logic",
      "Algorithms",
      "Games"
    ]
  },
  {
    "id": "54c6b5de791878e85b00077d",
    "name": "German Unicode Characters to ASCII Equivalents",
    "approved": false,
    "tags": [
      "Algorithms",
      "Unicode",
      "Character Encodings",
      "Formats",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "55636d7b9cc0d8a79e00009b",
    "name": "Intro to Statistics - Part 2: Boxplots",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Statistics",
      "Algorithms",
      "Data",
      "Logic"
    ]
  },
  {
    "id": "5567a7d2c36c96585500008a",
    "name": "Future",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Asynchronous",
      "Promises",
      "Design Patterns",
      "Design Principles"
    ]
  },
  {
    "id": "5569e127d8237e1ea80000fd",
    "name": "Triangulation:  Help Robin find Sherwood (technically Trilateration)",
    "approved": false,
    "tags": [
      "Algorithms",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Logic",
      "Physics"
    ]
  },
  {
    "id": "5591849485592c336c000024",
    "name": "Event Date Dilemma",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "5591d205762b2cb5d800008f",
    "name": "Matched delimiters, with bells and whistles",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5592e2f038f7c1dde700003b",
    "name": "All I need's a platform, man!",
    "approved": false,
    "tags": [
      "Algorithms",
      "Scheduling",
      "Logic",
      "Arrays",
      "Data Types",
      "Optimization"
    ]
  },
  {
    "id": "5599569f1cd61a22c20000b8",
    "name": "SQL Query Builder",
    "approved": false,
    "tags": [
      "Algorithms",
      "SQL",
      "Databases",
      "Information Systems",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "55a275c31a88bd0d370000ba",
    "name": "Strawberries harvesting",
    "approved": false,
    "tags": [
      "Algorithms",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "55e65b1f1f3034faf2000013",
    "name": "xml to object - xml #1",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56113aaacc951d7488000001",
    "name": "Implement a client for an API",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Metaprogramming",
      "Programming Paradigms",
      "Advanced Language Features"
    ]
  },
  {
    "id": "5612a0d653d31f401b00001a",
    "name": "Regular Expressions Engine",
    "approved": false,
    "tags": [
      "Algorithms",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings"
    ]
  },
  {
    "id": "5635950c96734c683300007c",
    "name": "Tonk Card Set Determination",
    "approved": false,
    "tags": [
      "Puzzles",
      "Sorting",
      "Algorithms",
      "Logic",
      "Filtering"
    ]
  },
  {
    "id": "564bf0d0121a3e4116000070",
    "name": "Green Glass Roof- Puzzles #6",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Arrays",
      "Functions",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5694a406e46d07e7b600001f",
    "name": "AOP - After",
    "approved": false,
    "tags": [
      "Algorithms",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Closures"
    ]
  },
  {
    "id": "5694abcbee4c0fa8bd000028",
    "name": "AOP - Around",
    "approved": false,
    "tags": [
      "Algorithms",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Closures"
    ]
  },
  {
    "id": "569927ab4db8fc9166000009",
    "name": "University grade calculator!",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56a547385536cf6969000044",
    "name": "Quartile methods",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "56c8bc4afd8fc0593d0009ab",
    "name": "Fairness",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "56e0c242ef935682280004cf",
    "name": "Natural Language Calculator",
    "approved": false,
    "tags": [
      "Puzzles",
      "Metaprogramming",
      "Programming Paradigms",
      "Advanced Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "56e4339293c3d94b09000d50",
    "name": "Cold War Book Codes",
    "approved": false,
    "tags": [
      "Algorithms",
      "Encryption",
      "Cryptography",
      "Logic",
      "Security"
    ]
  },
  {
    "id": "579a1f73c38ec2df3f000178",
    "name": "The money in the bank",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "57b99ea58f58137996000194",
    "name": "Tiny Tony's Magic Beard",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57d1042b95497eee910002cf",
    "name": "I guess this is a 6kyu kata #2: Merge strings",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57e2fc2e9cb1192b24000191",
    "name": "Maya Number Converter",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "57ec4c00f670e9a47a0004f3",
    "name": "Twice Their Age",
    "approved": false,
    "tags": [
      "Puzzles",
      "Numbers",
      "Data Types",
      "Dates/Time"
    ]
  },
  {
    "id": "57ee304a7b45eff6d60001e6",
    "name": "Shady Sam's Special Sweet Scented Candles",
    "approved": false,
    "tags": [
      "Algorithms",
      "Optimization"
    ]
  },
  {
    "id": "5821a080f305c9c01b000023",
    "name": "Pokemon Weaknesses/ Resistances!",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5835dea5b468c0099a000091",
    "name": "Swedish National Identity Number",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Validation",
      "Numbers",
      "Data Types",
      "Utilities"
    ]
  },
  {
    "id": "583be9b428a0c0c795000398",
    "name": "The Overlap Time",
    "approved": false,
    "tags": [
      "Puzzles",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "583cc8f2b0972b2b8e00015e",
    "name": "How do I dilute this correctly?",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Objects",
      "Data Types"
    ]
  },
  {
    "id": "583df416836753c32a000020",
    "name": "Find The Binary",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5840df348c7e72243100012a",
    "name": "Pack the box.",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "587625527aad39ed590000f4",
    "name": "Fix the English syntax",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Language Syntax",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "587faf7612fc6e1dc400003f",
    "name": "Office Mission #2: Estimate the workload",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5889e82d1ccb3cbec5000001",
    "name": "Rotational state populations (the Boltzmann distribution)",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58e314997c3b89c69a000002",
    "name": "Unofficial  FCC Challenge -- Basic Algorithm Scripting -- Check for Palindromes",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "58e42e7fbf240f555800015b",
    "name": "Unofficial  FCC Challenge -- Basic Algorithm Scripting --Largest Numbers in Arrays ",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "58e762224d5516910a00001b",
    "name": "To compress: This looks like Huffman compression!",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Trees",
      "Data Structures"
    ]
  },
  {
    "id": "58fd31e50644e36b760003a2",
    "name": "Schizo",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "590c6a479f4b9f28e6000084",
    "name": "How many dots are covered",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Geometry",
      "Algebra",
      "Mathematics"
    ]
  },
  {
    "id": "59108f2758772ef517000473",
    "name": "One Line Task: Electronic Numbers",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "591b168b0715758b3a0000e9",
    "name": "English words to numbers (Part II)",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Numbers"
    ]
  },
  {
    "id": "5925b28adba3a2e78c000003",
    "name": "Partition",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5925d97a1251ac34f600018f",
    "name": "Missing delimiters",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5927d1e26d6c5a89d1000023",
    "name": "One Line Task: Periodic Rows",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "593002ed7b9b7564e8000065",
    "name": "Adding words - Part III",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Arithmetic",
      "Data Types"
    ]
  },
  {
    "id": "5943f7bdd18815170e000137",
    "name": "Prisoner's Dilemma ",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games",
      "Fundamentals"
    ]
  },
  {
    "id": "5949dca57ca3c66f32000081",
    "name": "Numbers  Game (Help me play !)",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types",
      "Games",
      "Numbers"
    ]
  },
  {
    "id": "595e8e9c3dbec5a1890000e5",
    "name": "Soft relooking",
    "approved": false,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "597865f733496b65e900009a",
    "name": "The (nearly) Perfect Mirror",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "597a264ad9416c38230000eb",
    "name": "How much does this inspection service cost?",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "597deffd48275ceefc00010a",
    "name": "Fibonacci String Search",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5982531a6463ffa940000005",
    "name": "Rep The Set, Gotta Rep The Power Set",
    "approved": false,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "599bbc56b7a0474f0c000097",
    "name": "Design a simple markdown compiler with string substitution feature",
    "approved": false,
    "tags": [
      "Fundamentals",
      "ES2015",
      "Babel"
    ]
  },
  {
    "id": "59a6f0d3589d2a112700000e",
    "name": "Implement Classes by using Functions",
    "approved": false,
    "tags": [
      "Puzzles",
      "Metaprogramming",
      "Programming Paradigms",
      "Advanced Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "59bc3b8b5fb1330140000050",
    "name": "Parenthesis detector++",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "59c85d8323dacc93b900000c",
    "name": "Simple Fun #351: Gallup",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59ed1b1ba954270adb000088",
    "name": "World Rally Championship",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "59fd52b032b8b9abb200001d",
    "name": "High-Stakes Binary Blackjack",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5a1b151d46d843522f000048",
    "name": "Search and sort names",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5a3b4a84f28b82cbca000301",
    "name": "Rational Zeros",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5a600845fd56cbf4150000aa",
    "name": "Automatic Repeat Request",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types",
      "Strings",
      "Bits",
      "Binary"
    ]
  },
  {
    "id": "5a64da5880eba8921a000076",
    "name": "Planting carrots",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Geometry",
      "Algebra"
    ]
  },
  {
    "id": "5a7b83645084d7567d0000e3",
    "name": "Queens and Kings Stable Marriages",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5a81041cfd8c06b403000099",
    "name": "Canvas Fun #5: Count The Smiling Face",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5a86d2e24a6b34be2700003e",
    "name": "Summing subsets in list",
    "approved": false,
    "tags": [
      "Algorithms",
      "Fundamentals"
    ]
  },
  {
    "id": "5a8dcb1757c562350100016c",
    "name": "Check if binary tree is balanced",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Binary Search Trees",
      "Trees",
      "Binary",
      "Data Structures"
    ]
  },
  {
    "id": "5a8e43a4373c2e1d6800025b",
    "name": "Totient maximum",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a93ecb61a60f633a4000aef",
    "name": "Blue discs",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a9e9e5bfd577788770000bb",
    "name": "Space Journey (1): If only i knew where to land..",
    "approved": false,
    "tags": [
      "Algorithms",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Logic"
    ]
  },
  {
    "id": "5ac63573d325ad8b26000101",
    "name": "Decode a message using the Polybius square",
    "approved": false,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Logic",
      "Cryptography",
      "Security"
    ]
  },
  {
    "id": "5acdf3f9df5234251900010c",
    "name": "check for winning box in dots and boxes  game",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5af03a3ade4c7fc9280000a1",
    "name": "Arithmetic/Geometric/Quadratic Sequences",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5b061462af15bebc57000024",
    "name": "Create a one-liner  FTP client with the ftplib",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5b210360bd03075a47001191",
    "name": "Making squares with lines",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Optimization",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "5b277a1e9212cb27f10000bd",
    "name": "Terrible Exception Handling",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Exception Handling",
      "Control Flow",
      "Basic Language Features",
      "Security"
    ]
  },
  {
    "id": "5b35e5a655329226b800008f",
    "name": "Stack Safe Recursion",
    "approved": false,
    "tags": [
      "Algorithms",
      "Recursion",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science",
      "Stacks",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5b4c2d19bdd0746b4e000127",
    "name": "Triangular Peg Solitaire Solver",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5b5a0cecc19d96a95e000100",
    "name": "Don't Blow it",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5b62e33c51f0b36fe70000bc",
    "name": "Counter-Strike SeriesI",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5b9232629cc49d5a680003d9",
    "name": "Number Maze -- Play game Series #12",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games",
      "Performance"
    ]
  },
  {
    "id": "5b9ecec33c5b95e2b00000ba",
    "name": "Chess - checkmate with rook in 16 moves",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Games",
      "Performance"
    ]
  },
  {
    "id": "5ba81cf2d312dda3db000045",
    "name": "the Array constructor is on the fritz!",
    "approved": false,
    "tags": [
      "Bugs",
      "Arrays",
      "Data Types",
      "Puzzles",
      "Games",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5bfaa549aef7125ef2000004",
    "name": "Mysterious Letters",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5c170e46a8af37ee50000094",
    "name": "Fun with Physics #1 - Are the tanks in range of the cannonballs?",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Physics",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5c2d8ff035d2910009761227",
    "name": "IPv4 Network and Broadcast Addresses",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Binary"
    ]
  },
  {
    "id": "5c65d746641b6d2b1f3a1cec",
    "name": "Addition with Limitations",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games",
      "Basic Language Features",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5c6847a9f1ed756453298223",
    "name": "Mac address converter",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Data",
      "Binary",
      "Bits",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5c6fa3921acd4800085df34d",
    "name": "Pattern Generator (mirrored)",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5c7aa6821d0c8965e85ed7c3",
    "name": "Create a Bridge",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games",
      "Game Boards",
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5c90276a03b42343cb32e9bf",
    "name": "Reactive programming: #2 Basic observables creation",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5c9be87163ebde0dc7fa2aa9",
    "name": "combine apples",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5cc1cfd9f621f500149152bd",
    "name": "Researcher impact (h-index)",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5cc89c182777b00001b3e6a2",
    "name": "One Line Task: Upside-Down Pyramid Addition...REVERSED",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5ccbd8ed3957a2002458e797",
    "name": "Make sets",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "5cd9d386f446b072a8c130f5",
    "name": "Magic Highschool: Sorting spell",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5ce31250baf1e700149e1368",
    "name": "Find the radius of the disk",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5d06938fcac0a5001307ce57",
    "name": "Golomb-type  sequences",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5d0b76b47211500022c52009",
    "name": "Sum of euler totient function",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "5d0c2a317211500022ca3f6c",
    "name": "Folding Tiles Solver",
    "approved": false,
    "tags": [
      "Puzzles",
      "Algorithms",
      "Logic",
      "Performance"
    ]
  },
  {
    "id": "5d0d1b9dc843446a26130384",
    "name": "Verified maximum subarray sum",
    "approved": false,
    "tags": [
      "Algorithms",
      "Theorem Proving",
      "Logic",
      "Dynamic Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5d0dce505d55e00019a15aed",
    "name": "Finding the maximal program, revamped",
    "approved": false,
    "tags": [
      "Puzzles",
      "Theorem Proving"
    ]
  },
  {
    "id": "5d208ab62cf48200299d55c2",
    "name": "Verified Sorting Algorithms - Bubblesort",
    "approved": false,
    "tags": [
      "Puzzles",
      "Theorem Proving",
      "Permutations",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5d2f292b496f8d001c224972",
    "name": "Verified Sorting Algorithms - Quicksort",
    "approved": false,
    "tags": [
      "Puzzles",
      "Theorem Proving"
    ]
  },
  {
    "id": "5d309eab3d9880002265aeed",
    "name": "Verified Sorting Algorithms - Mergesort",
    "approved": false,
    "tags": [
      "Puzzles",
      "Theorem Proving"
    ]
  },
  {
    "id": "5d47be168bbcfd0022378487",
    "name": "Laser Archery",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Linear Algebra",
      "Algebra"
    ]
  },
  {
    "id": "5d48eed05d7d3c001e8bc2e3",
    "name": "Class Loader Bomb",
    "approved": false,
    "tags": [
      "Puzzles",
      "Advanced Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "5d4bed7c7a528071756060d8",
    "name": "Tragic: the Maddening",
    "approved": false,
    "tags": [
      "Algorithms",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "5d6a25a4ac739b000dff13d3",
    "name": "ASCII Binoculars",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5d7b4c0f8cbc88001c7ab623",
    "name": "Escape the hidden Mines !",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games",
      "Algorithms",
      "Logic",
      "Fundamentals",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Loops"
    ]
  },
  {
    "id": "5da9dac929ce6a00138e5a01",
    "name": "Without Repeats",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5dcb1705bc7c4c00312ae9a2",
    "name": "Distance to swim",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5dcc653f5adcb400012513d5",
    "name": "Primitive Array",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5dd97ca9d1332e00234a220b",
    "name": "Pointless Factors",
    "approved": false,
    "tags": [
      "Puzzles",
      "Recursion",
      "Algorithms",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "5de21e21e02b3c001dd27479",
    "name": "Fibonacci Numbers",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5df378e60d5bc9001e803cd5",
    "name": "A Sandbox _ENVironment",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5e10b791cec189002866f602",
    "name": "Who was president when...?",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5e17b5f6779d4c00181a35a3",
    "name": "Level up your card house",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Sequences",
      "Arrays",
      "Data Types",
      "Games"
    ]
  },
  {
    "id": "5e2e66e8948634002d33e560",
    "name": "Efficient Fibonacci: proof and extraction",
    "approved": false,
    "tags": [
      "Algorithms",
      "Theorem Proving"
    ]
  },
  {
    "id": "5e3d26697a978d000ff52671",
    "name": "Lagrange polynomial",
    "approved": false,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Mathematics",
      "Logic",
      "Numbers",
      "Lists",
      "Data Structures",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5e3d8d8ef76b1c001e062cfe",
    "name": "Implementing a Verified Evaluator for the Untyped Lambda Calculus",
    "approved": false,
    "tags": [
      "Algorithms",
      "Theorem Proving"
    ]
  },
  {
    "id": "5e778a884a26820032d33c89",
    "name": "UTF-8 Codepoints",
    "approved": false,
    "tags": [
      "Algorithms",
      "Unicode",
      "Character Encodings",
      "Formats",
      "UTF-8",
      "Logic"
    ]
  },
  {
    "id": "5e797d3bc1baac001792d1f5",
    "name": "Well Yes, But Actually No",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5e8b9787c2eb9f0029aa73a0",
    "name": "Find the number of bits and the bits with proof",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5e8f2337e8e292002f80a1ca",
    "name": "Order-preserving bijection from rationals to non-zero rationals",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5e92b1ab0a365a0029b25911",
    "name": "Finite group action",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5e97af00b13ab700244eaae9",
    "name": "a^2=b^3+11",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5e987757eb3b570001edb6cd",
    "name": "(5^5^5^5^5-1)/(5^5^(5^5^5-1)-1) isn't prime",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5eb5f3c14f583200017a8134",
    "name": "If N divides 2^N - 1, then N is zero or one",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5eb80e21a4dc58001859cf5c",
    "name": "If a^b + 1 is prime, then b is a power of two",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5ebd59422398390033476bc0",
    "name": "Powerset monad (Part 1)",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Monads",
      "Data Structures",
      "Functional Programming"
    ]
  },
  {
    "id": "5ec051cd2b16bb001e7881c1",
    "name": "Computational Geometry #1: Mixing Paints",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5ec3867dce108b0015a5f23b",
    "name": "kinematics 1",
    "approved": false,
    "tags": [
      "Puzzles",
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Physics"
    ]
  },
  {
    "id": "5ec7d775b82876001936e61a",
    "name": "Reflecting Light 3D",
    "approved": false,
    "tags": [
      "Algorithms",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5ecd32641dbe7e0033da139e",
    "name": "Black Box",
    "approved": false,
    "tags": [
      "Puzzles",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5ed15516a0ded1000ff33462",
    "name": "Merge within Tolerance",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5edf9cb6d5f30e0034a4f76d",
    "name": "Linear Feedback Shift Registers",
    "approved": false,
    "tags": [
      "Puzzles",
      "Cryptography",
      "Security",
      "Theorem Proving"
    ]
  },
  {
    "id": "5ef216ba6fa6b8001e57d8d7",
    "name": "Verified fulcrum (Theorem prover showdown #3)",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Theorem Proving"
    ]
  },
  {
    "id": "5f01fce8fa2ae0002fdc5de7",
    "name": "LIMIT of Function - Straight line",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5f0620b6a0a6950020e702e3",
    "name": "Number of n-element permutations with k inversions",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Dynamic Programming",
      "Programming Paradigms",
      "Performance"
    ]
  },
  {
    "id": "5f07142d7a0cb4001708fbe2",
    "name": "CN-IdNum Validation,for real",
    "approved": false,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Data Types",
      "Strings",
      "Numbers",
      "Mathematics",
      "Logic",
      "Dates/Time",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Arrays"
    ]
  },
  {
    "id": "5f1a9e7293f079002fc4ca59",
    "name": "Substring Near Match",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5f1ef76893f0790011cbc0bb",
    "name": "Python Recipes #2 : Finalize",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Metaprogramming",
      "Programming Paradigms",
      "Advanced Language Features"
    ]
  },
  {
    "id": "5f2c856bcae31d003185aabf",
    "name": "Cracking the digital hash lock",
    "approved": false,
    "tags": [
      "Algorithms",
      "Performance",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5f3a6fc6ea57ff0014ca5391",
    "name": "How many symbols must be on one card?",
    "approved": false,
    "tags": [
      "Algorithms",
      "Permutations",
      "Logic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "5f4dd6dcac9fa3001a65e030",
    "name": "Find the centre of a sphere",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "5f70eac4a27e7a002eccf941",
    "name": "Four Color Theorem for Cylindrical Projection",
    "approved": false,
    "tags": [
      "Algorithms",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "5f736ec5faa59a00142bd47d",
    "name": "Parse JSON API sort parameter",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5f76296c7de0500016818421",
    "name": "Nautical flag code",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5f7b6c0451f6bc003369e28c",
    "name": "On which day of the week will the month begin?",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Data Types",
      "Dates/Time"
    ]
  },
  {
    "id": "5f7f023834659f0015581df1",
    "name": "N By N Skyscrapers",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5f904ebb8b05bb002d76da26",
    "name": "Bugs in loops",
    "approved": false,
    "tags": [
      "Bugs"
    ]
  },
  {
    "id": "5fc8a106d270f80017449b14",
    "name": "Prove that these group elements commute",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5fd0f99954783c001ceaf857",
    "name": "Wireworld cellular automaton",
    "approved": false,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5fd1db8170e8900017213bf9",
    "name": "Induction principle on nonnegative reals",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5fd23a8e22aa28002647d6f0",
    "name": "Random substrings in a string",
    "approved": false,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Ranking",
      "Logic"
    ]
  },
  {
    "id": "5fe24a97c1fc140017920a7f",
    "name": "Cody Block's Continuum",
    "approved": false,
    "tags": [
      "Puzzles",
      "Optimization",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5fe399429f548e0023d5c816",
    "name": "BF Creator:  Is a > b?",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5ff0d577184f210019825fe0",
    "name": "Normalize categories",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "600c1d628ac8e9001897e701",
    "name": "MI5 needs help! - Sumerian puzzle!",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "601c6f43bee795000d950ed1",
    "name": "Abstraction elimination",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Combinators",
      "Functional Programming",
      "Combinatory Logic",
      "Functions",
      "Declarative Programming",
      "Programming Paradigms",
      "Computational Science",
      "Theoretical Computer Science",
      "Control Flow",
      "Basic Language Features",
      "Design Patterns"
    ]
  },
  {
    "id": "60281f6d8d96330012d4f384",
    "name": "Native gibberish",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "605cb40422c88e000c019625",
    "name": "The hummingbird and the bikes (diabolical edition)",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "60c0be2abe45db0031f86dd1",
    "name": "Minimal Breadth-First Search",
    "approved": false,
    "tags": [
      "Algorithms",
      "Performance",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "60dde67a86f11000555b7e18",
    "name": "Find the Counterfeit Coins",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "60e857e3c0e13d0056ba2f14",
    "name": "Valid Number Plate",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "60f5868c7fda34000d556f30",
    "name": "Partition Detection",
    "approved": false,
    "tags": [
      "Algorithms",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Logic",
      "Graphs",
      "Data Structures",
      "Games"
    ]
  },
  {
    "id": "60ff692fd80e47002818137e",
    "name": "Filter Map Sort Practice",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "6124defb632d260007a87213",
    "name": "Reach 1 as Quick as Possible",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Algorithms",
      "Logic",
      "Performance"
    ]
  },
  {
    "id": "612662390ae861003fce14bc",
    "name": "Split number into multiple numbers by proportionals",
    "approved": false,
    "tags": [
      "Algorithms",
      "Floats/Doubles",
      "Data Types",
      "Numbers",
      "Integers",
      "Logic",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "6130d6dbf0f3b60021524ee5",
    "name": "Function continuation",
    "approved": false,
    "tags": [
      "Algorithms",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "613b5509d0b62f000e8d1679",
    "name": "Comprehensive price formatting",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "61432694beeca7000f37bb57",
    "name": "Cubes in the box",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Geometry",
      "Algebra",
      "Data Types"
    ]
  },
  {
    "id": "614f1732df4cfb0028700d03",
    "name": "Amoeba: Blind Maze",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "61598af248e3c4000ea55992",
    "name": "Arel: top five users",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "6168a40ac1d9a2001a604220",
    "name": "Minimum Prime Generator",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "61b0c558b89541003ed94e9c",
    "name": "Decorator Syntax",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "61b42626b0aeeb003fadae9b",
    "name": "Build a Suffix Tree",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Data Structures"
    ]
  },
  {
    "id": "61be8359559a000057be4053",
    "name": "The Poisoned Champagne",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "61c52268ee4be5000d666444",
    "name": "Sum of Power to  Indexed Digits ",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "61c73d548d2847002639d5d0",
    "name": "Brain Got Wrecked",
    "approved": false,
    "tags": [
      "Fundamentals",
      "ASCII",
      "Character Encodings",
      "Formats",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "61d8483f51b4d4002bc9fcd2",
    "name": "x³ is monotone",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "61f2c5d3f3073a00170a95f0",
    "name": "Master Puppeteer ",
    "approved": false,
    "tags": [
      "Algorithms",
      "Search",
      "Logic",
      "Performance"
    ]
  },
  {
    "id": "62013b174c72240016600e60",
    "name": "A Brave New Wordle",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "62028ba89d6eee006a3a923e",
    "name": "Jenkins One At A Time Hash",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "621b77b28a729a000f2fd9ca",
    "name": "Number Spiral - Square Warmup",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Arrays",
      "Data Types",
      "Performance"
    ]
  },
  {
    "id": "62262c9a74551c0030dd1601",
    "name": "Mystical Pattern Creator",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "622b24a6db3671001b48e371",
    "name": "not quite python",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "52f6a2fe747862feca0001da",
    "name": "Nth Order Bezier Curves",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Recursion",
      "Computability Theory",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "53318aa2848fa963370003ca",
    "name": "Point in a polygon with curves",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "533d7e1d5f620056340002ac",
    "name": "Implement \"The Match\" to assign med school graduates to hospitals",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "538c3ee31779e363e700053a",
    "name": "new IntStorage(byteLength).write(value, length)",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Bits",
      "Binary",
      "Numbers",
      "Data Types",
      "Integers",
      "Arrays",
      "Data",
      "Memory"
    ]
  },
  {
    "id": "53de8d578e46dc9282000091",
    "name": "Count the all of the visible triangles",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Games",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "54d02281a15d45798e00046b",
    "name": "Logging (T)error",
    "approved": false,
    "tags": [
      "Algorithms",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings",
      "Logic",
      "Dates/Time",
      "Data Types",
      "Parsing"
    ]
  },
  {
    "id": "551c0af759aab23d8700017c",
    "name": "Write Your Own Non-Templating Engine",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5523f26ec8f5025286000d53",
    "name": "The Enigma Machine - Part 3: The Reflector",
    "approved": false,
    "tags": [
      "Algorithms",
      "Fundamentals"
    ]
  },
  {
    "id": "553027ab1aa8ef1d2b000015",
    "name": "Function Wrapper: Nullity",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5530d0bc5668371329000027",
    "name": "Function Wrappers: Inline Testing",
    "approved": false,
    "tags": [
      "Algorithms",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings"
    ]
  },
  {
    "id": "553a45efb46fcf6c0a0000ea",
    "name": "Polynomial regression",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Arithmetic",
      "Algebra"
    ]
  },
  {
    "id": "5551718970fdd9bbb0000040",
    "name": "Basic Router With Named Segments",
    "approved": false,
    "tags": [
      "Algorithms",
      "Data Structures",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings"
    ]
  },
  {
    "id": "555b37e0ec532a581c0000a3",
    "name": "Partitions, big time",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5564e15eb81e70c90b00004f",
    "name": "Jugs, Ewers, and  Buckets",
    "approved": false,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Integers"
    ]
  },
  {
    "id": "55701c1e36941f04ef0000c1",
    "name": "Intro to Statistics - Part 3: Correlation Coefficients",
    "approved": false,
    "tags": [
      "Algorithms",
      "Statistics",
      "Data",
      "Logic"
    ]
  },
  {
    "id": "557ef736bab9d27867000038",
    "name": "Startup valuation forecast",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "558153c56ed17724bf00006e",
    "name": "SOS",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "55f8db0596c6d9720400002e",
    "name": "Parse this function! - Puzzles #7",
    "approved": false,
    "tags": [
      "Fundamentals",
      "ES2015",
      "Babel",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5607d38ea70b29343100007b",
    "name": "FloatStream",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings",
      "Streams",
      "IO",
      "Parsing",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "560a7310869363d853000061",
    "name": "Your Mentors Film Library (Part 3)",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Hashes",
      "Data Structures",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Iterators",
      "Control Flow"
    ]
  },
  {
    "id": "56170450acee0013f2000011",
    "name": "Binary Object Insertion.",
    "approved": false,
    "tags": [
      "Algorithms",
      "Binary"
    ]
  },
  {
    "id": "5646226a784d9e4301000039",
    "name": "Numbers With a Certain Amount of Permutable Powers ",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Data Structures",
      "Permutations",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Declarative Programming",
      "Programming Paradigms",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5674c663b58ed4b655000018",
    "name": "Word proposals",
    "approved": false,
    "tags": [
      "Algorithms",
      "Search",
      "Logic"
    ]
  },
  {
    "id": "5692d86f0b4a2736cd000030",
    "name": "Taxicab numbers",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "56ab6c9ccfc71dca5d000040",
    "name": "Let's Go Motor Racing!",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Puzzles",
      "Games",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "56cf504761603455580012ab",
    "name": "Insert into xml object - xml #3",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56da27ae7955f2cfce000666",
    "name": "Counting E-Primes",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Arithmetic"
    ]
  },
  {
    "id": "5703c332e55d300d310012bd",
    "name": "DIY ActiveRecord a.k.a KataRecord",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Advanced Language Features",
      "Metaprogramming",
      "Programming Paradigms",
      "Object-oriented Programming"
    ]
  },
  {
    "id": "5722d87c785220f5780013cf",
    "name": "IPv6 validator",
    "approved": false,
    "tags": [
      "Algorithms",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings"
    ]
  },
  {
    "id": "572a03a8ca1f70a005000b84",
    "name": "Querysets",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Django",
      "Frameworks"
    ]
  },
  {
    "id": "572c7a69884eec18690004de",
    "name": "Damn those dwarves: A tale of gold nuggets",
    "approved": false,
    "tags": [
      "Puzzles",
      "Algorithms",
      "Logic",
      "Data Structures",
      "Games"
    ]
  },
  {
    "id": "572d098b8d04d28ae6000896",
    "name": "Numbble",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "572fab0e636bde38580014c8",
    "name": "Intersection point of two lines",
    "approved": false,
    "tags": [
      "Algorithms",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Logic"
    ]
  },
  {
    "id": "5732367568118323dc001f54",
    "name": "Privileged Array",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5733555a1eb838006a001f0c",
    "name": "Pine's Orange Tree",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Trees",
      "Data Structures",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Methods",
      "Functions",
      "Control Flow",
      "Refactoring"
    ]
  },
  {
    "id": "573d9c77ccea8a02300006f5",
    "name": "Parse IPv6 Address",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings"
    ]
  },
  {
    "id": "57514337dcc1070a36000aec",
    "name": "KanaKonverter II",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "576369fc704d1b933a00099a",
    "name": "Most Popular Landmark",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "576461331643f4a8b2001274",
    "name": "False coin",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "57657b068ac7b78e1100002f",
    "name": "#2 What are the Odds?",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Recursion",
      "Algorithms",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "57777e595d69f808f2000140",
    "name": "Get the closure property",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "577a750e82d7d0eeb300017e",
    "name": "Mahjong - #3 How far from winning",
    "approved": false,
    "tags": [
      "Algorithms",
      "Games",
      "Logic"
    ]
  },
  {
    "id": "579f54c672292dc1a20001bd",
    "name": "Learning Chords Triads",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Logic"
    ]
  },
  {
    "id": "57b2f63cd2a31cf4f600026d",
    "name": "Caesar hieroglyphics",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "57c05b9f49324cf29d0007a9",
    "name": "How many orders can be delivered?",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "57e8b423f9f182e1ac000405",
    "name": "myjinxin katas #005 : Age Of Wind",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57f8109267c96aa0d2000243",
    "name": "Bob - The Automated Manager",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "57f819a367c96aff130013c2",
    "name": "Operation - Steal the Election!",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5807e2a162ceb048b300012d",
    "name": "Dependency check",
    "approved": false,
    "tags": [
      "Algorithms",
      "Trees",
      "Data Structures"
    ]
  },
  {
    "id": "58098bdbc47d320c440003b5",
    "name": "From..To..Series #8: from water to ice. You need to compress it!",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "580fc02712b34df85f00022e",
    "name": "Horror Top Trumps (card game)",
    "approved": false,
    "tags": [
      "Puzzles",
      "Logic",
      "Games",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Fundamentals",
      "Programming Paradigms",
      "Methods",
      "Functions",
      "Control Flow"
    ]
  },
  {
    "id": "581418a8c190873d4d0002aa",
    "name": "Find Ends of Each Paths",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "581d5a022f485aadff00013c",
    "name": "Schedulability Test",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "581fc6055acfe5b0aa000155",
    "name": "Minimal Squarewave PCM Synthesizer",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5821e1d9dee46a93cc000057",
    "name": "Sleepy Seals",
    "approved": false,
    "tags": [
      "Fundamentals",
      "If-then-else Statements",
      "Conditional Statements",
      "Control Flow",
      "Basic Language Features",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5824672334c53a539a000408",
    "name": "Trucks Driver Time.",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5828917a2c5d0a3ac6000073",
    "name": "Truck driving time(Level I)",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "583c0c2dc233419af0000029",
    "name": "Simple Numbers Conversion",
    "approved": false,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Logic"
    ]
  },
  {
    "id": "5840bf7d6312ce9a2000017f",
    "name": "Auto program generation",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5846346bfb0883b109000045",
    "name": "Welcome to Economics! #2 Economic Surplus",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "5846d03bb7c0ebd41d000130",
    "name": "1D function root finder",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "586408ffb3a6757c8400003b",
    "name": "Vampire Numbers",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5866cf3436959fdf720000ec",
    "name": "Tidy up the toy shop - refactor with closure / revealing module pattern",
    "approved": false,
    "tags": [
      "Refactoring",
      "Closures",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "586edbb935396dba5a0000f4",
    "name": "Magritte - Golconda",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58a5a575b6c660adca0000a7",
    "name": "Are you Geometric or Arithmetic? No, I´m both of them.",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Control Flow",
      "Basic Language Features",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "58ade7e13c97364b82000217",
    "name": "Multi-Cipher Encryption",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "58af185833f5397e37000021",
    "name": "Airplane Alert System",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games",
      "Fundamentals"
    ]
  },
  {
    "id": "58b4a09df08e31ed6f0000f6",
    "name": "Generate keywords",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types",
      "Arrays",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Functions",
      "Parsing",
      "Classes",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Objects"
    ]
  },
  {
    "id": "58bf045e38815729af000080",
    "name": "Edit That Brochure 2",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Algorithms",
      "Logic",
      "Higher-order Functions",
      "Functions",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "58c223ef8a452613e5000308",
    "name": "Challenge Fun #21: Length Of Original Sticks",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Performance"
    ]
  },
  {
    "id": "58cd329a1a8e15b4b90000cc",
    "name": "Long Division",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Arithmetic"
    ]
  },
  {
    "id": "58d98655ac203322a6000081",
    "name": "All representations as binomial coefficient, or: How often in Pascal's Triangle ?",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "58e64fdd807dcd189d00002e",
    "name": "Unofficial  FCC Challenge -- Basic Algorithm Scripting -- Confirm Ending",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "58e669be0b0f7c509e000031",
    "name": "Unofficial  FCC Challenge -- Basic Algorithm Scripting -- Truncate a String",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "58fe6c72627d2f882f000356",
    "name": "Turn Bus Ticket Digits Into 100",
    "approved": false,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Expressions",
      "Basic Language Features",
      "Fundamentals",
      "Games"
    ]
  },
  {
    "id": "5913cff12e126bd61200004c",
    "name": "Challenge Fun #23: Crossword Formation",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "591bc86518ff1ff1fa000051",
    "name": "Simple Fun #287: Multiply Numbers",
    "approved": false,
    "tags": [
      "Puzzles",
      "Algorithms",
      "Logic",
      "Games"
    ]
  },
  {
    "id": "592a5ec26d6c5a3769000081",
    "name": "Factorial (gamma)",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5933b154a08ce9f9730005f8",
    "name": "Antipodal Points with Same Temperature",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5934485ed953861c3100005f",
    "name": "Find my birthday",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "59507fb9438dbf17de0000a5",
    "name": "Simple Fun #325: Coins In Hat",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "595e27fa807e121fb900001f",
    "name": "Summer camp",
    "approved": false,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5967e3b3dc7b180cae000046",
    "name": "BAD Hash - String to String",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "599e736e27ca9fe3eb00000e",
    "name": "Get Kth Term In Permutation",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "59af4f91504d30bd6b00006f",
    "name": "Simulating Collective Behaviour with Linear Threshold Model",
    "approved": false,
    "tags": [
      "Algorithms",
      "Graphs",
      "Data Structures",
      "Logic"
    ]
  },
  {
    "id": "59baef94afcda27a78000021",
    "name": "Guess the list pattern #2",
    "approved": false,
    "tags": [
      "Puzzles",
      "Fundamentals",
      "Lists",
      "Data Structures",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Integers",
      "Arrays",
      "Operators",
      "Control Flow",
      "Basic Language Features",
      "Arithmetic"
    ]
  },
  {
    "id": "59bca3db5fb133eff7000058",
    "name": "Guess the list pattern #5",
    "approved": false,
    "tags": [
      "Puzzles",
      "Fundamentals",
      "Lists",
      "Data Structures",
      "Numbers",
      "Data Types",
      "Integers",
      "Arrays",
      "Basic Language Features"
    ]
  },
  {
    "id": "59bf48a34603879a46000054",
    "name": "Guess the integer #1",
    "approved": false,
    "tags": [
      "Puzzles",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Integers",
      "Advanced Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "59c0fb3d8bcb77ed460000bc",
    "name": "Guess the float #1",
    "approved": false,
    "tags": [
      "Puzzles",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Advanced Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "59f705d8a01431489c00005d",
    "name": "Scuba Diving Safety: Oxygen Toxicity",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Objects",
      "Data Types",
      "Numbers",
      "Conditional Statements",
      "Control Flow",
      "Basic Language Features",
      "Physics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5a03cf478ba914e2ad00009e",
    "name": "Simple Fun #377: The Visible Posters II",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Performance"
    ]
  },
  {
    "id": "5a0511b8697598c8c9000069",
    "name": "Dota 2 Bots - Pudge's Meat Hook",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Geometry",
      "Algebra",
      "Games"
    ]
  },
  {
    "id": "5a061cb7c9fc0eb0530005be",
    "name": "Johnny the Poker Player - What is my equity?",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Fundamentals"
    ]
  },
  {
    "id": "5a0b53b506d5b648300000c4",
    "name": "Cryptography Challenge - Log of Lights",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games",
      "Sequences",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5a2616bf1f7f70729b0000cf",
    "name": "Simple Fun #386: Find The Maximum Sum Value Of Two Ranges In An Array",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5a27692ff28b8257f500003b",
    "name": "Simple Fun #388: Erase Line Segments",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5a43126f8f27f2d77500006d",
    "name": "Coins Exchange",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Dynamic Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5a46d1c4b3bfa8e02f00002f",
    "name": "Scan sort.",
    "approved": false,
    "tags": [
      "Algorithms",
      "Sorting",
      "Logic"
    ]
  },
  {
    "id": "5a539cdbcadebfac4000035d",
    "name": "[BF] Build the heap",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5a6a4f2d7852c65b09001b54",
    "name": "Retirement Planning as a Service",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5a73d7d6fd8c068ec2000003",
    "name": "Simple Fun #392: Count Robot",
    "approved": false,
    "tags": [
      "Algorithms",
      "Puzzles",
      "Games",
      "Mathematics",
      "Logic",
      "Numbers",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5a77f87ffd5777ef15000041",
    "name": "Domino Tiling - M x N Board with Holes",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5a7c1e76373c2efdca0000c1",
    "name": "[BF] Top View Pyramid",
    "approved": false,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "5a8382d5373c2ea42d00003c",
    "name": "Move the SVG!",
    "approved": false,
    "tags": [
      "Algorithms",
      "SVG",
      "Formats",
      "Graphics",
      "Case/Switch Statements",
      "Conditional Statements",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "5a8de339fd5777ebab000173",
    "name": "Find kth to last element of singly-linked list",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Linked Lists",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "5a9581515084d766ad0000fa",
    "name": "[BF] Addition Expression Calculator",
    "approved": false,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5a95c475fd57777828000053",
    "name": "[BF] Simple Regular Expression Matcher",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "5ab3ca3f379d202ed9000018",
    "name": "Max sum of k differences in array",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Interview Questions"
    ]
  },
  {
    "id": "5ab3deb4e7093b5a2800014c",
    "name": "Vanilla Neural Network from scratch",
    "approved": false,
    "tags": [
      "Algorithms",
      "Machine Learning",
      "Applied Computer Science",
      "Logic",
      "Neural Networks",
      "Networks"
    ]
  },
  {
    "id": "5ac6ec892f45cef6a7000030",
    "name": "Eulerian motion",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Fundamentals"
    ]
  },
  {
    "id": "5acdf1d24d7d54b9fa000163",
    "name": "Stenography 4 Life",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5ad066d2cd5468a573000075",
    "name": "BruteForceFramework",
    "approved": false,
    "tags": [
      "Algorithms",
      "Frameworks"
    ]
  },
  {
    "id": "5adb228d2f10c6d3b800006c",
    "name": "Keys, their drawings and ancient symbols",
    "approved": false,
    "tags": [
      "Puzzles",
      "Security",
      "Fundamentals"
    ]
  },
  {
    "id": "5b0411e33e9715b2130002ee",
    "name": "Clock Lock - Save the World, Time Traveler! :)",
    "approved": false,
    "tags": [
      "Algorithms",
      "Security"
    ]
  },
  {
    "id": "5b093ee624c068bdce0000a1",
    "name": "Scientific Computing in Fortran #4 - Fast Fourier Transform",
    "approved": false,
    "tags": [
      "Algorithms",
      "Performance"
    ]
  },
  {
    "id": "5b17a64044342207800000b9",
    "name": "Simple non-decreasing array",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5b1f71609e40b9f10f00002f",
    "name": "Cracking CRC32",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Performance",
      "Mathematics",
      "Numbers",
      "Binary"
    ]
  },
  {
    "id": "5b3f264819b10e6bfa0000a2",
    "name": "The shortest path between two cities",
    "approved": false,
    "tags": [
      "Algorithms",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "5b77b5fe2972374ad0000ad4",
    "name": "[BF] Multiply (Huge Numbers)",
    "approved": false,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "5b7aceadf643c4484e00016b",
    "name": "Block-exchanging reverse",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5ba1bb14fe9a891b780000d2",
    "name": "Num & Block -- Play game Series #13",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5bd816e0b8a08a8299000063",
    "name": "Tap into Reivhax's robot",
    "approved": false,
    "tags": [
      "Puzzles",
      "Security",
      "Games",
      "Cryptography"
    ]
  },
  {
    "id": "5be3485b9bd71e334300008f",
    "name": "Poor man's spreadsheet API",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Performance",
      "Expressions",
      "Basic Language Features",
      "Algorithms",
      "Logic",
      "Parsing",
      "Strings"
    ]
  },
  {
    "id": "5bec481d51b820371d0006b0",
    "name": "Equation Counter",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5bf19c580934aa1cdb000210",
    "name": "Forking Knights ",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5c205f720b7443d9f7000057",
    "name": "[BF] Mathematical Expression Calculator",
    "approved": false,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "5c25f037cd7f4300150ab3be",
    "name": "Number of Participants based on your percentile",
    "approved": false,
    "tags": [
      "Algorithms",
      "Statistics",
      "Data",
      "Logic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "5c2f9d95fea5323cee220bfc",
    "name": "Fat Ninjas",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Data Types",
      "Data Structures"
    ]
  },
  {
    "id": "5c3354bb77bd72000a1915aa",
    "name": "RegEx Like a Boss #6: Valid Parenthesis",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5c41e6d63dd41b23b71ca447",
    "name": "The Goobles Challenge - Part 1",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5c42747cdbd9953ab86d2a38",
    "name": "Arthur's Wallpaper",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5c4c8821474827442320a972",
    "name": "Letter calculator",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Arithmetic",
      "Mathematics",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "5c693ac5a425fc7afee20637",
    "name": "Arithmetic function plotter",
    "approved": false,
    "tags": [
      "Fundamentals",
      "ASCII",
      "Character Encodings",
      "Formats",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Arrays",
      "Decimals",
      "Strings"
    ]
  },
  {
    "id": "5c77eea0491bc966b2606ac3",
    "name": "A foot in the door - disable the SecurityManager",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games",
      "Security"
    ]
  },
  {
    "id": "5c914f2ae041fe000e8964ee",
    "name": "Reactive programming: #3 Premier operators",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5c91f503ac8b333aa73120d4",
    "name": "Reactive programming: #4 Pipelining operators",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5c92b57e48491c3f87c62c89",
    "name": "Reactive programming: #5 Observable juggling",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5c92dc01a04bd50eeef86c15",
    "name": "Reactive programming: #6 The Observable Monad",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5ca1ff4f86eed5000c0e5014",
    "name": "Some kind of CSS keyframes implementation",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Animation",
      "Graphics",
      "Arrays",
      "Data Types",
      "Objects"
    ]
  },
  {
    "id": "5cbf1a1e31fd82000142344c",
    "name": "The number of digits of a power of 2",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5ce8b6980bab0b00212fb305",
    "name": "The Hardest Math Olympiad Problem",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Theorem Proving"
    ]
  },
  {
    "id": "5d00c013cfd096001cfc7ec9",
    "name": "Car Wars",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5d028058cfd096001303d46c",
    "name": "Shelve your trophies",
    "approved": false,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "5d144e6dbac0b8001e450a48",
    "name": "Subtyping Mutable References",
    "approved": false,
    "tags": [
      "Puzzles",
      "Theorem Proving"
    ]
  },
  {
    "id": "5d22f00ac45927000d0b17c5",
    "name": "Inductive types are initial algebras",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5d2c2f5640459900205ded13",
    "name": "Java SecurityManager basics",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5d35f7ad35a1440019d0e969",
    "name": "Triad Chord Classifier",
    "approved": false,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5d4340a081bbed0012e064fc",
    "name": "The Golden rule,  solve for odic values",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5d4ae6bfe4e39d00240bc0ac",
    "name": "Thread Bomb",
    "approved": false,
    "tags": [
      "Puzzles",
      "Advanced Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "5d609efa4f9dc80026d6a3aa",
    "name": "Will you win BIG?",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5da82e8712f2c6001eebc5d2",
    "name": "Number of combinations to the nth step",
    "approved": false,
    "tags": [
      "Algorithms",
      "Iterators",
      "Control Flow",
      "Object-oriented Programming",
      "Basic Language Features",
      "Fundamentals",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5daa7b59e8e4a900122c224f",
    "name": "Verified Majority Element",
    "approved": false,
    "tags": [
      "Algorithms",
      "Theorem Proving"
    ]
  },
  {
    "id": "5db1c7e8088145002aaa6ae3",
    "name": "Two Way Military Time Converter",
    "approved": false,
    "tags": [
      "Algorithms",
      "Dates/Time",
      "Data Types",
      "Strings",
      "Parsing",
      "Logic",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Fundamentals"
    ]
  },
  {
    "id": "5dbf1af9576239000f96d309",
    "name": "String combinations with recurrence ",
    "approved": false,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Permutations",
      "Logic"
    ]
  },
  {
    "id": "5dc559de25911600137d021a",
    "name": "Wrong palindrome",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5de87d3714199a0015d7814c",
    "name": "Imperial fractions",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5dea143cf1a80a000167d12e",
    "name": "Word Break",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5df6bad273aa2c00257dbe8a",
    "name": "Extreme Large Numbers Vocabulary  ±((1e+66)-1) in English",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5e2882ce341a83003438d857",
    "name": "Courier 🚚",
    "approved": false,
    "tags": [
      "Puzzles",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5e2c952fe37ed600157916a2",
    "name": "Localization validation",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5e38acdc12e327002df40fc8",
    "name": "Heads or Tails - Which is stronger? And How Strong?",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Games",
      "Arrays",
      "Data Types",
      "Logic"
    ]
  },
  {
    "id": "5e3d2d095de3f800108e99a7",
    "name": "Calculate daily accurate interest for a bank account",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5e4fc926b499e2000fba8d88",
    "name": "Dijkstra's Dilemma",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5e524eaf97f43f0010135ab2",
    "name": "Unicode Characters & Lines",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5e56e0fd67ef0f002f51bce2",
    "name": "One for His Nob: Scoring Cribbage Hands",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5e621b0805fa2c002bb996ae",
    "name": "Taking the wagon to market",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5e63cf046353a4000fb15225",
    "name": "Flights itinerary",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5e6d2cc034db38002bb9adca",
    "name": "Evaluate A Keno Board",
    "approved": false,
    "tags": [
      "Algorithms",
      "Games",
      "Logic"
    ]
  },
  {
    "id": "5e750dd4626ac30012e35c77",
    "name": "Escape the Aliens",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games",
      "Functions",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Lists",
      "Data Structures",
      "Arrays",
      "Data Types",
      "Algorithms",
      "Logic",
      "Advanced Language Features"
    ]
  },
  {
    "id": "5e822a2d0ab7970017dd8ae8",
    "name": "Convert icacls.exe output to json string",
    "approved": false,
    "tags": [
      "Fundamentals",
      "JSON",
      "Formats"
    ]
  },
  {
    "id": "5e8bd9c9bc78a30033efe830",
    "name": "Is this a rectangle?",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Geometry",
      "Algebra",
      "Validation"
    ]
  },
  {
    "id": "5e8dccdb8a011a0028a3f5f8",
    "name": "Sum of Multiples of 3 or 5 Below A Given Number",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5e95a43ee32f8a00183a95ab",
    "name": "Maximum function value",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Performance"
    ]
  },
  {
    "id": "5ea0f6ffe12c94001e82e4e0",
    "name": "Limit of the arithmetic mean",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Theorem Proving"
    ]
  },
  {
    "id": "5ea806698dbd1a001af955f3",
    "name": " RPG Simulator - Defeat the Demon Lord! [Part 2]",
    "approved": false,
    "tags": [
      "Algorithms",
      "Games"
    ]
  },
  {
    "id": "5eb015e2e24b8300327120ec",
    "name": "Scoring HTML Test Question",
    "approved": false,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic"
    ]
  },
  {
    "id": "5eb16a63739e3900291d5dd3",
    "name": "Matrix Calculator",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5eb1a2b6e24b83001e75cc71",
    "name": "master_pizza_slicer",
    "approved": false,
    "tags": [
      "Puzzles",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Games",
      "Numbers"
    ]
  },
  {
    "id": "5eb4186d508d49000145c793",
    "name": "Squareful segments",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5eb71c5981e686000105ad61",
    "name": "Resolving the Goldbach conjecture! (Part 2)",
    "approved": false,
    "tags": [
      "Bugs"
    ]
  },
  {
    "id": "5eda69b45a5b5c002e1a4c01",
    "name": "Verified cartesian tree",
    "approved": false,
    "tags": [
      "Algorithms",
      "Theorem Proving"
    ]
  },
  {
    "id": "5edb34287115e9002b83e063",
    "name": "Break the encryption",
    "approved": false,
    "tags": [
      "Puzzles",
      "Encryption",
      "Algorithms",
      "Cryptography",
      "Logic",
      "Security"
    ]
  },
  {
    "id": "5edb7119dfc86200246a24fb",
    "name": "Planning a city quarantine",
    "approved": false,
    "tags": [
      "Algorithms",
      "Optimization",
      "Performance"
    ]
  },
  {
    "id": "5ee17ff3c28ec6001f371b61",
    "name": "Coping with NP-Hardness #4: 3-Recoloring",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5efa0e7bc41b4e0019993895",
    "name": "Sungka",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5efb0d8ad4a55a0015994d01",
    "name": "Build your own dice",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5f016914f71133002d5cb159",
    "name": "Limit of a uniformly convergent sequence of functions",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Theorem Proving"
    ]
  },
  {
    "id": "5f05e270fa2ae0001be4e345",
    "name": "Zero Sequence",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5f0a511377032800281f048a",
    "name": "Finding a Circulation",
    "approved": false,
    "tags": [
      "Algorithms",
      "Graphs",
      "Data Structures",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals",
      "Networks",
      "Logic"
    ]
  },
  {
    "id": "5f0e82810307aa0025497600",
    "name": "Approximating a higher-order differential equation using Euler's method",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5f32db85c6197b0017ff6b47",
    "name": "Bresenham Circle Algorithm",
    "approved": false,
    "tags": [
      "Algorithms",
      "Graphics"
    ]
  },
  {
    "id": "5f3792a153f391002e8245b9",
    "name": "Build a Bridge",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5f3c285471834c0029f03dd1",
    "name": "Separating Axis Theorem",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5f4d3305e0be5a0001b40a79",
    "name": "Dual Order Also Well Order implies Finite",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5f4e71f318330d0029298b9b",
    "name": "Prison Escape!!(via coins on chessboard)",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5f54c7ce1d026a000f398f8f",
    "name": "Functional JSON",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Esoteric Languages",
      "Interpreters",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5f60c6a2cecf9e0016e4fb37",
    "name": "Recursive map",
    "approved": false,
    "tags": [
      "Algorithms",
      "Maps",
      "Data Structures",
      "Map/Reduce",
      "Logic"
    ]
  },
  {
    "id": "5f8544e485311d0025641250",
    "name": "Jobs",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Puzzles",
      "Games",
      "Fundamentals"
    ]
  },
  {
    "id": "5f8597e830b05d00195eb058",
    "name": "Naming the Book (Ver 2)",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5f92de2119e78f000f25609f",
    "name": "Approximate a number as fraction",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5f97f4634da4920032b4c93d",
    "name": "Picross - generate clues",
    "approved": false,
    "tags": [
      "Algorithms",
      "Games"
    ]
  },
  {
    "id": "5f99e966ad16b5002bb3a059",
    "name": "Increment a variable ...",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Esoteric Languages",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5fa49cfb19923f00299eae22",
    "name": "Guitar #1: Find the frets",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5fb0c349ace07700122a2ffb",
    "name": "Gif Animation and Transparency",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5fbeb2efc621ea002b7ff771",
    "name": "Numerical Solution of Initial-Value Problems",
    "approved": false,
    "tags": [
      "Algorithms",
      "Numerical Analysis",
      "Logic"
    ]
  },
  {
    "id": "5fc25e1529234500105ece42",
    "name": "Connect the dots - how many laps?",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "5fdb28d8d781dc0022059cce",
    "name": "A+B=B+A? Prove it in using DataKinds!",
    "approved": false,
    "tags": [
      "Algorithms",
      "Theorem Proving",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5fe5e1de2eba8e00172a3ab8",
    "name": "Ingenious: Score Board",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Classes",
      "Basic Language Features",
      "Lists",
      "Data Structures"
    ]
  },
  {
    "id": "5ff9ed2485c7ea000e072ae3",
    "name": "Draw the borders III - Fancy borders",
    "approved": false,
    "tags": [
      "Algorithms",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Logic",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "600450d670281e00253a9cbc",
    "name": "An Intro to Quantum Concepts #2",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "6006e0534c5c7a001dc24434",
    "name": "Scrabble Checker",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Games",
      "Lists",
      "Data Structures",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "60153f824fc0f800080f7f02",
    "name": "Guess a secret prime number through the yield/send mechanism",
    "approved": false,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "60384d957d61790018e627ff",
    "name": "Candlestick Chart",
    "approved": false,
    "tags": [
      "Fundamentals",
      "SQL",
      "Databases",
      "Information Systems",
      "Data"
    ]
  },
  {
    "id": "603f02108877b000164f290f",
    "name": "Shortest math expression",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "605911079dc8e4001b3fc0f2",
    "name": "Let the machine learn to play cricket alone!",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "6096b89297c91e0007e561e1",
    "name": "Program verification: the modulus function",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Theorem Proving"
    ]
  },
  {
    "id": "609e3b4d91b67a003eff2b2a",
    "name": "Seven Segment Time Display",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "609ea4ed91b67a003e2a4c13",
    "name": "8-bit encryption",
    "approved": false,
    "tags": [
      "Algorithms",
      "Encryption",
      "Cryptography",
      "Logic",
      "Security",
      "Decryption",
      "Binary",
      "Bits"
    ]
  },
  {
    "id": "60b0023efe621e00568970fe",
    "name": "Sort numbers alphabetically",
    "approved": false,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Sorting",
      "Logic"
    ]
  },
  {
    "id": "60b76ecdbec5c4003163f869",
    "name": "Lambda Calculus: Lists as folds II",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "60b897285e6e130006a0ba42",
    "name": "Unconditional sorting",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Puzzles",
      "Games",
      "Optimization"
    ]
  },
  {
    "id": "60d47a843269f800063f67d0",
    "name": "Typed Objects",
    "approved": false,
    "tags": [
      "Algorithms",
      "Objects",
      "Data Types",
      "Proxy",
      "Design Patterns",
      "Design Principles"
    ]
  },
  {
    "id": "60ff1f63c9a4fd005be7ec0c",
    "name": "Engineering mechanics: reactions on a simply-supported beam",
    "approved": false,
    "tags": [
      "Algorithms",
      "Linear Algebra",
      "Algebra",
      "Mathematics",
      "Logic"
    ]
  },
  {
    "id": "610ec5e6ea018f0042a6f817",
    "name": "Mini-project: Fiscal Reports",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "6115701cc3626a0032453126",
    "name": "Competition results (code golf)",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "61488fde47472d000827a51d",
    "name": "Is this a valid Chess 960 position?",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "6153b7100f76ac004f59b94a",
    "name": "Noisy Data Channel - Jungle Version",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "6175c23df1c7eb005c4eb39b",
    "name": "Roman numerals extended",
    "approved": false,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "61771d1cf1c7eb004b7329f0",
    "name": "Kingdoms Ep5: The Great Inquisitor's escape",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types",
      "Basic Language Features",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "618e3241e6d3a8003e806b27",
    "name": "Find Secret Cosine Formulas",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Algebra",
      "Sequences",
      "Arrays",
      "Data Types",
      "Optimization",
      "Fundamentals",
      "Puzzles",
      "Games",
      "Strings"
    ]
  },
  {
    "id": "6195e1e8ffad8e0007d0c3c9",
    "name": "Finding Happy Prime Numbers",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Puzzles",
      "Games",
      "Performance"
    ]
  },
  {
    "id": "61a53a8b085ad0001b43b351",
    "name": "Simple Baseball Score Calculator",
    "approved": false,
    "tags": [
      "Puzzles",
      "Rules",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Data Structures"
    ]
  },
  {
    "id": "61aba5e564cd720008ed3bf3",
    "name": "Firing squad synchronisation",
    "approved": false,
    "tags": [
      "Puzzles",
      "State Machines",
      "Computational Science",
      "Theoretical Computer Science",
      "Design Patterns"
    ]
  },
  {
    "id": "61bd5745bb34e40033c33972",
    "name": "Cold Turkey",
    "approved": false,
    "tags": [
      "Algorithms",
      "Formatting",
      "Logic"
    ]
  },
  {
    "id": "61c1470af0030b00230b74ce",
    "name": "Permutating a List",
    "approved": false,
    "tags": [
      "Algorithms",
      "Permutations",
      "Logic"
    ]
  },
  {
    "id": "61c49a1045dba2004e7acd1f",
    "name": "Quine function",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "61e2a8aded0d770055939d6f",
    "name": "Narcissistic number with constant base",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "61eee5cd577f05001db182bc",
    "name": "Get the method reference from the lambda",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Lambdas",
      "Functional Programming",
      "Functions",
      "Declarative Programming",
      "Programming Paradigms",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "61f3e676e3436dd4dfcf6af5",
    "name": "Find the remainder of the division by 4",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "620f287d83ba7e0047a4affe",
    "name": "Uniform Milk Production",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "6223267e7b048e005d63cb36",
    "name": "The 95 Theses",
    "approved": false,
    "tags": [
      "Algorithms",
      "Performance"
    ]
  },
  {
    "id": "622736b8737f01004ae9eeec",
    "name": "socket server [client-side]",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "62287e1766b26a0024b9e806",
    "name": "Shortest Knight Path(Infinite Chessboard)",
    "approved": false,
    "tags": [
      "Algorithms",
      "Performance"
    ]
  },
  {
    "id": "6229c671cf4a6e005d132c9d",
    "name": "flask webserver or something #2 [POST]",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "52aa64378d8ac51ec8000efb",
    "name": "Triple Trouble",
    "approved": false,
    "tags": [
      "Algorithms",
      "Games"
    ]
  },
  {
    "id": "52e77721ba20f95a440004c9",
    "name": "Simulating a Multiserver Queue",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5370d7403dbb0bda42000c6f",
    "name": "Subnet Calculating",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types",
      "Basic Language Features",
      "Fundamentals",
      "Binary",
      "Bits",
      "Functions",
      "Control Flow",
      "Mathematics",
      "Numbers",
      "Parsing",
      "Strings",
      "Validation"
    ]
  },
  {
    "id": "54249d91c8386d1c0d0006dd",
    "name": "Re-entrant Mutex (aka Counting Mutex)",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5465e8447b8c38c6b20007b9",
    "name": "Poker Hands",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Games"
    ]
  },
  {
    "id": "54733daf950282b14f000cf1",
    "name": "Tile Map Path Finding",
    "approved": false,
    "tags": [
      "Algorithms",
      "Games",
      "Logic",
      "Puzzles"
    ]
  },
  {
    "id": "54fb50e62c8785d5fa000623",
    "name": "Mazerunner",
    "approved": false,
    "tags": [
      "Algorithms",
      "Puzzles",
      "Games",
      "Graphs",
      "Data Structures",
      "Logic"
    ]
  },
  {
    "id": "5511e549f237b10811000954",
    "name": "Date Range Formatter",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "55191a2bcd82ffd5070006fd",
    "name": "Sparse  Ruler",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "554362a749c6028f06000007",
    "name": "Kerckhoffs's principle",
    "approved": false,
    "tags": [
      "Puzzles",
      "Cryptography",
      "Security",
      "Bits",
      "Binary",
      "Games",
      "Ciphers",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "556d55f46dbb07a5e900006c",
    "name": "Linear Regression with One Variable",
    "approved": false,
    "tags": [
      "Algorithms",
      "Machine Learning",
      "Applied Computer Science",
      "Logic"
    ]
  },
  {
    "id": "556eccbced5a989438000051",
    "name": "Workaholics' schedule",
    "approved": false,
    "tags": [
      "Algorithms",
      "Dates/Time",
      "Data Types",
      "Parsing",
      "Logic",
      "Strings"
    ]
  },
  {
    "id": "557dc8d1b19b9d6ab500002b",
    "name": "Paul's study plan",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "558fb8a7d1e202e664000146",
    "name": "Doomsday Basic",
    "approved": false,
    "tags": [
      "Algorithms",
      "If-then-else Statements",
      "Conditional Statements",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "55d2eb4e13e1c3d1b90000a3",
    "name": "The map and the keys",
    "approved": false,
    "tags": [
      "Puzzles",
      "Search",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "55dfb7be3a3603f32100005a",
    "name": "Where's the field?",
    "approved": false,
    "tags": [
      "Puzzles",
      "Esoteric"
    ]
  },
  {
    "id": "55e773ab0d96db01ab00004a",
    "name": " categorised search results",
    "approved": false,
    "tags": [
      "Algorithms",
      "Search",
      "Logic",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5611a112f296612fe300003c",
    "name": "Best GF (Guardian Force) junctions based on compatibility",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Graphs",
      "Data Structures",
      "Sorting"
    ]
  },
  {
    "id": "562d18d5e661819ead000008",
    "name": "Playfair cipher",
    "approved": false,
    "tags": [
      "Algorithms",
      "Ciphers",
      "Cryptography",
      "Logic",
      "Security",
      "Strings",
      "Data Types",
      "Encoding",
      "Decoding"
    ]
  },
  {
    "id": "5649b84bf237f5efa5000077",
    "name": "Working with arithmetic progressions",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Declarative Programming",
      "Programming Paradigms",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types",
      "Sequences",
      "Arrays",
      "Optimization"
    ]
  },
  {
    "id": "5679ac2430001a7afe000055",
    "name": "Basic HTTP Response Class",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "569cd287058f6c952d000036",
    "name": "Brick cost calculator",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "56a2e7373661dfb62c000039",
    "name": "Symmetry projection on the dihedral group of order 2",
    "approved": false,
    "tags": [
      "Puzzles",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "56a4fdad79a5c8cb8a000021",
    "name": "Solving a Soma Cuboid",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games",
      "Arrays",
      "Data Types",
      "Algorithms",
      "Logic",
      "Geometry",
      "Algebra",
      "Mathematics"
    ]
  },
  {
    "id": "56abe61d1a2def3f8700001b",
    "name": "IRR Calculation - evaluation of profitability",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "56b8889bf188760f84000b90",
    "name": "Find the Next Powers Higher than a Given Value  With Given Constraints",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Algorithms",
      "Logic",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Optimization",
      "Declarative Programming",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "56c4a2c803a14dd036000976",
    "name": "Learning Remote Control",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "56d911d64ad74ec9ef000035",
    "name": "hjyao's Kata #2",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "56f6de9c9400f5b7d8001190",
    "name": "Integer Triangles I: Maximum Number of Integer Triangles with the Smallest Perimeter",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arithmetic",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Control Flow",
      "Basic Language Features",
      "Data Structures",
      "Data Types",
      "Geometry",
      "Algebra"
    ]
  },
  {
    "id": "56fd0d6445040066b4001e04",
    "name": "Mahjong II: Is this complex set a winning set?",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "570a3bd49cd34a8a740012c7",
    "name": "Find a cycle",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "57180805938fcd690a0000a9",
    "name": "Christmas Tree, Decorated",
    "approved": false,
    "tags": [
      "Puzzles",
      "Trees",
      "Data Structures"
    ]
  },
  {
    "id": "5722f12e729744166e0014f3",
    "name": "JSON.stringify with indentation",
    "approved": false,
    "tags": [
      "Algorithms",
      "JSON",
      "Formats",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "572f5cf8636bde48c1000d94",
    "name": "Warrior's adventure",
    "approved": false,
    "tags": [
      "Algorithms",
      "Artificial Intelligence",
      "Machine Learning",
      "Applied Computer Science",
      "Logic",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57329b7e791aaf6807000df2",
    "name": "LZW Compression - Squeeze that data!",
    "approved": false,
    "tags": [
      "Algorithms",
      "Strings",
      "Data Types",
      "Logic"
    ]
  },
  {
    "id": "57376e4712b7b922b80001f4",
    "name": "Triangle in a Square",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Geometry",
      "Algebra"
    ]
  },
  {
    "id": "57545679fd30cc867b000e33",
    "name": "Behavioural measures of a psychophysical threshold.",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5763db5001606b6d9f000003",
    "name": "#1 Beat the Bookmaker",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57679f595dfe8cb026000409",
    "name": "Sum of primes",
    "approved": false,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "57696a24b8ed4a011100132a",
    "name": "Brainunpack",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "578001ca79cdb3c6fc0022c3",
    "name": "Clean Slate",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5781f7e9d648a14eb800005c",
    "name": "Mahjong - #4 Play with imagination!",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Games"
    ]
  },
  {
    "id": "5784874db35aa3e6760000e7",
    "name": "Stableford Score Calculator",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Fundamentals"
    ]
  },
  {
    "id": "5788e6b090b2f34e0e0000e4",
    "name": "Just Another String Comparer",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types",
      "Numbers"
    ]
  },
  {
    "id": "578af047e9fd1578fe00000d",
    "name": "Fantasy Football Showdown!",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Hashes",
      "Data Structures",
      "Loops",
      "Control Flow",
      "Basic Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "57931c9a4be912ef78000057",
    "name": "Maze Exit",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "57974fd039f33a21e3000b5a",
    "name": "Making music (sort of)",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "579e3ccee298a75c4b000075",
    "name": "Finish NxN Array Tic-Tac-Toe Game",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "57dc757e8d7f5afc6f0014b1",
    "name": "Superphore Master",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "57e23d378a8b8de758000b41",
    "name": "myjinxin katas #004 : Soldier's queue training(easy version)",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "57fbf3c460a4f6b45d00011c",
    "name": "Matrices III: The ultimate matrix",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Structures",
      "Algebra",
      "Linear Algebra",
      "Arrays",
      "Data Types",
      "Lists"
    ]
  },
  {
    "id": "57fed94368d4775c320000c2",
    "name": "Possible Triangles Formed with Available Iron Rods",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Data Structures",
      "Algorithms",
      "Logic",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Geometry",
      "Algebra",
      "Optimization",
      "Declarative Programming",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "57ff9191d2bf861ce2000022",
    "name": "Friday the 13th Birthday",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Logic"
    ]
  },
  {
    "id": "58030766db07c5c8f6000977",
    "name": "Generic Ball Clock",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "580f756d4d8fbd84f70000d0",
    "name": "Author Disambiguation: Signatures worth it",
    "approved": false,
    "tags": [
      "Algorithms",
      "Puzzles",
      "Games",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "58278683932d0cb06000008f",
    "name": "Help Mr... Dr. Strange to bargain!",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "582945e8ef8d4488d200024d",
    "name": "Not that obvious summation",
    "approved": false,
    "tags": [
      "Algorithms",
      "Arithmetic",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "582c5e80fc090baf3c00015a",
    "name": "Barbell racking calculator",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "582f61d6fe3801bc50000175",
    "name": "Finding North",
    "approved": false,
    "tags": [
      "Puzzles",
      "Algorithms",
      "Logic",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "58309a29db57291072000083",
    "name": "Schedule a conference call",
    "approved": false,
    "tags": [
      "Algorithms",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "583a19aab468c08628000199",
    "name": "The Best Combination",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "583f427e18b81e05290001b6",
    "name": "Dart quest - What hits do you need to make a perfect finish?",
    "approved": false,
    "tags": [
      "Algorithms",
      "Permutations",
      "Logic"
    ]
  },
  {
    "id": "5840f1736312ce1bab0000db",
    "name": "Hold'em Holecard Combinatorics ",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Algebra",
      "Mathematics"
    ]
  },
  {
    "id": "584207a563b25efbb2000076",
    "name": "Simple BDD testing utility",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Testing"
    ]
  },
  {
    "id": "5845ccfd50be6363bd000047",
    "name": "Operationalism",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Puzzles",
      "Games",
      "Arrays",
      "Data Types",
      "Integers",
      "Numbers"
    ]
  },
  {
    "id": "584d323bca93addf92000080",
    "name": "LZW Compression (and decompression)",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "589959bf5eda2c742f000177",
    "name": "Alternative Truth Machine",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "58997cea2481724dfd0000d8",
    "name": "Is a point inside an random area...",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5899c1db409cf825f7000627",
    "name": "Minimum number of terms needed to find sum in Geometric Series",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Arithmetic",
      "Data Types",
      "Sequences",
      "Arrays"
    ]
  },
  {
    "id": "58b5e8e0c7500953100000f2",
    "name": "Spies!  Expose the dirty  double crossers",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "58b866e443e6e85aa7000058",
    "name": "Braces with content",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Trees",
      "Data Structures"
    ]
  },
  {
    "id": "58beae19749f3d3e80000103",
    "name": "Funny jubilees",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "58e664b2ace2cc9246000170",
    "name": "Get Me Outa Here!",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "58e78ea9e89cdd0e3700001b",
    "name": "Unofficial  FCC Challenge -- Basic Algorithm Scripting -- Mutations",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "58f3a892f4447fe222000021",
    "name": "Rotate Rectangles By 45 Degree Jumps",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Types",
      "Arrays"
    ]
  },
  {
    "id": "58f8dbc387f729195300003c",
    "name": "Getting the neighbors",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "592cc209912f2207330001b1",
    "name": "ASCII Logo Basic",
    "approved": false,
    "tags": [
      "Puzzles",
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types",
      "Encoding",
      "Arrays"
    ]
  },
  {
    "id": "5943f1d6ed724ca56f000022",
    "name": "Yu-Gi-Oh! kata: kaiba's Ultimate dream",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "595114d3438dbfb568000236",
    "name": "My friends' circles",
    "approved": false,
    "tags": [
      "Algorithms",
      "Graphs",
      "Data Structures"
    ]
  },
  {
    "id": "5958f152dd0b28d29500000e",
    "name": "Tic Tac Toe. Who will win?",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "596b467d61c22e9afe00000b",
    "name": "D&D Character generator #3: carrying capacity",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "59778ef801fa32738d000158",
    "name": "Cutting Dubs",
    "approved": false,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types",
      "Fundamentals",
      "Logic"
    ]
  },
  {
    "id": "59858fbd480e9bc3c400006f",
    "name": "Chess - Pawn move generator",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Data Types",
      "Data Structures",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Design Principles"
    ]
  },
  {
    "id": "59891e177f0876b0820000c4",
    "name": "Jungerstein's Math Training Room: 5. Cat back",
    "approved": false,
    "tags": [
      "Algorithms",
      "Arithmetic",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "599068018eeef66b44000003",
    "name": "Series Forensics",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "59bb4cc4460387d99a000096",
    "name": "Guess the list pattern #3",
    "approved": false,
    "tags": [
      "Puzzles",
      "Fundamentals",
      "Lists",
      "Data Structures",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Integers",
      "Arrays",
      "Operators",
      "Control Flow",
      "Basic Language Features",
      "Arithmetic"
    ]
  },
  {
    "id": "59bb6e815227dd9004000010",
    "name": "Guess the list pattern #4",
    "approved": false,
    "tags": [
      "Puzzles",
      "Fundamentals",
      "Lists",
      "Data Structures",
      "Strings",
      "Data Types",
      "Numbers",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Integers",
      "Arrays",
      "Operators",
      "Control Flow",
      "Basic Language Features",
      "Arithmetic"
    ]
  },
  {
    "id": "59bd19c7cb7fb4fc3c000001",
    "name": "Guess the list pattern #6",
    "approved": false,
    "tags": [
      "Puzzles",
      "Fundamentals",
      "Lists",
      "Data Structures",
      "Numbers",
      "Data Types",
      "Integers",
      "Arrays",
      "Strings",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "59be7f975fb133828f000027",
    "name": "Guess the string pattern #1 - Advanced",
    "approved": false,
    "tags": [
      "Puzzles",
      "Fundamentals",
      "Lists",
      "Data Structures",
      "Numbers",
      "Data Types",
      "Integers",
      "Arrays",
      "Strings",
      "Control Flow",
      "Basic Language Features",
      "Functions",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "59f0a686d4b36956790001b9",
    "name": "Bit addition!",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5a346d161f7f70b5fa00002c",
    "name": "Print chains",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5a840b625084d70507000128",
    "name": "Stream To Image Step By Step",
    "approved": false,
    "tags": [
      "Puzzles",
      "Decoding",
      "Algorithms",
      "Logic",
      "Games"
    ]
  },
  {
    "id": "5ab7d3ace7093b2dea0000a5",
    "name": "Horse race",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5ac764f12f45ce2cf40000cd",
    "name": "Proofreading task: find all duplicate words in a multilingual text",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Regular Expressions",
      "Declarative Programming",
      "Advanced Language Features",
      "Programming Paradigms",
      "Strings"
    ]
  },
  {
    "id": "5ac8db286bde605096000002",
    "name": "Contact Deduplication",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5ace270b8306179b9800006c",
    "name": "Help Mario get the pipe round that corner!",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5ae7836d68e64497c700006b",
    "name": "Price War",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Control Flow",
      "Basic Language Features",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Optimization",
      "Declarative Programming",
      "Programming Paradigms",
      "Games"
    ]
  },
  {
    "id": "5b59513abdd074895c00004d",
    "name": "League Player Rank",
    "approved": false,
    "tags": [
      "Algorithms",
      "Sorting",
      "Logic",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5b714cc569826c7f2e000028",
    "name": "Combinatorics Series#1 The problem of giving fruits",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5b7d99fa402fb7e31200000e",
    "name": "Try and Give me 5 ",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5b951bfa88d44ab0700000a1",
    "name": "Houda and Value Array",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Data Structures"
    ]
  },
  {
    "id": "5b9df6ba2ab67b975c00054b",
    "name": "Maximum Overkill",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5bb0f5392ce5333b56000301",
    "name": "Distributing Candies Fairly Pro",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5bb925af40196dfe0f000002",
    "name": "Solve Rubik 's Cube by repetition",
    "approved": false,
    "tags": [
      "Algorithms",
      "Parsing",
      "Logic",
      "Strings",
      "Mathematics",
      "Numbers",
      "Performance",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5bd1385ff90023a22a0001fe",
    "name": "Find the Maximum Mean Value in the Array",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types",
      "Dynamic Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5bda276a06a8a606d9000039",
    "name": "Superb resource access control configuration",
    "approved": false,
    "tags": [
      "Algorithms",
      "Recursion",
      "Computability Theory",
      "Logic",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "5bf23f95e50d1b31000000fc",
    "name": "Air-Gapped Hacker: Sending Passwords",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5c04ebcf131c1a166a00009e",
    "name": "Clean your shoes rack",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5c2ff3fed3ed20313fd68a92",
    "name": "Galaxy Getaway",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Data Structures"
    ]
  },
  {
    "id": "5c460c791c07201f368a4593",
    "name": "The Goobles Challenge - Part 2",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5c4b33adbe626a4034a6db46",
    "name": "Punch in - Punch out",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5c5c16f9d7e033631e698817",
    "name": "Where do they meet?",
    "approved": false,
    "tags": [
      "Algorithms",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "5c672841c24ab7463322c84a",
    "name": "BigArray",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5c6b3da6a6aee243b980ad74",
    "name": "Dummy Epoch - find the gap",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "5c70e5677c9e46000ad7eaee",
    "name": "Help Yumi collect all the rings. Part 1",
    "approved": false,
    "tags": [
      "Algorithms",
      "Fundamentals",
      "Logic"
    ]
  },
  {
    "id": "5c7141ac847c7c4af9331e96",
    "name": "Half Prices",
    "approved": false,
    "tags": [
      "Algorithms",
      "Optimization"
    ]
  },
  {
    "id": "5c9068b203b4237e32316244",
    "name": "Kolakoski Sequence",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5ca38970dd83f4002bf1c07c",
    "name": "conexiDad",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Games"
    ]
  },
  {
    "id": "5d26004dc1e94c0029748e63",
    "name": "Oven Optimization",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Optimization"
    ]
  },
  {
    "id": "5d2716cdd8bb9a001387432d",
    "name": "Oven Optimization 2",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Optimization"
    ]
  },
  {
    "id": "5d27fede89bffab4a48dedab",
    "name": "Are Module Boundaries also Security Boundaries?",
    "approved": false,
    "tags": [
      "Puzzles",
      "Reflection",
      "Metaprogramming",
      "Programming Paradigms",
      "Advanced Language Features",
      "Fundamentals"
    ]
  },
  {
    "id": "5d2928b0b90c0a001f343733",
    "name": "Gödel, Escher, Bach: MIU-system",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Performance",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5d29643e0abb7b00018ca140",
    "name": "Exploit indirection to escalate permissions.",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5d2ba61f6ea26c00111936d2",
    "name": "Hidden pixels",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5d433acd863362001d310749",
    "name": "Crazy Arrays",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Functional Programming",
      "Declarative Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5d4b7afe8bbcfd7bb8173cbf",
    "name": "Advanced Typescript Types 1: Range of numbers",
    "approved": false,
    "tags": [
      "Puzzles",
      "Data Types"
    ]
  },
  {
    "id": "5d612f5240d995000da6272b",
    "name": "Spendings for the period",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5d6dcfaa64dabe001fdcf2ed",
    "name": "Binary Range Extraction",
    "approved": false,
    "tags": [
      "Puzzles",
      "Binary",
      "Games"
    ]
  },
  {
    "id": "5d912b595052240001c6cf23",
    "name": "Generate a string to match a regex (reverse regex)",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5d95e0daab4aad000eddeae6",
    "name": "The Scrambled Towers of Hanoi",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5da9e6f828f2c3001154a6eb",
    "name": "Multiline String Maker",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "5dba48db84ccc80001ff390d",
    "name": "MusicTheory #1: Major Scales",
    "approved": false,
    "tags": [
      "Puzzles",
      "Algorithms",
      "Logic",
      "Arrays",
      "Data Types",
      "Fundamentals",
      "Loops",
      "Control Flow",
      "Basic Language Features"
    ]
  },
  {
    "id": "5dccf265c16b1100141015f2",
    "name": "implement an IntStream-like class with a custom API. ",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5dd6999d3f75880020af31a2",
    "name": "Rust Quiz: We Can Prove It!",
    "approved": false,
    "tags": [
      "Puzzles",
      "Logic"
    ]
  },
  {
    "id": "5dedd55d7a3644000f2f8699",
    "name": "Coding Classes in JS like it's 2015",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "5e01fbe21f177f000f4995d7",
    "name": "Rubiks cube CFOP algo : Cross",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "5e1835b0f9d1710031736e16",
    "name": "Measure your card house",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Sequences",
      "Arrays",
      "Data Types",
      "Games"
    ]
  },
  {
    "id": "5e193501bbc85d002c6a6d52",
    "name": "Tricks with Identity Coercions",
    "approved": false,
    "tags": [
      "Puzzles",
      "Esoteric",
      "Modules",
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Advanced Language Features"
    ]
  },
  {
    "id": "5e1e405e72a2cf0019efff51",
    "name": "Regular Polygon Detector",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Geometry",
      "Algebra",
      "Sequences",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5e45099685b5c10030a18252",
    "name": "Creating a custom PHP stream wrapper",
    "approved": false,
    "tags": [
      "Algorithms",
      "Streams",
      "IO"
    ]
  },
  {
    "id": "5e4a620505c5a10018b69947",
    "name": "Silent poison",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5e6b860866990500286587d5",
    "name": "Propositional SAT Problem [Performance]",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Logic",
      "Mathematics",
      "Algorithms",
      "Numbers"
    ]
  },
  {
    "id": "5e787d8b4a26820028d5ac6c",
    "name": "List of numbers in English",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Strings",
      "Data Types",
      "Integers"
    ]
  },
  {
    "id": "5e90f0544af7f400102675ca",
    "name": "Optimal Transportation",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Performance"
    ]
  },
  {
    "id": "5e91d9e5911cba0016844516",
    "name": "Understanding epidemic.",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5e999c76c087b10018e4d94a",
    "name": "Digits of e",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Types",
      "Performance"
    ]
  },
  {
    "id": "5ea81ea9449f540001a2edae",
    "name": "Browse my tree",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5eb1767b3c435d001166d4c6",
    "name": "Optimal sort",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Sorting",
      "Algorithms",
      "Logic",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5eb3deebbb3b420032fd374b",
    "name": "Opening Hours of the Three Broomsticks Inn",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5ebe2d23bf24f5000f0c3724",
    "name": "Corona Chaos: TP-Delivery",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5ecbe635b82876002d3f40b1",
    "name": "Aloy - Hunter & Machine animals world #1",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms",
      "Design Principles",
      "Objects",
      "Data Types"
    ]
  },
  {
    "id": "5edfad4b32ebb000355347d2",
    "name": "Coping with NP-Hardness #2: Max Weight Independent Set of a Tree",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5ee2ae78c603d3001fc42f5e",
    "name": "Telephone Pictionary",
    "approved": false,
    "tags": [
      "Algorithms",
      "Games"
    ]
  },
  {
    "id": "5f04a3e74e788a002e90b788",
    "name": "Matchmaking Algorithm for Competetive Game",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Optimization"
    ]
  },
  {
    "id": "5f283fe80dc7f3002edd5eb4",
    "name": "ToSarcastic",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5f2b67a2f35718001cc39699",
    "name": "Balancing planes",
    "approved": false,
    "tags": [
      "Algorithms",
      "Physics",
      "Logic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "5f2ccaf7e568cf00016b72e9",
    "name": "Count the number of instances of three identical digits on a four-digit digital  clock",
    "approved": false,
    "tags": [
      "Algorithms",
      "Dates/Time",
      "Data Types",
      "Arithmetic",
      "Mathematics",
      "Logic",
      "Numbers",
      "Strings"
    ]
  },
  {
    "id": "5f303847fb6eb4001fce17a2",
    "name": "Bresenham Line Drawing",
    "approved": false,
    "tags": [
      "Algorithms",
      "Graphics"
    ]
  },
  {
    "id": "5f389ade7470090015be6530",
    "name": "Manage Video Conference Tiles",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5f588b0a01e9c60010d7352e",
    "name": "Find Three Most-Occurring Words in a String",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "5f79a0bf8c85ce001aa089fa",
    "name": "Make very big numbers readble for humans",
    "approved": false,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Big Integers",
      "Integers",
      "Formats"
    ]
  },
  {
    "id": "5f7ea314d8bea4002a2e2c93",
    "name": "Gary's Game - Under Fire ",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Games",
      "Dynamic Arrays",
      "Arrays",
      "Functional Programming",
      "Data Types",
      "Declarative Programming",
      "Programming Paradigms",
      "Vectors"
    ]
  },
  {
    "id": "5f84997d7f0d760015f2626e",
    "name": "Splits into different multipliers",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5f8ae9cdffbbbf00166ecda8",
    "name": "Naming the Book (Ver 1)",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers",
      "Data Types",
      "Strings"
    ]
  },
  {
    "id": "5fb5b345357224002190292d",
    "name": "The lockbox",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "5fcd4cacba9fee002119bf94",
    "name": "Competitive team forming",
    "approved": false,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "5fd8e0c843b49e0026d5687b",
    "name": "Enumerating Trees",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "5fda1583a5112c00267ff237",
    "name": "Moduli Number System II",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Numbers",
      "Data Types",
      "Mathematics",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "5fe0fabb14b66600090dad75",
    "name": "Rectangular Subsets of Tiles in Square Grids (Fixed)",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "60228a9f85a02c0022379542",
    "name": "Longest Subarray with Maximum Average Value (Challenge Version)",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Performance"
    ]
  },
  {
    "id": "603545a7fe5c8700183166dc",
    "name": "Method Overloading: Operating on basic data types.",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "6046d30cca38d300166f550e",
    "name": "3D Sudoku Builder (a.k.a. multisize skyscraper puzzle)",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "604c5f710df61100129caa9b",
    "name": "Laser box",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "607adf2e0819a1000c9028c8",
    "name": "The Legend of Question 6",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "60833e26fdfce80043f04218",
    "name": "Cracking Vigenère: unknown language",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games",
      "Strings",
      "Data Types",
      "Ciphers",
      "Algorithms",
      "Cryptography",
      "Logic",
      "Security"
    ]
  },
  {
    "id": "6085de51fdfce800066bbbca",
    "name": "Parsing \"human\" durations",
    "approved": false,
    "tags": [
      "Algorithms",
      "Parsing",
      "Logic",
      "Strings",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "60a267bd64a176003ebe4715",
    "name": "sorting via exchange of 2 elements",
    "approved": false,
    "tags": [
      "Algorithms",
      "Lists",
      "Data Structures",
      "Data",
      "Fundamentals"
    ]
  },
  {
    "id": "60b4d8a6ac544c0056e91d3b",
    "name": "Help the pilot navigate",
    "approved": false,
    "tags": [
      "Algorithms",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Logic"
    ]
  },
  {
    "id": "60c3312c92d1e80019b15438",
    "name": "Vector Shuffle by Chunk of N",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "60c657f9bbb375000d4ad53c",
    "name": "The Startup ",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Classes",
      "Basic Language Features",
      "Object-oriented Programming",
      "Programming Paradigms"
    ]
  },
  {
    "id": "60cb26909c75d00025766aca",
    "name": "Compress an array of numbers into an efficient Base 64 ",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Encoding",
      "Algorithms",
      "Logic",
      "Binary"
    ]
  },
  {
    "id": "60cc835d382b9000181e2a9a",
    "name": "Brick by Boring Brick - Mathematical expression  interpreter",
    "approved": false,
    "tags": [
      "Puzzles",
      "Algorithms",
      "Logic",
      "Interpreters",
      "Expressions",
      "Basic Language Features",
      "Fundamentals",
      "Operators",
      "Parsing",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "60ccf701382b90001826d247",
    "name": "Road To Nowhere - Reverse engineer this picture  (Golf)",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "60ce6139068ae600317cc550",
    "name": "Road To Nowhere - Reverse engineer this picture ",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "60cec7b3068ae6002582a93e",
    "name": "Two Become One - Self-extracting image",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games",
      "Strings",
      "Data Types",
      "Data"
    ]
  },
  {
    "id": "60db2dc243ca68000d1aa7d8",
    "name": "Ray tracing (simple version)",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "60de8b409ce8690026a78d9c",
    "name": "Age Calculator",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Dates/Time",
      "Data Types"
    ]
  },
  {
    "id": "60e244d75b0327001435ed5c",
    "name": "Frequency of a digit in a range taking only the prime numbers",
    "approved": false,
    "tags": [
      "Algorithms",
      "Arrays",
      "Data Types"
    ]
  },
  {
    "id": "60e72d613cfd4d00276f0bcf",
    "name": "Chain of Dominoes",
    "approved": false,
    "tags": [
      "Algorithms",
      "Lists",
      "Data Structures",
      "Structs"
    ]
  },
  {
    "id": "6100aa3a9347db000db6208a",
    "name": "Casino Adventures: Let's play roulette!",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "610b4486964fe3000844362f",
    "name": "Highest Sum of Increasing Sequence with Same Jump",
    "approved": false,
    "tags": [
      "Algorithms",
      "Sequences",
      "Arrays",
      "Data Types",
      "Logic",
      "Arithmetic",
      "Mathematics",
      "Numbers"
    ]
  },
  {
    "id": "610bbefc964fe3000f577720",
    "name": "Shift Excel columns",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Character Encodings",
      "Formats"
    ]
  },
  {
    "id": "6110f4f9511be6000ed5e388",
    "name": "Mr. Graciani shops",
    "approved": false,
    "tags": [
      "Algorithms",
      "Concurrency",
      "Computational Science",
      "Theoretical Computer Science"
    ]
  },
  {
    "id": "611917c423bde8002d1a487e",
    "name": "Basic Proof of Stake",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "614b20caeda1ac004a1bf344",
    "name": "Matrix Pooling",
    "approved": false,
    "tags": [
      "Algorithms",
      "Numbers",
      "Data Types",
      "Logic",
      "Performance"
    ]
  },
  {
    "id": "616a871e41c786002c91baa3",
    "name": "Pentomino SOLVER",
    "approved": false,
    "tags": [
      "Puzzles"
    ]
  },
  {
    "id": "6177868b5bf31f00263c4281",
    "name": "Oval",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "618433092b57b90045c571f4",
    "name": "4 By 4 Kakurasu Solver",
    "approved": false,
    "tags": [
      "Puzzles",
      "Games"
    ]
  },
  {
    "id": "6187b8700293dd0008d640dc",
    "name": "Justice Always Wins",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "618c30ad2079840007c8b27c",
    "name": "Hero suffix quest",
    "approved": false,
    "tags": [
      "Algorithms",
      "Optimization"
    ]
  },
  {
    "id": "61abb8c0bd839d0032654e2a",
    "name": "Calculate distance between convex hulls",
    "approved": false,
    "tags": [
      "Algorithms",
      "Geometry",
      "Algebra",
      "Mathematics",
      "Logic"
    ]
  },
  {
    "id": "61aceaa53f4ec1001b60e097",
    "name": "Construct the min number with given sum of digits (36-based).",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Mathematics",
      "Algorithms",
      "Logic",
      "Numbers",
      "Data Types"
    ]
  },
  {
    "id": "61afca9787f340002a9d8ada",
    "name": "Convert binary to decimal.",
    "approved": false,
    "tags": [
      "Algorithms",
      "Binary"
    ]
  },
  {
    "id": "61c084896fc3770007d8eb66",
    "name": "Hex Color to RGB Color",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Algorithms",
      "Logic",
      "Strings",
      "Data Types"
    ]
  },
  {
    "id": "61c62834ee4be500359b7f35",
    "name": "Enumerate n-tuples with given sum",
    "approved": false,
    "tags": [
      "Algorithms",
      "Iterators",
      "Control Flow",
      "Object-oriented Programming",
      "Basic Language Features",
      "Fundamentals",
      "Programming Paradigms"
    ]
  },
  {
    "id": "61cb72559a5cc900400d04e5",
    "name": "Random gradient",
    "approved": false,
    "tags": [
      "Algorithms"
    ]
  },
  {
    "id": "61cee33b2ca4fb00577dc131",
    "name": "Allocate value - aka Rounding is hard",
    "approved": false,
    "tags": [
      "Algorithms",
      "Logic",
      "Mathematics",
      "Numbers",
      "Data Types",
      "Fundamentals"
    ]
  },
  {
    "id": "61d00ebf7abfec004a6cb2f9",
    "name": "Finite automation 4: Convert εNFA or DFA to DFA and minimize",
    "approved": false,
    "tags": [
      "Fundamentals",
      "State Machines",
      "Computational Science",
      "Theoretical Computer Science",
      "Design Patterns",
      "Algorithms",
      "Logic"
    ]
  },
  {
    "id": "61ef3bd885e2b2004f811e73",
    "name": "Get Slope-Intercept form with a single point and the slope",
    "approved": false,
    "tags": [
      "Algorithms",
      "Mathematics",
      "Logic",
      "Numbers"
    ]
  },
  {
    "id": "62091881d746e50029366b0a",
    "name": "UTF-8 aware string length",
    "approved": false,
    "tags": [
      "Fundamentals",
      "UTF-8",
      "Character Encodings",
      "Formats"
    ]
  },
  {
    "id": "6214b2625b1dbb0017726369",
    "name": "Magical Boolean Triplet",
    "approved": false,
    "tags": [
      "Puzzles",
      "Advanced Language Features",
      "Fundamentals",
      "Basic Language Features",
      "Booleans",
      "Data Types",
      "Logic",
      "Operators",
      "Games",
      "Structs",
      "Data Structures"
    ]
  },
  {
    "id": "621a4dd08a729a00312fbaad",
    "name": "Transfinite train",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  },
  {
    "id": "622649e67f5f91002351af39",
    "name": "Redact  a Key-Value Pair from a Hash in Ruby  – \"The Holy Rail\" – unquest() ",
    "approved": false,
    "tags": [
      "Fundamentals",
      "Hashes",
      "Data Structures",
      "Methods",
      "Functions",
      "Object-oriented Programming",
      "Control Flow",
      "Basic Language Features",
      "Programming Paradigms"
    ]
  },
  {
    "id": "622b516915fbf70017580a32",
    "name": "guess that anime!",
    "approved": false,
    "tags": [
      "Fundamentals"
    ]
  }
]